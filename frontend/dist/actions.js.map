{"version":3,"sources":["webpack:///./frontend/src/lib/utils.js","webpack:///./frontend/src/scenes/actions/ActionsTable.js","webpack:///./frontend/src/scenes/actions/Actions.js"],"names":["uuid","replace","c","crypto","getRandomValues","Uint8Array","toString","toParams","obj","Object","entries","filter","map","key","val","_isAMomentObject","encodeURIComponent","format","JSON","stringify","handleVal","join","fromParams","window","location","search","slice","split","reduce","a","b","decodeURIComponent","percentage","division","toLocaleString","undefined","style","maximumFractionDigits","Loading","className","TableRowLoading","colSpan","asOverlay","padding","textAlign","CloseButton","props","aria-hidden","Card","title","children","DeleteWithUndo","href","onClick","e","preventDefault","deleteWithUndo","undo","api","update","endpoint","object","id","deleted","then","callback","response","name","toast","toastId","propTypes","PropTypes","string","isRequired","shape","number","selectStyle","control","base","height","minHeight","indicatorsContainer","input","paddingBottom","paddingTop","margin","opacity","valueContainer","marginTop","option","debounce","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","capitalizeFirstLetter","charAt","toUpperCase","operatorMap","exact","is_not","icontains","not_icontains","gt","lt","operatorEntries","reverse","formatFilterName","str","value","includes","deletePersonData","person","confirm","objectsEqual","obj1","obj2","ActionsTable","state","actions","newEvents","loading","fetchActions","bind","poller","setState","get","results","Link","to","maxWidth","target","position","scope","length","action","count","steps","step","event","url","fontSize","marginLeft","Component","Actions"],"mappings":"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","file":"actions.js","sourcesContent":["import React from 'react'\nimport api from './api'\nimport { toast } from 'react-toastify'\nimport PropTypes from 'prop-types'\nimport { Spin } from 'antd'\n\nexport function uuid() {\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n        (c ^ (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))).toString(16)\n    )\n}\n\nexport let toParams = obj => {\n    let handleVal = val => {\n        if (val._isAMomentObject) return encodeURIComponent(val.format('YYYY-MM-DD'))\n        val = typeof val === 'object' ? JSON.stringify(val) : val\n        return encodeURIComponent(val)\n    }\n    return Object.entries(obj)\n        .filter(([key, val]) => val)\n        .map(([key, val]) => `${key}=${handleVal(val)}`)\n        .join('&')\n}\nexport let fromParams = () =>\n    window.location.search != ''\n        ? window.location.search\n              .slice(1)\n              .split('&')\n              .reduce((a, b) => {\n                  b = b.split('=')\n                  a[b[0]] = decodeURIComponent(b[1])\n                  return a\n              }, {})\n        : {}\n\nexport let colors = ['success', 'secondary', 'warning', 'primary', 'danger', 'info', 'dark', 'light']\nexport let percentage = division =>\n    division\n        ? division.toLocaleString(undefined, {\n              style: 'percent',\n              maximumFractionDigits: 2,\n          })\n        : ''\n\nexport let Loading = () => (\n    <div className=\"loading-overlay\">\n        <div></div>\n        <Spin />\n    </div>\n)\n\nexport const TableRowLoading = ({ colSpan = 1, asOverlay = false }) => (\n    <tr className={asOverlay ? 'loading-overlay over-table' : ''}>\n        <td colSpan={colSpan} style={{ padding: 50, textAlign: 'center' }}>\n            <Spin />\n        </td>\n    </tr>\n)\n\nexport let CloseButton = props => {\n    return (\n        <span {...props} className={'close cursor-pointer ' + props.className} style={{ ...props.style }}>\n            <span aria-hidden=\"true\">&times;</span>\n        </span>\n    )\n}\n\nexport function Card(props) {\n    return (\n        <div {...props} className={'card ' + props.className} style={props.style} title=\"\">\n            {props.title && <div className=\"card-header\">{props.title}</div>}\n            {props.children}\n        </div>\n    )\n}\n\nexport let DeleteWithUndo = props => {\n    let deleteWithUndo = undo => {\n        api.update('api/' + props.endpoint + '/' + props.object.id, {\n            ...props.object,\n            deleted: undo ? false : true,\n        }).then(() => {\n            props.callback()\n            let response = (\n                <div>\n                    {!undo ? (\n                        <span>\n                            \"<strong>{props.object.name}</strong>\" deleted.{' '}\n                            <a\n                                href=\"#\"\n                                onClick={e => {\n                                    e.preventDefault()\n                                    deleteWithUndo(true)\n                                }}\n                            >\n                                Click here to undo\n                            </a>\n                        </span>\n                    ) : (\n                        <span>Delete un-done</span>\n                    )}\n                </div>\n            )\n            toast(response, { toastId: 'delete-item-' + props.object.id })\n        })\n    }\n\n    return (\n        <a\n            href=\"#\"\n            onClick={e => {\n                e.preventDefault()\n                deleteWithUndo()\n            }}\n            className={props.className}\n            style={props.style}\n        >\n            {props.children}\n        </a>\n    )\n}\nDeleteWithUndo.propTypes = {\n    endpoint: PropTypes.string.isRequired,\n    object: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        id: PropTypes.number.isRequired,\n    }).isRequired,\n    className: PropTypes.string,\n    style: PropTypes.object,\n}\n\nexport let selectStyle = {\n    control: base => ({\n        ...base,\n        height: 31,\n        minHeight: 31,\n    }),\n    indicatorsContainer: base => ({\n        ...base,\n        height: 31,\n    }),\n    input: base => ({\n        ...base,\n        paddingBottom: 0,\n        paddingTop: 0,\n        margin: 0,\n        opacity: 1,\n    }),\n    valueContainer: base => ({\n        ...base,\n        padding: '0 8px',\n        marginTop: -2,\n    }),\n    option: base => ({\n        ...base,\n        padding: '2px 15px',\n    }),\n}\n\nexport let debounce = (func, wait, immediate) => {\n    var timeout\n    return function() {\n        var context = this,\n            args = arguments\n        var later = function() {\n            timeout = null\n            if (!immediate) func.apply(context, args)\n        }\n        var callNow = immediate && !timeout\n        clearTimeout(timeout)\n        timeout = setTimeout(later, wait)\n        if (callNow) func.apply(context, args)\n    }\n}\n\nexport const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1)\n}\n\nexport const operatorMap = {\n    exact: '= equals',\n    is_not: \"≠ doesn't equal\",\n    icontains: '∋ contains',\n    not_icontains: \"∌ doesn't contain\",\n    gt: '> greater than',\n    lt: '< lower than',\n}\n\nconst operatorEntries = Object.entries(operatorMap).reverse()\n\nexport const formatFilterName = str => {\n    for (let [key, value] of operatorEntries) {\n        if (str.includes(key)) return str.replace('__' + key, '') + ` ${value.split(' ')[0]} `\n    }\n    return str + ` ${operatorMap['exact'].split(' ')[0]} `\n}\n\nexport const deletePersonData = (person, callback) => {\n    window.confirm('Are you sure you want to delete this user? This cannot be undone') &&\n        api.delete('api/person/' + person.id).then(() => {\n            toast('Person succesfully deleted.')\n            if (callback) callback()\n        })\n}\n\nexport const objectsEqual = (obj1, obj2) => JSON.stringify(obj1) === JSON.stringify(obj2)\n","import React, { Component } from 'react'\nimport api from 'lib/api'\nimport { Link } from 'lib/components/Link'\nimport { DeleteWithUndo, TableRowLoading } from 'lib/utils'\n\nexport class ActionsTable extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            actions: [],\n            newEvents: [],\n            loading: true,\n        }\n        this.fetchActions = this.fetchActions.bind(this)\n        this.fetchActions()\n    }\n    fetchActions() {\n        clearTimeout(this.poller)\n        if (!this.state.loading) this.setState({ loading: true })\n        api.get('api/action/?include_count=1').then(actions => {\n            this.setState({ actions: actions.results, loading: false })\n        })\n    }\n\n    render() {\n        let { actions, loading } = this.state\n        return (\n            <div>\n                <div className=\"btn-group float-right\">\n                    <Link to=\"/action\" className=\"btn btn-success\">\n                        <i className=\"fi flaticon-add\" />\n                        &nbsp; New action\n                    </Link>\n                </div>\n                <h1>Actions</h1>\n                <p style={{ maxWidth: 600 }}>\n                    <i>\n                        Actions are PostHog’s way of easily cleaning up a large amount of Event data. Actions consist of\n                        one or more events that you have decided to put into a manually-labelled bucket. They're used in\n                        Funnels, Live actions and Trends.\n                        <br />\n                        <br />\n                        <a href=\"https://github.com/PostHog/posthog/wiki/Actions\" target=\"_blank\">\n                            See documentation\n                        </a>\n                    </i>\n                </p>\n\n                <table className=\"table\" style={{ position: 'relative' }}>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Action ID</th>\n                            <th scope=\"col\">Volume</th>\n                            <th scope=\"col\">Type</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {loading && <TableRowLoading colSpan={4} asOverlay={actions.length > 0} />}\n                        {actions && actions.length === 0 && (\n                            <tr>\n                                <td>You don't have any actions yet.</td>\n                            </tr>\n                        )}\n                        {actions &&\n                            actions.map(action => (\n                                <tr key={action.id}>\n                                    <td>\n                                        <Link to={'/action/' + action.id}>{action.name}</Link>\n                                    </td>\n                                    <td>{action.count}</td>\n                                    <td>\n                                        {action.steps.map(step => (\n                                            <div key={step.id}>\n                                                {(() => {\n                                                    switch (step.event) {\n                                                        case '$autocapture':\n                                                            return 'Autocapture'\n                                                        case '$pageview':\n                                                            return 'URL matches ' + step.url\n                                                        default:\n                                                            return 'Event: ' + step.event\n                                                    }\n                                                })()}\n                                            </div>\n                                        ))}\n                                    </td>\n                                    <td style={{ fontSize: 16 }}>\n                                        <Link to={'/action/' + action.id}>\n                                            <i className=\"fi flaticon-edit\" />\n                                        </Link>\n                                        <DeleteWithUndo\n                                            endpoint=\"action\"\n                                            object={action}\n                                            className=\"text-danger\"\n                                            style={{ marginLeft: 8 }}\n                                            callback={this.fetchActions}\n                                        >\n                                            <i className=\"fi flaticon-basket\" />\n                                        </DeleteWithUndo>\n                                    </td>\n                                </tr>\n                            ))}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { ActionsTable } from './ActionsTable'\n\nexport class Actions extends Component {\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return <ActionsTable {...this.props} />\n    }\n}\n"],"sourceRoot":""}