{"version":3,"sources":["webpack:///./frontend/src/lib/utils.js","webpack:///./frontend/src/scenes/trends/trendsLogic.js","webpack:///./frontend/src/models/actionsModel.js","webpack:///./frontend/src/lib/components/PropertyFilters/PropertyValue.js","webpack:///./frontend/src/lib/components/PropertyFilters/PropertyFilter.js","webpack:///./frontend/src/lib/components/PropertyFilters/propertyFilterLogic.js","webpack:///./frontend/src/lib/components/PropertyFilters/PropertyFilters.js","webpack:///./frontend/src/lib/components/DateFilter.js","webpack:///./frontend/src/scenes/funnels/funnelLogic.js","webpack:///./frontend/src/scenes/trends/ActionFilter/entityFilterLogic.js","webpack:///./frontend/src/scenes/trends/ActionSelectInfo.js","webpack:///./frontend/src/lib/components/ActionSelectTab.js","webpack:///./frontend/src/lib/components/ActionSelectBox.js","webpack:///./frontend/src/scenes/trends/ActionFilter/ActionFilterDropdown.js","webpack:///./frontend/src/scenes/trends/ActionFilter/ActionFilterRow.js","webpack:///./frontend/src/scenes/trends/ActionFilter/ActionFilter.js","webpack:///./frontend/src/scenes/funnels/FunnelViz.js","webpack:///./node_modules/funnel-graph-js/index.js","webpack:///./frontend/src/lib/components/SaveToDashboard.js","webpack:///./node_modules/funnel-graph-js/src/js/number.js","webpack:///./node_modules/funnel-graph-js/src/js/path.js","webpack:///./node_modules/funnel-graph-js/src/js/graph.js","webpack:///./node_modules/funnel-graph-js/src/js/random.js","webpack:///./node_modules/funnel-graph-js/src/js/main.js","webpack:///./frontend/src/scenes/funnels/EditFunnel.js","webpack:///./frontend/src/scenes/funnels/People.js","webpack:///./frontend/src/scenes/funnels/Funnel.js"],"names":["uuid","replace","c","crypto","getRandomValues","Uint8Array","toString","toParams","obj","Object","entries","filter","map","key","val","_isAMomentObject","encodeURIComponent","format","JSON","stringify","handleVal","join","fromParams","window","location","search","slice","split","reduce","a","b","decodeURIComponent","percentage","division","toLocaleString","undefined","style","maximumFractionDigits","Loading","className","TableRowLoading","colSpan","asOverlay","padding","textAlign","CloseButton","props","aria-hidden","Card","title","children","DeleteWithUndo","href","onClick","e","preventDefault","deleteWithUndo","undo","api","update","endpoint","object","id","deleted","then","callback","response","name","toast","toastId","propTypes","PropTypes","string","isRequired","shape","number","selectStyle","control","base","height","minHeight","indicatorsContainer","input","paddingBottom","paddingTop","margin","opacity","valueContainer","marginTop","option","debounce","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","capitalizeFirstLetter","charAt","toUpperCase","operatorMap","exact","is_not","icontains","not_icontains","gt","lt","operatorEntries","reverse","formatFilterName","str","value","includes","deletePersonData","person","confirm","objectsEqual","obj1","obj2","EntityTypes","ACTIONS","EVENTS","NEW_ENTITY","disableMinuteFor","dStart","mStart","yStart","all","disableHourFor","ViewType","FILTERS","SESSIONS","cleanFilters","filters","interval","autocorrectInterval","display","session","actions","Array","isArray","events","properties","filterClientSideParams","people_day","people_action","stickiness_days","date_from","minute_disabled","hour_disabled","trendsLogic","kea","dashboardItemId","connect","values","userLogic","actionsModel","loaders","results","loadResults","activeView","get","toAPIParams","setFilters","mergeFilters","fromUrl","setDisplay","loadPeople","action","day","breakdown_value","setShowingPeople","isShowing","setPeople","people","count","setActiveView","type","setCachedUrl","url","reducers","state","router","selectors","searchParams","_","cachedUrls","showingPeople","peopleAction","find","parseInt","peopleDay","listeners","breakpoint","params","entityId","shown_as","date_to","breakdown","filterParams","actionToUrl","pathname","cachedUrl","urlToAction","cleanSearchParams","keys","length","eventNames","event","order","actionContains","steps","step","__default","loadActions","actionsGrouped","data","label","options","forEach","push","afterMount","PropertyValue","loadPropertyValues","bind","ref","React","createRef","propertyKey","propValues","property","onSet","isEditing","loadOptions","defaultOptions","cacheOptions","formatCreateLabel","inputValue","allowCreateWhileLoading","createOptionPosition","placeholder","width","onChange","out","setState","select","blur","autoFocus","styles","onFocus","onInputChange","actionMeta","Component","any","operatorOptions","PropertyFilter","index","onComplete","logic","useValues","useActions","setFilter","item","remove","minWidth","isLoading","openMenuOnFocus","operator","isNaN","propertyFilterLogic","pageKey","loadEventProperties","setProperties","newFilter","loadPeopleProperties","loadPeoplePropertiesSuccess","propertyFilters","newFilters","newState","i","dict","result","f","error","mappedFilters","eventProperties","FilterRow","useState","open","setOpen","align","trigger","onVisibleChange","visible","defaultVisible","placement","content","maxWidth","overflow","textOverflow","cursor","float","PropertyFilters","marginBottom","dateMapping","Today","Yesterday","isDate","DateFilter","dateRangeOpen","from_date","to_date","v","setDate","document","getElementById","focus","date","rangeDateFrom","rangeDateTo","moment","test","dateFrom","toDate","dateTo","isMoment","bordered","dateFilterToText","marginRight","onBlur","listHeight","dropdownMatchSelectWidth","dropdownRender","menu","DatePickerDropdown","dropdownOnClick","onDateFromChange","onDateToChange","onApplyClick","onClickOutside","Option","dropdownRef","useRef","calendarOpen","setCalendarOpen","current","contains","target","useEffect","addEventListener","removeEventListener","color","fontWeight","popupStyle","zIndex","onOpenChange","defaultValue","disabled","funnelLogic","setFunnel","funnel","loadFunnel","updateFunnel","createFunnel","create","stepsWithCount","loadStepsWithCount","peopleSorted","score","indexOf","sort","isStepsEmpty","loadStepsWithCountSuccess","updateFunnelSuccess","createFunnelSuccess","toLocalFilters","toFilters","localFilters","entityFilterLogic","typeKey","selectFilter","updateFilterMath","math","updateFilter","removeLocalFilter","addFilter","updateFilterProperty","setLocalFilters","selectedFilter","entities","ActionSelectInfo","prevProps","infoDiv","rect","boundingRect","top","left","componentDidMount","entity","isOpen","listStyle","selector","tag_name","text","url_matching","ActionSelectTab","entityType","chooseEntityType","allTypes","flexDirection","borderBottom","backgroundColor","flex","justifyContent","borderTopLeftRadius","borderTopRightRadius","ActionSelectTabs","selected","determineActiveTab","activeTab","setActiveTab","child","labels","ActionSelectPanel","infoOpen","onMouseOver","infoBoundingRect","getBoundingClientRect","infoActionId","onMouseOut","redirect","onHover","relatedTarget","tagName","onSelect","defaultMenuIsOpen","active","components","message","ActionFilterDropdown","eventNamesGrouped","deselect","ActionPanelContainer","panelIndex","alignItems","Link","to","array","bool","ActionFilterRow","node","entityFilterVisible","setEntityFilterVisible","border","MathSelector","onMathSelect","determineFilterLabel","marginLeft","position","items","Dropdown","toLowerCase","buttonClassName","ActionFilter","FunnelViz","buildChart","fetchFunnel","call","funnel_id","container","innerHTML","graph","FunnelGraph","colors","displayPercent","createContainer","graphContainer","createElement","classList","add","appendChild","draw","module","exports","default","momentToString","SaveToDashboard","Modal","save","closeToast","Toast","openModal","onDismiss","onSubmit","required","roundPoint","Math","round","formatNumber","Number","createCurves","x1","y1","x2","y2","createVerticalCurves","createPath","X","Y","YNext","pop","createVerticalPath","XNext","setAttrs","element","attributes","setAttribute","removeAttrs","attribute","removeAttribute","createSVGElement","el","createElementNS","defaultColors","getDefaultColors","colorSet","abs","random","splice","prefix","containerSelector","gradientDirection","direction","getLabels","subLabels","getSubLabels","getValues","percentages","createPercentages","is2d","getSubDataSize","subLabelValue","size","getDataSize","points","fullDimension","isVertical","getHeight","getWidth","getFullDimension","dimension","totalValues","getValues2d","max","percentagesFull","getPercentages2d","pointsOfFirstPath","p","newPoints","j","point","concat","getGraphType","Error","holder","labelElement","textContent","valueNumber","percentageValue","segmentPercentages","percentageList","twoDimPercentages","subLabel","subLabelDisplayValue","subLabelsHolder","subLabelsHTML","generateLegendBackground","querySelector","HTMLElement","d","h","w","valueSet","sum","total","svg","path","defs","gradientName","gradient","numberOfColors","offset","fill","stroke","valuesNum","getCrossAxisPoints","fillMode","applyGradient","clientWidth","clientHeight","paths","getMainAxisPoints","cross","next","m","getSVG","querySelectorAll","getPathDefinitions","definition","makeSVG","addLabels","addSubLabels","drawPaths","makeVertical","makeHorizontal","gradients","gradientMakeVertical","gradientMakeHorizontal","prototype","o","updateHeight","updateWidth","updateData","EditFunnel","funnelId","actionsLoading","htmlType","People","peopleLoading","action_id","Funnel","funnelLoading","stepsWithCountLoading"],"mappings":"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","file":"funnel.js","sourcesContent":["import React from 'react'\nimport api from './api'\nimport { toast } from 'react-toastify'\nimport PropTypes from 'prop-types'\nimport { Spin } from 'antd'\n\nexport function uuid() {\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n        (c ^ (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))).toString(16)\n    )\n}\n\nexport let toParams = obj => {\n    let handleVal = val => {\n        if (val._isAMomentObject) return encodeURIComponent(val.format('YYYY-MM-DD'))\n        val = typeof val === 'object' ? JSON.stringify(val) : val\n        return encodeURIComponent(val)\n    }\n    return Object.entries(obj)\n        .filter(([key, val]) => val)\n        .map(([key, val]) => `${key}=${handleVal(val)}`)\n        .join('&')\n}\nexport let fromParams = () =>\n    window.location.search != ''\n        ? window.location.search\n              .slice(1)\n              .split('&')\n              .reduce((a, b) => {\n                  b = b.split('=')\n                  a[b[0]] = decodeURIComponent(b[1])\n                  return a\n              }, {})\n        : {}\n\nexport let colors = ['success', 'secondary', 'warning', 'primary', 'danger', 'info', 'dark', 'light']\nexport let percentage = division =>\n    division\n        ? division.toLocaleString(undefined, {\n              style: 'percent',\n              maximumFractionDigits: 2,\n          })\n        : ''\n\nexport let Loading = () => (\n    <div className=\"loading-overlay\">\n        <div></div>\n        <Spin />\n    </div>\n)\n\nexport const TableRowLoading = ({ colSpan = 1, asOverlay = false }) => (\n    <tr className={asOverlay ? 'loading-overlay over-table' : ''}>\n        <td colSpan={colSpan} style={{ padding: 50, textAlign: 'center' }}>\n            <Spin />\n        </td>\n    </tr>\n)\n\nexport let CloseButton = props => {\n    return (\n        <span {...props} className={'close cursor-pointer ' + props.className} style={{ ...props.style }}>\n            <span aria-hidden=\"true\">&times;</span>\n        </span>\n    )\n}\n\nexport function Card(props) {\n    return (\n        <div {...props} className={'card ' + props.className} style={props.style} title=\"\">\n            {props.title && <div className=\"card-header\">{props.title}</div>}\n            {props.children}\n        </div>\n    )\n}\n\nexport let DeleteWithUndo = props => {\n    let deleteWithUndo = undo => {\n        api.update('api/' + props.endpoint + '/' + props.object.id, {\n            ...props.object,\n            deleted: undo ? false : true,\n        }).then(() => {\n            props.callback()\n            let response = (\n                <div>\n                    {!undo ? (\n                        <span>\n                            \"<strong>{props.object.name}</strong>\" deleted.{' '}\n                            <a\n                                href=\"#\"\n                                onClick={e => {\n                                    e.preventDefault()\n                                    deleteWithUndo(true)\n                                }}\n                            >\n                                Click here to undo\n                            </a>\n                        </span>\n                    ) : (\n                        <span>Delete un-done</span>\n                    )}\n                </div>\n            )\n            toast(response, { toastId: 'delete-item-' + props.object.id })\n        })\n    }\n\n    return (\n        <a\n            href=\"#\"\n            onClick={e => {\n                e.preventDefault()\n                deleteWithUndo()\n            }}\n            className={props.className}\n            style={props.style}\n        >\n            {props.children}\n        </a>\n    )\n}\nDeleteWithUndo.propTypes = {\n    endpoint: PropTypes.string.isRequired,\n    object: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        id: PropTypes.number.isRequired,\n    }).isRequired,\n    className: PropTypes.string,\n    style: PropTypes.object,\n}\n\nexport let selectStyle = {\n    control: base => ({\n        ...base,\n        height: 31,\n        minHeight: 31,\n    }),\n    indicatorsContainer: base => ({\n        ...base,\n        height: 31,\n    }),\n    input: base => ({\n        ...base,\n        paddingBottom: 0,\n        paddingTop: 0,\n        margin: 0,\n        opacity: 1,\n    }),\n    valueContainer: base => ({\n        ...base,\n        padding: '0 8px',\n        marginTop: -2,\n    }),\n    option: base => ({\n        ...base,\n        padding: '2px 15px',\n    }),\n}\n\nexport let debounce = (func, wait, immediate) => {\n    var timeout\n    return function() {\n        var context = this,\n            args = arguments\n        var later = function() {\n            timeout = null\n            if (!immediate) func.apply(context, args)\n        }\n        var callNow = immediate && !timeout\n        clearTimeout(timeout)\n        timeout = setTimeout(later, wait)\n        if (callNow) func.apply(context, args)\n    }\n}\n\nexport const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1)\n}\n\nexport const operatorMap = {\n    exact: '= equals',\n    is_not: \"≠ doesn't equal\",\n    icontains: '∋ contains',\n    not_icontains: \"∌ doesn't contain\",\n    gt: '> greater than',\n    lt: '< lower than',\n}\n\nconst operatorEntries = Object.entries(operatorMap).reverse()\n\nexport const formatFilterName = str => {\n    for (let [key, value] of operatorEntries) {\n        if (str.includes(key)) return str.replace('__' + key, '') + ` ${value.split(' ')[0]} `\n    }\n    return str + ` ${operatorMap['exact'].split(' ')[0]} `\n}\n\nexport const deletePersonData = (person, callback) => {\n    window.confirm('Are you sure you want to delete this user? This cannot be undone') &&\n        api.delete('api/person/' + person.id).then(() => {\n            toast('Person succesfully deleted.')\n            if (callback) callback()\n        })\n}\n\nexport const objectsEqual = (obj1, obj2) => JSON.stringify(obj1) === JSON.stringify(obj2)\n","import { kea } from 'kea'\n\nimport api from 'lib/api'\nimport { objectsEqual, toParams as toAPIParams } from 'lib/utils'\nimport { actionsModel } from '~/models/actionsModel'\nimport { userLogic } from 'scenes/userLogic'\nimport { router } from 'kea-router'\n\nexport const EntityTypes = {\n    ACTIONS: 'actions',\n    EVENTS: 'events',\n    NEW_ENTITY: 'new_entity',\n}\n\nexport const disableMinuteFor = {\n    dStart: false,\n    '-1d': false,\n    '-7d': true,\n    '-14d': true,\n    '-30d': true,\n    '-90d': true,\n    mStart: true,\n    '-1mStart': true,\n    yStart: true,\n    all: true,\n}\n\nexport const disableHourFor = {\n    dStart: false,\n    '-1d': false,\n    '-7d': false,\n    '-14d': false,\n    '-30d': false,\n    '-90d': true,\n    mStart: false,\n    '-1mStart': false,\n    yStart: true,\n    all: true,\n}\n\nexport const ViewType = {\n    FILTERS: 'FILTERS',\n    SESSIONS: 'SESSIONS',\n}\n\nfunction cleanFilters(filters) {\n    return {\n        ...filters,\n        interval: autocorrectInterval(filters),\n        display: filters.session && filters.session === 'dist' ? 'ActionsTable' : filters.display,\n        actions: Array.isArray(filters.actions) ? filters.actions : undefined,\n        events: Array.isArray(filters.events) ? filters.events : undefined,\n        properties: filters.properties || {},\n    }\n}\n\nfunction filterClientSideParams(filters) {\n    const {\n        people_day: _skip_this_one,\n        people_action: _skip_this_too,\n        stickiness_days: __and_this,\n        ...newFilters\n    } = filters\n\n    return newFilters\n}\n\nfunction autocorrectInterval({ date_from, interval }) {\n    if (!interval) return 'day' // undefined/uninitialized\n\n    const minute_disabled = disableMinuteFor[date_from] && interval === 'minute'\n    const hour_disabled = disableHourFor[date_from] && interval === 'hour'\n\n    if (minute_disabled) {\n        return 'hour'\n    } else if (hour_disabled) {\n        return 'day'\n    } else {\n        return interval\n    }\n}\n\n// props:\n// - dashboardItemId\n// - filters\nexport const trendsLogic = kea({\n    key: props => props.dashboardItemId || 'all_trends',\n\n    connect: {\n        values: [userLogic, ['eventNames'], actionsModel, ['actions']],\n    },\n\n    loaders: ({ values }) => ({\n        results: {\n            loadResults: async () => {\n                if (values.activeView === ViewType.SESSIONS) {\n                    return await api.get('api/event/sessions/?' + toAPIParams(filterClientSideParams(values.filters)))\n                }\n                return await api.get('api/action/trends/?' + toAPIParams(filterClientSideParams(values.filters)))\n            },\n        },\n    }),\n\n    actions: () => ({\n        setFilters: (filters, mergeFilters = true, fromUrl = false) => ({ filters, mergeFilters, fromUrl }),\n        setDisplay: display => ({ display }),\n\n        loadPeople: (action, day, breakdown_value) => ({ action, day, breakdown_value }),\n        setShowingPeople: isShowing => ({ isShowing }),\n        setPeople: (people, count, action, day, breakdown_value) => ({ people, count, action, day, breakdown_value }),\n        setActiveView: type => ({ type }),\n        setCachedUrl: (type, url) => ({ type, url }),\n    }),\n\n    reducers: ({ actions, props }) => ({\n        filters: [\n            props.dashboardItemId ? props.filters : state => cleanFilters(router.selectors.searchParams(state)),\n            {\n                [actions.setFilters]: (state, { filters, mergeFilters }) => {\n                    return cleanFilters({\n                        ...(mergeFilters ? state : {}),\n                        ...filters,\n                    })\n                },\n            },\n        ],\n        people: [\n            null,\n            {\n                [actions.setFilters]: () => null,\n                [actions.setPeople]: (_, people) => people,\n            },\n        ],\n        cachedUrls: [\n            {},\n            {\n                [actions.setCachedUrl]: (state, { type, url }) => ({ ...state, [type]: url }),\n            },\n        ],\n        showingPeople: [\n            false,\n            {\n                [actions.loadPeople]: () => true,\n                [actions.setShowingPeople]: (_, { isShowing }) => isShowing,\n            },\n        ],\n    }),\n\n    selectors: ({ selectors }) => ({\n        activeView: [() => [selectors.filters], filters => (filters.session ? ViewType.SESSIONS : ViewType.FILTERS)],\n        peopleAction: [\n            () => [selectors.filters, selectors.actions],\n            (filters, actions) =>\n                filters.people_action ? actions.find(a => a.id === parseInt(filters.people_action)) : null,\n        ],\n        peopleDay: [() => [selectors.filters], filters => filters.people_day],\n    }),\n\n    listeners: ({ actions, values }) => ({\n        [actions.setDisplay]: async ({ display }) => {\n            actions.setFilters({ display })\n        },\n        [actions.loadPeople]: async ({ action, day, breakdown_value }, breakpoint) => {\n            const params = filterClientSideParams({\n                ...values.filters,\n                entityId: action.id,\n                type: action.type,\n            })\n\n            if (values.filters.shown_as === 'Stickiness') {\n                params.stickiness_days = day\n            } else {\n                params.date_from = day\n                params.date_to = day\n            }\n            if (breakdown_value) {\n                params.properties = { ...params.properties, [params.breakdown]: breakdown_value }\n            }\n\n            const filterParams = toAPIParams(params)\n            actions.setPeople(null, null, action, day, breakdown_value)\n            const people = await api.get(`api/action/people/?include_last_event=1&${filterParams}`)\n            breakpoint()\n            actions.setPeople(people[0]?.people, people[0]?.count, action, day, breakdown_value)\n        },\n    }),\n\n    actionToUrl: ({ actions, values, props }) => ({\n        [actions.setFilters]: ({ fromUrl }) => {\n            if (props.dashboardItemId) {\n                return // don't use the URL if on the dashboard\n            }\n            if (!fromUrl) {\n                return ['/trends', values.filters]\n            }\n        },\n        [actions.setActiveView]: ({ type }) => {\n            if (props.dashboardItemId) {\n                return // don't use the URL if on the dashboard\n            }\n            actions.setCachedUrl(values.activeView, window.location.pathname + window.location.search)\n            const cachedUrl = values.cachedUrls[type]\n            if (cachedUrl) {\n                return cachedUrl\n            }\n            return ['/trends', type === ViewType.SESSIONS ? { session: 'avg' } : {}]\n        },\n    }),\n\n    urlToAction: ({ actions, values, props }) => ({\n        '/trends': (_, searchParams) => {\n            if (props.dashboardItemId) {\n                return // don't use the URL if on the dashboard\n            }\n\n            const cleanSearchParams = cleanFilters(searchParams)\n\n            // opening /trends without any params, just open $pageview, $screen or the first random event\n            if (Object.keys(searchParams).length === 0 && values.eventNames && values.eventNames[0]) {\n                const event = values.eventNames.includes('$pageview')\n                    ? '$pageview'\n                    : values.eventNames.includes('$screen')\n                    ? '$screen'\n                    : values.eventNames[0]\n\n                cleanSearchParams[EntityTypes.EVENTS] = [\n                    {\n                        id: event,\n                        name: event,\n                        type: EntityTypes.EVENTS,\n                        order: 0,\n                    },\n                ]\n            }\n\n            if (!objectsEqual(cleanSearchParams, values.filters)) {\n                actions.setFilters(cleanSearchParams, false, true)\n            }\n        },\n    }),\n})\n","import { kea } from 'kea'\nimport api from 'lib/api'\n\nconst actionContains = (action, event) => {\n    return action.steps.filter(step => step.event == event).length > 0\n}\n\nexport const actionsModel = kea({\n    loaders: () => ({\n        actions: {\n            __default: [],\n            loadActions: async () => {\n                const response = await api.get('api/action')\n                return response.results\n            },\n        },\n    }),\n    selectors: ({ selectors }) => ({\n        actionsGrouped: [\n            () => [selectors.actions],\n            actions => {\n                let data = [\n                    { label: 'Autocapture', options: [] },\n                    { label: 'Event', options: [] },\n                    { label: 'Pageview', options: [] },\n                ]\n                actions.forEach(action => {\n                    let format = { label: action.name, value: action.id }\n                    if (actionContains(action, '$autocapture')) data[0].options.push(format)\n                    if (actionContains(action, '$pageview')) data[2].options.push(format)\n                    if (!actionContains(action, '$autocapture') && !actionContains(action, '$pageview'))\n                        data[1].options.push(format)\n                })\n                return data\n            },\n        ],\n    }),\n\n    events: ({ actions }) => ({\n        afterMount: actions.loadActions,\n    }),\n})\n","import React, { Component } from 'react'\nimport api from '../../api'\nimport AsyncCreatableSelect from 'react-select/async-creatable/dist/react-select.esm'\nimport { selectStyle, debounce } from '../../utils'\nimport PropTypes from 'prop-types'\n\nexport class PropertyValue extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { input: props.value }\n        this.loadPropertyValues = debounce(this.loadPropertyValues.bind(this), 250)\n        this.ref = React.createRef()\n    }\n    loadPropertyValues(value, callback) {\n        let key = this.props.propertyKey.split('__')[0]\n        api.get('api/' + this.props.endpoint + '/values/?key=' + key + (value ? '&value=' + value : '')).then(\n            propValues =>\n                callback(\n                    propValues.map(property => ({\n                        label: property.name ? property.name : '(empty)',\n                        value: property.name,\n                    }))\n                )\n        )\n    }\n    render() {\n        let { propertyKey, onSet, value } = this.props\n        let { isEditing, input } = this.state\n        return (\n            <span ref={this.ref} className=\"property-value\">\n                <AsyncCreatableSelect\n                    loadOptions={this.loadPropertyValues}\n                    defaultOptions={true}\n                    cacheOptions\n                    formatCreateLabel={inputValue => 'Specify: ' + inputValue}\n                    allowCreateWhileLoading={true}\n                    createOptionPosition=\"first\"\n                    key={propertyKey} // forces a reload of the component when the property changes\n                    placeholder=\"Property value\"\n                    style={{ width: 200 }}\n                    value={{ label: value, value: value }}\n                    onChange={out => {\n                        onSet(propertyKey, out.value)\n                        this.setState({ input: out.value })\n                        this.select.blur()\n                    }}\n                    autoFocus={!value}\n                    styles={selectStyle}\n                    ref={ref => {\n                        this.select = ref\n                    }}\n                    // This is a series of hacks to make the text editable\n                    inputValue={isEditing ? this.state.input : ''}\n                    onFocus={() => this.setState({ isEditing: true })}\n                    onInputChange={(input, actionMeta) => {\n                        if (actionMeta.action === 'input-change') {\n                            this.setState({ input })\n                            return input\n                        }\n                        return this.state.input\n                    }}\n                />\n            </span>\n        )\n    }\n}\nPropertyValue.propTypes = {\n    propertyKey: PropTypes.string.isRequired,\n    value: PropTypes.any.isRequired,\n    onSet: PropTypes.func.isRequired,\n}\n","import React from 'react'\nimport Select from 'react-select'\nimport { selectStyle, operatorMap } from 'lib/utils'\nimport { PropertyValue } from './PropertyValue'\nimport { useValues, useActions } from 'kea'\n\nconst operatorOptions = Object.entries(operatorMap).map(([key, value]) => ({\n    label: value,\n    value: key,\n}))\n\nexport function PropertyFilter({ index, endpoint, onComplete, logic }) {\n    const { properties, filters } = useValues(logic)\n    const { setFilter, remove } = useActions(logic)\n    let item = filters[index]\n    let key = Object.keys(item)[0] ? Object.keys(item)[0].split('__') : []\n    let value = Object.values(item)[0]\n    return (\n        <div className=\"row\" style={{ margin: '0.5rem -15px', minWidth: key[0] ? 700 : 200 }}>\n            {properties && (\n                <div className={key[0] ? 'col-4' : 'col'}>\n                    <Select\n                        options={properties}\n                        value={[{ label: key[0], value: key[0] }]}\n                        isLoading={!properties}\n                        placeholder=\"Property key\"\n                        onChange={item =>\n                            setFilter(\n                                index,\n                                item.value + (key[1] ? '__' + key[1] : ''),\n                                item.value !== key[0] ? '' : value\n                            )\n                        }\n                        styles={selectStyle}\n                        autoFocus={!key[0]}\n                        openMenuOnFocus={true}\n                    />\n                </div>\n            )}\n\n            {key[0] && (\n                <div className=\"col-3 pl-0\">\n                    <Select\n                        options={operatorOptions}\n                        style={{ width: 200 }}\n                        value={[\n                            {\n                                label: operatorMap[key[1]] || '= equals',\n                                value: key[1],\n                            },\n                        ]}\n                        placeholder=\"Property key\"\n                        onChange={operator => setFilter(index, key[0] + '__' + operator.value, value)}\n                        styles={selectStyle}\n                    />\n                </div>\n            )}\n            {key[0] && (\n                <div className=\"col-5 pl-0\">\n                    <PropertyValue\n                        endpoint={endpoint}\n                        key={Object.keys(item)[0]}\n                        propertyKey={Object.keys(item)[0]}\n                        value={value}\n                        onSet={(key, value) => {\n                            onComplete()\n                            setFilter(index, key, value)\n                        }}\n                    />\n                    {(key[1] === 'gt' || key[1] === 'lt') && isNaN(value) && (\n                        <p className=\"text-danger\">Value needs to be a number. Try \"equals\" or \"contains\" instead.</p>\n                    )}\n                </div>\n            )}\n        </div>\n    )\n}\n","import { kea } from 'kea'\nimport api from '../../../lib/api'\nimport { userLogic } from 'scenes/userLogic'\nimport { objectsEqual } from 'lib/utils'\nimport { router } from 'kea-router'\n\nexport const propertyFilterLogic = kea({\n    key: props => props.pageKey,\n\n    actions: () => ({\n        loadEventProperties: true,\n        setProperties: properties => ({ properties }),\n        update: filters => ({ filters }),\n        setFilter: (index, key, value) => ({ index, key, value }),\n        setFilters: filters => ({ filters }),\n        newFilter: true,\n        remove: index => ({ index }),\n    }),\n\n    loaders: () => ({\n        properties: {\n            loadPeopleProperties: async () => {\n                return (await api.get('api/person/properties')).map(property => ({\n                    label: property.name,\n                    value: property.name,\n                }))\n            },\n        },\n    }),\n\n    reducers: ({ actions, props }) => ({\n        properties: [\n            [],\n            {\n                [actions.loadPeoplePropertiesSuccess]: (_, { properties }) => properties,\n                [actions.setProperties]: (_, { properties }) => properties,\n            },\n        ],\n        filters: [\n            props.propertyFilters\n                ? Object.entries(props.propertyFilters).map(([key, value]) => ({ [key]: value }))\n                : [],\n            {\n                [actions.setFilter]: (state, { index, key, value }) => {\n                    const newFilters = [...state]\n                    newFilters[index] = { [key]: value }\n                    return newFilters\n                },\n                [actions.setFilters]: (_, { filters }) => filters,\n                [actions.newFilter]: state => {\n                    return [...state, {}]\n                },\n                [actions.remove]: (state, { index }) => {\n                    const newState = state.filter((_, i) => i !== index)\n                    if (newState.length === 0) {\n                        return [{}]\n                    }\n                    if (Object.keys(newState[newState.length - 1]).length !== 0) {\n                        return [...newState, {}]\n                    }\n                    return newState\n                },\n            },\n        ],\n    }),\n\n    listeners: ({ actions, props, values }) => ({\n        // Only send update if value is set to something\n        [actions.setFilter]: ({ value }) => value && actions.update(),\n        [actions.remove]: () => actions.update(),\n        [actions.update]: () => {\n            if (props.onChange) {\n                if (values.filters.length === 0) {\n                    actions.newFilter()\n                    return props.onChange({})\n                }\n                if (Object.keys(values.filters[values.filters.length - 1]).length !== 0) actions.newFilter()\n                let dict = values.filters.reduce((result, item) => ({ ...result, ...item }))\n                props.onChange(dict)\n            } else {\n                const { filters } = values\n                const { properties: _, ...searchParams } = router.values.searchParams\n                const { pathname } = router.values.location\n\n                if (filters.filter(f => Object.keys(f).length > 0).length > 0) {\n                    searchParams.properties = filters.reduce((result, item) => ({ ...result, ...item }))\n                }\n\n                if (!objectsEqual(router.values.searchParams, searchParams)) {\n                    router.actions.push(pathname, searchParams)\n                }\n            }\n        },\n    }),\n\n    urlToAction: ({ actions, values, props }) => ({\n        '*': (_, { properties }) => {\n            if (props.onChange) {\n                return\n            }\n\n            let filters\n            try {\n                filters = values.filters\n            } catch (error) {\n                // since this is a catch-all route, this code might run during or after the logic was unmounted\n                // if we have an error accessing the filter value, the logic is gone and we should return\n                return\n            }\n\n            if (!objectsEqual(properties || {}, filters)) {\n                const mappedFilters = Object.entries(properties || {}).map(([key, value]) => ({ [key]: value }))\n                actions.setFilters([...mappedFilters, {}])\n            }\n        },\n    }),\n\n    events: ({ actions, props }) => ({\n        afterMount: () => {\n            actions.newFilter()\n            if (props.endpoint === 'person') {\n                actions.loadPeopleProperties()\n            } else {\n                actions.setProperties(userLogic.values.eventProperties)\n            }\n        },\n    }),\n})\n","import React, { useState } from 'react'\nimport { PropertyFilter } from './PropertyFilter'\nimport { Button } from 'antd'\nimport { useValues, useActions } from 'kea'\nimport { propertyFilterLogic } from './propertyFilterLogic'\nimport { Popover, Row } from 'antd'\nimport { CloseButton, formatFilterName } from 'lib/utils'\n\nfunction FilterRow({ endpoint, item, index, filters, logic }) {\n    const { remove } = useActions(logic)\n    let [open, setOpen] = useState(false)\n\n    let handleVisibleChange = visible => {\n        if (!visible && Object.keys(item).length >= 0 && !item[Object.keys(item)[0]]) {\n            remove(index)\n        }\n        setOpen(visible)\n    }\n\n    return (\n        <Row align=\"middle\" className=\"mt-2 mb-2\">\n            <Popover\n                trigger=\"click\"\n                onVisibleChange={handleVisibleChange}\n                defaultVisible={false}\n                visible={open}\n                placement=\"bottomLeft\"\n                content={\n                    <PropertyFilter\n                        key={index}\n                        index={index}\n                        endpoint={endpoint || 'event'}\n                        onComplete={() => setOpen(false)}\n                        logic={logic}\n                    />\n                }\n            >\n                {Object.keys(item).length !== 0 ? (\n                    <Button type=\"primary\" shape=\"round\" style={{ maxWidth: '85%' }}>\n                        <span style={{ width: '100%', overflow: 'hidden', textOverflow: 'ellipsis' }}>\n                            {formatFilterName(Object.keys(item)[0]) + item[Object.keys(item)[0]]}\n                        </span>\n                    </Button>\n                ) : (\n                    <Button type=\"default\" shape=\"round\">\n                        {'New Filter'}\n                    </Button>\n                )}\n            </Popover>\n            {index !== filters.length - 1 && (\n                <CloseButton\n                    className=\"ml-1\"\n                    onClick={() => {\n                        remove(index)\n                    }}\n                    style={{ cursor: 'pointer', float: 'none' }}\n                />\n            )}\n        </Row>\n    )\n}\n\nexport function PropertyFilters({ endpoint, propertyFilters, className, style, onChange, pageKey }) {\n    const logic = propertyFilterLogic({ propertyFilters, endpoint, onChange, pageKey })\n    const { filters } = useValues(logic)\n\n    return (\n        <div\n            className={className || 'col-8'}\n            style={{\n                padding: 0,\n                marginBottom: '2rem',\n                display: 'inline',\n                style,\n            }}\n        >\n            <div className=\"column\">\n                {filters &&\n                    filters.map((item, index) => {\n                        return (\n                            <FilterRow\n                                key={index === filters.length - 1 ? index : `${index}_${Object.keys(item)[0]}`}\n                                logic={logic}\n                                item={item}\n                                index={index}\n                                filters={filters}\n                                endpoint={endpoint}\n                            />\n                        )\n                    })}\n            </div>\n        </div>\n    )\n}\n","import React, { Component, useRef, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Select, DatePicker, Button } from 'antd'\n\nimport moment from 'moment'\n\nlet dateMapping = {\n    Today: ['dStart'],\n    Yesterday: ['-1d', 'dStart'],\n    'Last week': ['-7d'],\n    'Last 2 weeks': ['-14d'],\n    'Last 30 days': ['-30d'],\n    'Last 90 days': ['-90d'],\n    'This month': ['mStart'],\n    'Previous month': ['-1mStart', '-1mEnd'],\n    'Year to date': ['yStart'],\n    'All time': ['all'],\n}\n\nlet isDate = /([0-9]{4}-[0-9]{2}-[0-9]{2})/\n\nexport class DateFilter extends Component {\n    static propTypes = {\n        onChange: PropTypes.func.isRequired,\n    }\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            rangeDateFrom: isDate.test(props.dateFrom) && moment(props.dateFrom).toDate(),\n            rangeDateTo: isDate.test(props.dateTo) && moment(props.dateTo).toDate(),\n            dateRangeOpen: false,\n            open: false,\n        }\n    }\n\n    onClickOutside = () => {\n        this.setState({\n            open: false,\n            dateRangeOpen: false,\n        })\n    }\n\n    setDate = (from_date, to_date) => {\n        this.props.onChange(from_date, to_date)\n    }\n\n    dateFilterToText(date_from, date_to) {\n        if (isDate.test(date_from)) return `${date_from} - ${date_to}`\n        if (moment.isMoment(date_from)) return `${date_from.format('YYYY-MM-DD')} - ${date_to.format('YYYY-MM-DD')}`\n        let name = 'Last 7 days'\n        Object.entries(dateMapping).map(([key, value]) => {\n            if (value[0] === date_from && value[1] === date_to) name = key\n        })[0]\n        return name\n    }\n\n    onChange = v => {\n        if (v === 'Date range') {\n            if (this.state.open) {\n                this.setState({ dateRangeOpen: true, open: false })\n            }\n        } else this.setDate(dateMapping[v][0], dateMapping[v][1])\n    }\n\n    onBlur = () => {\n        if (this.state.dateRangeOpen) return\n        this.setState({\n            open: false,\n            dateRangeOpen: false,\n        })\n    }\n\n    onClick = () => {\n        if (this.state.dateRangeOpen) return\n        this.setState({\n            open: !this.state.open,\n        })\n    }\n\n    dropdownOnClick = e => {\n        e.preventDefault()\n        this.setState({ dateRangeOpen: false, open: true })\n        document.getElementById('daterange_selector').focus()\n    }\n\n    onDateFromChange = date => this.setState({ rangeDateFrom: date })\n\n    onDateToChange = date => this.setState({ rangeDateTo: date })\n\n    onApplyClick = () => {\n        this.setState({\n            dateRangeOpen: false,\n            open: false,\n        })\n        this.props.onChange(\n            moment(this.state.rangeDateFrom).format('YYYY-MM-DD'),\n            moment(this.state.rangeDateTo).format('YYYY-MM-DD')\n        )\n    }\n\n    render() {\n        let { rangeDateFrom, rangeDateTo } = this.state\n        return (\n            <Select\n                bordered={false}\n                id=\"daterange_selector\"\n                value={this.dateFilterToText(this.props.dateFrom, this.props.dateTo)}\n                onChange={this.onChange}\n                style={{\n                    marginRight: 4,\n                    ...this.props.style,\n                }}\n                open={this.state.open || this.state.dateRangeOpen}\n                onBlur={this.onBlur}\n                onClick={this.onClick}\n                listHeight={400}\n                dropdownMatchSelectWidth={false}\n                dropdownRender={menu => {\n                    if (this.state.dateRangeOpen) {\n                        return (\n                            <DatePickerDropdown\n                                onClick={this.dropdownOnClick}\n                                onDateFromChange={this.onDateFromChange}\n                                onDateToChange={this.onDateToChange}\n                                onApplyClick={this.onApplyClick}\n                                onClickOutside={this.onClickOutside}\n                                rangeDateFrom={rangeDateFrom}\n                                rangeDateTo={rangeDateTo}\n                            />\n                        )\n                    } else if (this.state.open) {\n                        return menu\n                    }\n                }}\n            >\n                {[\n                    ...Object.entries(dateMapping).map(([key, value]) => {\n                        return (\n                            <Select.Option key={key} value={key}>\n                                {key}\n                            </Select.Option>\n                        )\n                    }),\n\n                    <Select.Option key={'Date range'} value={'Date range'}>\n                        {'Date range'}\n                    </Select.Option>,\n                ]}\n            </Select>\n        )\n    }\n}\n\nfunction DatePickerDropdown(props) {\n    const dropdownRef = useRef()\n    let [calendarOpen, setCalendarOpen] = useState(false)\n\n    let onClickOutside = event => {\n        if (!dropdownRef.current.contains(event.target) && !calendarOpen) {\n            props.onClickOutside()\n        }\n    }\n\n    useEffect(() => {\n        document.addEventListener('mousedown', onClickOutside)\n        return () => {\n            document.removeEventListener('mousedown', onClickOutside)\n        }\n    }, [calendarOpen])\n\n    return (\n        <div className=\"dropdown\" ref={dropdownRef}>\n            <a\n                style={{\n                    margin: '0 1rem',\n                    color: 'rgba(0, 0, 0, 0.2)',\n                    fontWeight: 700,\n                }}\n                href=\"#\"\n                onClick={props.onClick}\n            >\n                &lt;\n            </a>\n            <hr style={{ margin: '0.5rem 0' }} />\n            <div style={{ padding: '0 1rem' }}>\n                <label className=\"secondary\">From date</label>\n                <br />\n                <DatePicker\n                    popupStyle={{ zIndex: 999999 }}\n                    onOpenChange={open => {\n                        setCalendarOpen(open)\n                    }}\n                    defaultValue={\n                        props.rangeDateFrom\n                            ? moment.isMoment(props.rangeDateFrom)\n                                ? props.rangeDateFrom\n                                : moment(props.rangeDateFrom)\n                            : null\n                    }\n                    onChange={props.onDateFromChange}\n                />\n                <br />\n                <br />\n                <label className=\"secondary\">To date</label>\n                <br />\n                <DatePicker\n                    popupStyle={{ zIndex: 999999 }}\n                    onOpenChange={open => setCalendarOpen(open)}\n                    defaultValue={\n                        props.rangeDateTo\n                            ? moment.isMoment(props.rangeDateTo)\n                                ? props.rangeDateTo\n                                : moment(props.rangeDateTo)\n                            : null\n                    }\n                    onChange={props.onDateToChange}\n                />\n                <br />\n                <Button\n                    type=\"default\"\n                    disabled={!props.rangeDateTo || !props.rangeDateFrom}\n                    style={{ marginTop: '1rem', marginBottom: '1rem' }}\n                    onClick={props.onApplyClick}\n                >\n                    Apply filter\n                </Button>\n            </div>\n        </div>\n    )\n}\n","import { kea } from 'kea'\nimport api from 'lib/api'\nimport { toast } from 'react-toastify'\n\nexport const funnelLogic = kea({\n    key: props => props.id || 'new',\n\n    actions: () => ({\n        setFunnel: (funnel, update) => ({ funnel, update }),\n    }),\n\n    loaders: ({ props }) => ({\n        funnel: [\n            { filters: {} },\n            {\n                loadFunnel: async (id = props.id) => {\n                    return await api.get('api/funnel/' + id + '/?exclude_count=1')\n                },\n                updateFunnel: async funnel => {\n                    return await api.update('api/funnel/' + funnel.id, funnel)\n                },\n                createFunnel: async funnel => {\n                    return await api.create('api/funnel', funnel)\n                },\n            },\n        ],\n        stepsWithCount: {\n            loadStepsWithCount: async (id = props.id) => {\n                return (await api.get('api/funnel/' + id)).steps\n            },\n        },\n        people: {\n            loadPeople: async steps => {\n                return (await api.get('api/person/?id=' + steps[0].people.join(','))).results\n            },\n        },\n    }),\n\n    reducers: () => ({\n        funnel: {\n            setFunnel: (state, { funnel }) => ({\n                ...state,\n                ...funnel,\n                filters: { ...state.filters, ...funnel.filters },\n            }),\n        },\n    }),\n\n    selectors: ({ selectors }) => ({\n        peopleSorted: [\n            () => [selectors.stepsWithCount, selectors.people],\n            (steps, people) => {\n                if (!people) return null\n                const score = person => {\n                    return steps.reduce((val, step) => (step.people.indexOf(person.id) > -1 ? val + 1 : val), 0)\n                }\n                return people.sort((a, b) => score(b) - score(a))\n            },\n        ],\n        isStepsEmpty: [\n            () => [selectors.funnel],\n            funnel => {\n                return funnel && [...(funnel.filters.actions || []), ...(funnel.filters.events || [])].length === 0\n            },\n        ],\n    }),\n\n    listeners: ({ actions, values }) => ({\n        loadStepsWithCountSuccess: async () => {\n            actions.loadPeople(values.stepsWithCount)\n        },\n        setFunnel: ({ update }) => {\n            if (update) actions.updateFunnel(values.funnel)\n        },\n        updateFunnelSuccess: async ({ funnel }) => {\n            actions.loadStepsWithCount(funnel.id)\n            toast('Funnel saved!')\n        },\n        createFunnelSuccess: ({ funnel }) => {\n            actions.loadStepsWithCount(funnel.id)\n            toast('Funnel saved!')\n        },\n    }),\n\n    actionToUrl: () => ({\n        createFunnelSuccess: ({ funnel }) => `/funnel/${funnel.id}`,\n    }),\n\n    events: ({ actions, key }) => ({\n        afterMount: () => {\n            if (key === 'new') {\n                return\n            }\n            actions.loadFunnel()\n            actions.loadStepsWithCount()\n        },\n    }),\n})\n","import { kea } from 'kea'\nimport { actionsModel } from '~/models/actionsModel'\nimport { EntityTypes } from '../trendsLogic'\nimport { userLogic } from 'scenes/userLogic'\n\nfunction toLocalFilters(filters) {\n    return [\n        ...(filters[EntityTypes.ACTIONS] || []),\n        ...(filters[EntityTypes.EVENTS] || []),\n        ...(filters[EntityTypes.NEW_ENTITY] || []),\n    ]\n        .sort((a, b) => a.order - b.order)\n        .map((filter, order) => ({ ...filter, order }))\n}\n\nfunction toFilters(localFilters) {\n    const filters = localFilters.map((filter, index) => ({\n        ...filter,\n        order: index,\n    }))\n\n    return {\n        [EntityTypes.ACTIONS]: filters.filter(filter => filter.type === EntityTypes.ACTIONS),\n        [EntityTypes.EVENTS]: filters.filter(filter => filter.type === EntityTypes.EVENTS),\n        [EntityTypes.NEW_ENTITY]: filters.filter(filter => filter.type === EntityTypes.NEW_ENTITY),\n    }\n}\n\n// required props:\n// - filters\n// - setFilters\n// - typeKey\nexport const entityFilterLogic = kea({\n    key: props => props.typeKey,\n    connect: {\n        values: [userLogic, ['eventNames'], actionsModel, ['actions']],\n    },\n    actions: () => ({\n        selectFilter: filter => ({ filter }),\n        updateFilterMath: filter => ({\n            type: filter.type,\n            value: filter.value,\n            math: filter.math,\n            index: filter.index,\n        }),\n        updateFilter: filter => ({ type: filter.type, index: filter.index, value: filter.value }),\n        removeLocalFilter: filter => ({ value: filter.value, type: filter.type, index: filter.index }),\n        addFilter: true,\n        updateFilterProperty: filter => ({ properties: filter.properties, index: filter.index }),\n        setFilters: filters => ({ filters }),\n        setLocalFilters: filters => ({ filters }),\n    }),\n\n    reducers: ({ props }) => ({\n        selectedFilter: [\n            null,\n            {\n                selectFilter: (state, { filter }) => filter,\n            },\n        ],\n        localFilters: [\n            toLocalFilters(props.filters),\n            {\n                setLocalFilters: (_, { filters }) => toLocalFilters(filters),\n            },\n        ],\n    }),\n\n    selectors: ({ selectors }) => ({\n        entities: [\n            () => [selectors.eventNames, selectors.actions],\n            (events, actions) => {\n                return {\n                    [EntityTypes.ACTIONS]: actions,\n                    [EntityTypes.EVENTS]: events.map(event => ({ id: event, name: event })),\n                }\n            },\n        ],\n        filters: [() => [selectors.localFilters], localFilters => toFilters(localFilters)],\n    }),\n\n    listeners: ({ actions, values, props }) => ({\n        updateFilter: ({ type, index, value }) => {\n            actions.setFilters(\n                values.localFilters.map((filter, i) => (i === index ? { ...filter, id: value, type } : filter))\n            )\n            actions.selectFilter(null)\n        },\n        updateFilterProperty: ({ properties, index }) => {\n            actions.setFilters(\n                values.localFilters.map((filter, i) => (i === index ? { ...filter, properties } : filter))\n            )\n        },\n        updateFilterMath: ({ math, index }) => {\n            actions.setFilters(values.localFilters.map((filter, i) => (i === index ? { ...filter, math } : filter)))\n        },\n        removeLocalFilter: ({ index }) => {\n            actions.setFilters(values.localFilters.filter((_, i) => i !== index))\n        },\n        addFilter: () => {\n            actions.setFilters([\n                ...values.localFilters,\n                { id: null, type: EntityTypes.NEW_ENTITY, order: values.localFilters.length },\n            ])\n        },\n        setFilters: ({ filters }) => {\n            props.setFilters(toFilters(filters))\n        },\n    }),\n})\n","import React, { Component } from 'react'\nimport { Card } from '../../lib/utils'\n\nexport class ActionSelectInfo extends Component {\n    infoDiv = React.createRef()\n    componentDidMount(prevProps) {\n        if (!this.infoDiv.current) return\n        let rect = this.props.boundingRect\n        this.infoDiv.current.style.top = rect.top - rect.height / 2 + 'px'\n        this.infoDiv.current.style.left = rect.left + rect.width + 'px'\n        this.infoDiv.current.style.opacity = 1\n    }\n    componentDidUpdate() {\n        this.componentDidMount()\n    }\n    render() {\n        let { entity, isOpen } = this.props\n        if (!entity) return null\n        return (\n            <div className=\"select-box-info\" ref={this.infoDiv} style={{ opacity: isOpen ? 1 : 0 }}>\n                <div style={{ marginBottom: '0.5rem' }}>{entity.name}</div>\n                {entity.steps &&\n                    entity.steps.map((step, index) => (\n                        <div key={step.id}>\n                            <Card key={step.id} style={{ marginBottom: 0 }}>\n                                <div className=\"card-body\">\n                                    <strong>\n                                        {step.event && step.event[0] == '$'\n                                            ? step.event[1].toUpperCase() + step.event.slice(2)\n                                            : step.event}\n                                    </strong>\n                                    <ul style={{ listStyle: 'none' }}>\n                                        {step.selector && (\n                                            <li>\n                                                CSS selector matches\n                                                <pre>{step.selector}</pre>\n                                            </li>\n                                        )}\n                                        {step.tag_name && (\n                                            <li>\n                                                Tag name matches <pre>{step.tag_name}</pre>\n                                            </li>\n                                        )}\n                                        {step.text && (\n                                            <li>\n                                                Text matches <pre>{step.text}</pre>\n                                            </li>\n                                        )}\n                                        {step.href && (\n                                            <li>\n                                                Link HREF matches <pre>{step.href}</pre>\n                                            </li>\n                                        )}\n                                        {step.url && (\n                                            <li>\n                                                URL {step.url_matching == 'contains' ? 'contains' : 'matches'}{' '}\n                                                <pre>{step.url}</pre>\n                                            </li>\n                                        )}\n                                    </ul>\n                                </div>\n                            </Card>\n                            {index < entity.steps.length - 1 && (\n                                <div className=\"secondary\" style={{ textAlign: 'center', margin: '1rem' }}>\n                                    OR\n                                </div>\n                            )}\n                        </div>\n                    ))}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { capitalizeFirstLetter } from '~/lib/utils'\n\nexport default class ActionSelectTab extends Component {\n    render() {\n        let { entityType, chooseEntityType, allTypes } = this.props\n        return (\n            <div style={{ display: 'flex', flexDirection: 'row', height: '25px', borderBottom: '1px solid #cccccc' }}>\n                {allTypes.map((type, index) => (\n                    <div\n                        key={index}\n                        style={{\n                            backgroundColor: entityType == type ? '#eeeeee' : 'white',\n                            flex: 1,\n                            display: 'flex',\n                            justifyContent: 'center',\n                            borderTopLeftRadius: index == 0 ? '5px' : '0px',\n                            borderTopRightRadius: index == allTypes.length - 1 ? '5px' : '0px',\n                            cursor: 'pointer',\n                        }}\n                        onClick={() => chooseEntityType(type)}\n                    >\n                        {capitalizeFirstLetter(type)}\n                    </div>\n                ))}\n            </div>\n        )\n    }\n}\n","import React, { Component, useState } from 'react'\nimport Select, { components } from 'react-select'\nimport { ActionSelectInfo } from 'scenes/trends/ActionSelectInfo'\nimport { selectStyle } from '../utils'\nimport PropTypes from 'prop-types'\nimport ActionSelectTab from './ActionSelectTab'\nimport { Link } from 'lib/components/Link'\n\nconst determineActiveTab = props => {\n    if (props.selected) {\n        return props.selected\n    } else {\n        return Array.isArray(props.children) ? props.children[0].props.title : props.children.props.title\n    }\n}\n\nexport function ActionSelectTabs(props) {\n    let [activeTab, setActiveTab] = useState(determineActiveTab(props))\n    let [labels] = useState(\n        Array.isArray(props.children) ? props.children.map(child => child.props.title) : [props.children.props.title]\n    )\n    return (\n        <div className=\"select-box\" style={{ padding: 0 }}>\n            {labels.length > 1 && (\n                <ActionSelectTab\n                    entityType={activeTab}\n                    allTypes={labels}\n                    chooseEntityType={setActiveTab}\n                ></ActionSelectTab>\n            )}\n            {Array.isArray(props.children)\n                ? props.children.map(child => {\n                      if (child.props.title !== activeTab) return undefined\n                      return child\n                  })\n                : props.children}\n        </div>\n    )\n}\n\nexport class ActionSelectPanel extends Component {\n    state = {\n        infoOpen: false,\n    }\n\n    Option = props => {\n        return (\n            <div\n                onMouseOver={e =>\n                    this.setState({\n                        infoOpen: true,\n                        infoBoundingRect: e.target.getBoundingClientRect(),\n                        infoActionId: props.value,\n                    })\n                }\n                onMouseOut={e => {\n                    this.setState({ infoOpen: false })\n                }}\n            >\n                <components.Option {...props} />\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div style={{ padding: '1rem', height: '90%', width: '100%' }}>\n                {this.props.redirect}\n                {this.state.infoOpen && (\n                    <ActionSelectInfo\n                        isOpen={this.state.infoOpen}\n                        boundingRect={this.state.infoBoundingRect}\n                        entity={this.props.onHover(this.state.infoActionId)}\n                    />\n                )}\n                <Select\n                    onBlur={e => {\n                        if (e.relatedTarget && e.relatedTarget.tagName == 'A') return\n                        this.setState({ infoOpen: false })\n                    }}\n                    onChange={this.props.onSelect}\n                    defaultMenuIsOpen={this.props.defaultMenuIsOpen}\n                    autoFocus={true}\n                    value={this.props.active}\n                    className=\"select-box-select\"\n                    styles={selectStyle}\n                    components={{ Option: this.Option }}\n                    options={this.props.options}\n                />\n                {this.props.message}\n            </div>\n        )\n    }\n}\n\nActionSelectPanel.propTypes = {\n    options: PropTypes.array.isRequired,\n    defaultMenuIsOpen: PropTypes.bool.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    title: PropTypes.string.isRequired,\n    onHover: PropTypes.func.isRequired,\n}\n","import React, { useRef, useEffect } from 'react'\nimport { useActions, useValues } from 'kea'\nimport { EntityTypes } from '../trendsLogic'\nimport { ActionSelectPanel, ActionSelectTabs } from '~/lib/components/ActionSelectBox'\nimport { Link } from 'lib/components/Link'\nimport { userLogic } from 'scenes/userLogic'\nimport { actionsModel } from '~/models/actionsModel'\n\nexport function ActionFilterDropdown({ onClickOutside, logic }) {\n    const dropdownRef = useRef()\n    const { selectedFilter } = useValues(logic)\n    const { eventNamesGrouped } = useValues(userLogic)\n    const { actionsGrouped } = useValues(actionsModel)\n\n    const deselect = e => {\n        if (dropdownRef.current.contains(e.target)) {\n            return\n        }\n        onClickOutside && onClickOutside(e)\n    }\n\n    useEffect(() => {\n        document.addEventListener('mousedown', deselect)\n        return () => {\n            document.removeEventListener('mousedown', deselect)\n        }\n    }, [])\n\n    return (\n        <div ref={dropdownRef} className=\"action-filter-dropdown\">\n            <ActionSelectTabs\n                selected={\n                    selectedFilter.type && selectedFilter.type !== EntityTypes.NEW_ENTITY ? selectedFilter.type : null\n                }\n            >\n                <ActionPanelContainer\n                    title=\"actions\"\n                    entityType={EntityTypes.ACTIONS}\n                    options={actionsGrouped}\n                    panelIndex={0}\n                    logic={logic}\n                />\n                <ActionPanelContainer\n                    title=\"events\"\n                    entityType={EntityTypes.EVENTS}\n                    options={eventNamesGrouped}\n                    panelIndex={1}\n                    logic={logic}\n                />\n            </ActionSelectTabs>\n        </div>\n    )\n}\n\nexport function ActionPanelContainer({ entityType, panelIndex, options, logic }) {\n    const { entities, selectedFilter, filters } = useValues(logic)\n    const { updateFilter } = useActions(logic)\n\n    const dropDownOnSelect = item => updateFilter({ type: entityType, value: item.value, index: selectedFilter.index })\n    const dropDownOnHover = value => entities[entityType].filter(a => a.id === value)[0]\n\n    const redirect = () => {\n        if (selectedFilter && selectedFilter.type === EntityTypes.ACTIONS && entityType === EntityTypes.ACTIONS) {\n            const action = entities[selectedFilter.type].filter(a => a.id === selectedFilter.filter.id)[0]\n            return (\n                <a href={'/action/' + selectedFilter.filter.id} target=\"_blank\">\n                    Edit \"{action.name}\" <i className=\"fi flaticon-export\" />\n                </a>\n            )\n        } else {\n            return null\n        }\n    }\n\n    const message = () => {\n        if (entityType === EntityTypes.ACTIONS && !filters[EntityTypes.ACTIONS]) {\n            return (\n                <div\n                    style={{\n                        height: '100%',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                    }}\n                >\n                    <p>You don't have any actions defined yet. </p>\n                    <Link to=\"/action\">Click here to define an action.</Link>\n                </div>\n            )\n        } else {\n            return null\n        }\n    }\n\n    return (\n        <ActionSelectPanel\n            key={panelIndex}\n            title={entityType}\n            options={options}\n            defaultMenuIsOpen={true}\n            onSelect={dropDownOnSelect}\n            onHover={dropDownOnHover}\n            active={null}\n            redirect={redirect()}\n            message={message()}\n        />\n    )\n}\n","import React, { useRef, useState } from 'react'\nimport { useActions, useValues } from 'kea'\nimport { EntityTypes } from '../trendsLogic'\nimport { CloseButton } from '~/lib/utils'\nimport { Dropdown } from '~/lib/components/Dropdown'\nimport { ActionFilterDropdown } from './ActionFilterDropdown'\nimport { Tooltip } from 'antd'\nimport { PropertyFilters } from 'lib/components/PropertyFilters/PropertyFilters'\nimport { userLogic } from 'scenes/userLogic'\n\nconst determineFilterLabel = (visible, filter) => {\n    if (visible) return 'Hide Filters'\n\n    if (filter.properties && Object.keys(filter.properties).length > 0) {\n        return (\n            Object.keys(filter.properties).length + ' Filter' + (Object.keys(filter.properties).length === 1 ? '' : 's')\n        )\n    }\n    return 'Add Filters'\n}\n\nexport function ActionFilterRow({ logic, filter, index }) {\n    const node = useRef()\n    const { selectedFilter, entities } = useValues(logic)\n    const { selectFilter, updateFilterMath, removeLocalFilter, updateFilterProperty } = useActions(logic)\n    const { eventProperties } = useValues(userLogic)\n    const [entityFilterVisible, setEntityFilterVisible] = useState(false)\n\n    let entity, name, value\n    let math = filter.math\n    const onClose = () => {\n        removeLocalFilter({ value: filter.id, type: filter.type, index })\n    }\n    const onMathSelect = (_, math) => {\n        updateFilterMath({ math, value: filter.id, type: filter.type, index: index })\n    }\n\n    const dropDownCondition = () =>\n        selectedFilter && selectedFilter.type === filter.type && selectedFilter.index === index\n\n    const onClick = () => {\n        if (selectedFilter && selectedFilter.type === filter.type && selectedFilter.index === index) selectFilter(null)\n        else selectFilter({ filter, type: filter.type, index })\n    }\n\n    if (filter.type === EntityTypes.NEW_ENTITY) {\n        name = null\n        value = null\n    } else {\n        entity = entities[filter.type].filter(action => action.id === filter.id)[0] || {}\n        name = entity.name || filter.name\n        value = entity.id || filter.id\n    }\n    return (\n        <div>\n            <button\n                ref={node}\n                className=\"filter-action\"\n                type=\"button\"\n                onClick={onClick}\n                style={{\n                    border: 0,\n                    padding: 0,\n                    fontWeight: 500,\n                    borderBottom: '1.5px dotted var(--blue)',\n                }}\n            >\n                {name || 'Select action'}\n            </button>\n            <MathSelector math={math} index={index} onMathSelect={onMathSelect} />\n            <div className=\"btn btn-sm btn-light\" onClick={() => setEntityFilterVisible(!entityFilterVisible)}>\n                {determineFilterLabel(entityFilterVisible, filter)}\n            </div>\n            <CloseButton\n                onClick={onClose}\n                style={{\n                    float: 'none',\n                    marginLeft: 8,\n                    position: 'absolute',\n                    marginTop: 3,\n                }}\n            />\n            {entityFilterVisible && (\n                <div className=\"ml-4\">\n                    <PropertyFilters\n                        pageKey={`${index}-${value}-filter`}\n                        properties={eventProperties}\n                        propertyFilters={filter.properties}\n                        onChange={properties => updateFilterProperty({ properties, index })}\n                        style={{ marginBottom: 0 }}\n                    />\n                </div>\n            )}\n            {dropDownCondition() && (\n                <ActionFilterDropdown\n                    logic={logic}\n                    onClickOutside={e => {\n                        if (node.current.contains(e.target)) {\n                            return\n                        }\n                        selectFilter(null)\n                    }}\n                />\n            )}\n        </div>\n    )\n}\n\nfunction MathSelector(props) {\n    let items = ['Total', 'DAU']\n    return (\n        <Dropdown\n            title={items[items.map(i => i.toLowerCase()).indexOf(props.math)] || 'Total'}\n            buttonClassName=\"btn btn-sm btn-light\"\n            style={{ marginLeft: 32, marginRight: 16 }}\n        >\n            <Tooltip\n                placement=\"right\"\n                title=\"Total shows total event volume. If a user performs an event 3 times on one day it counts as 3.\"\n            >\n                <a href=\"#\" className=\"dropdown-item\" onClick={() => props.onMathSelect(props.index, 'total')}>\n                    Total\n                </a>\n            </Tooltip>\n\n            <Tooltip\n                placement=\"right\"\n                title=\"Daily Active Users. Selecting DAU will mean a user performing an event 3 times on one day counts as 1.\"\n            >\n                <a href=\"#\" className=\"dropdown-item\" onClick={() => props.onMathSelect(props.index, 'dau')}>\n                    DAU\n                </a>\n            </Tooltip>\n        </Dropdown>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { useActions, useValues } from 'kea'\nimport { entityFilterLogic } from './entityFilterLogic'\nimport { ActionFilterRow } from './ActionFilterRow'\nimport { Button } from 'antd'\n\nexport function ActionFilter({ setFilters, filters, typeKey }) {\n    const logic = entityFilterLogic({ setFilters, filters, typeKey })\n\n    const { localFilters } = useValues(logic)\n    const { addFilter, setLocalFilters } = useActions(logic)\n\n    // No way around this. Somehow the ordering of the logic calling each other causes stale \"localFilters\"\n    // to be shown on the /funnels page, even if we try to use a selector with props to hydrate it\n    useEffect(() => {\n        setLocalFilters(filters)\n    }, [filters])\n\n    return (\n        <div>\n            {localFilters &&\n                localFilters.map((filter, index) => (\n                    <ActionFilterRow logic={logic} filter={filter} index={index} key={index} />\n                ))}\n            <Button type=\"primary\" onClick={() => addFilter()} style={{ marginTop: '0.5rem' }}>\n                Add action/event\n            </Button>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport api from 'lib/api'\nimport FunnelGraph from 'funnel-graph-js'\nimport { Link } from 'lib/components/Link'\nimport { Loading } from 'lib/utils'\nimport PropTypes from 'prop-types'\n\nexport class FunnelViz extends Component {\n    container = React.createRef()\n    graphContainer = React.createRef()\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            funnel: props.funnel,\n        }\n        this.buildChart = this.buildChart.bind(this)\n        if (!props.funnel) this.fetchFunnel.call(this)\n    }\n    componentDidMount() {\n        if (this.props.funnel) this.buildChart()\n        window.addEventListener('resize', this.buildChart)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.buildChart)\n    }\n    fetchFunnel() {\n        api.get('api/funnel/' + this.props.filters.funnel_id).then(funnel => this.setState({ funnel }, this.buildChart))\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.funnel !== this.props.funnel && this.state.funnel) {\n            this.setState({ funnel: this.props.funnel }, this.buildChart)\n        }\n    }\n    buildChart() {\n        if (!this.state.funnel || this.state.funnel.steps.length == 0) return\n        if (this.container.current) this.container.current.innerHTML = ''\n        let graph = new FunnelGraph({\n            container: '.funnel-graph',\n            data: {\n                labels: this.state.funnel.steps.map(step => `${step.name} (${step.count})`),\n                values: this.state.funnel.steps.map(step => step.count),\n                colors: ['#66b0ff', 'var(--blue)'],\n            },\n            displayPercent: true,\n        })\n        graph.createContainer = () => {}\n        graph.container = this.container.current\n        graph.graphContainer = document.createElement('div')\n        graph.graphContainer.classList.add('svg-funnel-js__container')\n        graph.container.appendChild(graph.graphContainer)\n\n        graph.draw()\n    }\n    render() {\n        let { funnel } = this.state\n        return funnel ? (\n            funnel.steps.length > 0 ? (\n                <div ref={this.container} className=\"svg-funnel-js\" style={{ height: '100%', width: '100%' }}></div>\n            ) : (\n                <p style={{ margin: '1rem' }}>\n                    This funnel doesn't have any steps.{' '}\n                    <Link to={'/funnel/' + funnel.id}>Click here to add some steps.</Link>\n                </p>\n            )\n        ) : (\n            <Loading />\n        )\n    }\n}\nFunnelViz.propTypes = {\n    funnel: PropTypes.object,\n    filters: PropTypes.shape({ funnel_id: PropTypes.number }),\n}\n","module.exports = require('./src/js/main').default;\n","import React, { Component } from 'react'\nimport api from '../api'\nimport { Modal } from './Modal'\nimport { toast } from 'react-toastify'\nimport { Link } from 'lib/components/Link'\nimport { Button } from 'antd'\n\nfunction momentToString(date) {\n    if (date && date._isAMomentObject) return date.format('YYYY-MM-DD')\n    return date\n}\n\nexport class SaveToDashboard extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {}\n        this.Modal = this.Modal.bind(this)\n        this.save = this.save.bind(this)\n    }\n    Toast({ closeToast }) {\n        return (\n            <div>\n                Panel added to dashboard.&nbsp;\n                <Link to=\"/dashboard\">Click here to see it.</Link>\n            </div>\n        )\n    }\n    save(event) {\n        let { filters } = this.props\n        event.preventDefault()\n        api.create('api/dashboard', {\n            filters: {\n                ...filters,\n                date_from: momentToString(filters.date_from),\n                date_to: momentToString(filters.date_to),\n            },\n            type: this.props.type,\n            name: event.target.name.value,\n        }).then(() => {\n            toast(this.Toast)\n            this.setState({ openModal: false })\n        })\n    }\n    Modal() {\n        return (\n            <Modal title=\"Add graph to dashboard\" onDismiss={() => this.setState({ openModal: false })}>\n                <form onSubmit={this.save}>\n                    <label>Panel name on dashboard</label>\n                    <input\n                        name=\"name\"\n                        autoFocus\n                        required\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Users who did x\"\n                        defaultValue={this.props.name}\n                    />\n                    <br />\n                    <button type=\"submit\" className=\"btn btn-success\">\n                        Add panel to dashboard\n                    </button>\n                </form>\n            </Modal>\n        )\n    }\n    render() {\n        return (\n            <span className=\"save-to-dashboard\">\n                {this.state.openModal && <this.Modal />}\n                <Button onClick={() => this.setState({ openModal: true })} type=\"primary\">\n                    Add to dashboard\n                </Button>\n            </span>\n        )\n    }\n}\n","const roundPoint = number => Math.round(number * 10) / 10;\nconst formatNumber = number => Number(number).toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n\nexport { roundPoint, formatNumber };\n","import { roundPoint } from './number';\n\nconst createCurves = (x1, y1, x2, y2) => ` C${roundPoint((x2 + x1) / 2)},${y1} `\n    + `${roundPoint((x2 + x1) / 2)},${y2} ${x2},${y2}`;\n\nconst createVerticalCurves = (x1, y1, x2, y2) => ` C${x1},${roundPoint((y2 + y1) / 2)} `\n    + `${x2},${roundPoint((y2 + y1) / 2)} ${x2},${y2}`;\n\n/*\n    A funnel segment is draw in a clockwise direction.\n    Path 1-2 is drawn,\n    then connected with a straight vertical line 2-3,\n    then a line 3-4 is draw (using YNext points going in backwards direction)\n    then path is closed (connected with the starting point 1).\n\n    1---------->2\n    ^           |\n    |           v\n    4<----------3\n\n    On the graph on line 20 it works like this:\n    A#0, A#1, A#2, A#3, B#3, B#2, B#1, B#0, close the path.\n\n    Points for path \"B\" are passed as the YNext param.\n */\n\nconst createPath = (index, X, Y, YNext) => {\n    let str = `M${X[0]},${Y[0]}`;\n\n    for (let i = 0; i < X.length - 1; i++) {\n        str += createCurves(X[i], Y[i], X[i + 1], Y[i + 1]);\n    }\n\n    str += ` L${[...X].pop()},${[...YNext].pop()}`;\n\n    for (let i = X.length - 1; i > 0; i--) {\n        str += createCurves(X[i], YNext[i], X[i - 1], YNext[i - 1]);\n    }\n\n    str += ' Z';\n\n    return str;\n};\n\n/*\n    In a vertical path we go counter-clockwise\n\n    1<----------4\n    |           ^\n    v           |\n    2---------->3\n */\n\nconst createVerticalPath = (index, X, XNext, Y) => {\n    let str = `M${X[0]},${Y[0]}`;\n\n    for (let i = 0; i < X.length - 1; i++) {\n        str += createVerticalCurves(X[i], Y[i], X[i + 1], Y[i + 1]);\n    }\n\n    str += ` L${[...XNext].pop()},${[...Y].pop()}`;\n\n    for (let i = X.length - 1; i > 0; i--) {\n        str += createVerticalCurves(XNext[i], Y[i], XNext[i - 1], Y[i - 1]);\n    }\n\n    str += ' Z';\n\n    return str;\n};\n\nexport {\n    createCurves, createVerticalCurves, createPath, createVerticalPath\n};\n","const setAttrs = (element, attributes) => {\n    if (typeof attributes === 'object') {\n        Object.keys(attributes).forEach((key) => {\n            element.setAttribute(key, attributes[key]);\n        });\n    }\n};\n\nconst removeAttrs = (element, ...attributes) => {\n    attributes.forEach((attribute) => {\n        element.removeAttribute(attribute);\n    });\n};\n\nconst createSVGElement = (element, container, attributes) => {\n    const el = document.createElementNS('http://www.w3.org/2000/svg', element);\n\n    if (typeof attributes === 'object') {\n        setAttrs(el, attributes);\n    }\n\n    if (typeof container !== 'undefined') {\n        container.appendChild(el);\n    }\n\n    return el;\n};\n\nconst generateLegendBackground = (color, direction = 'horizontal') => {\n    if (typeof color === 'string') {\n        return `background-color: ${color}`;\n    }\n\n    if (color.length === 1) {\n        return `background-color: ${color[0]}`;\n    }\n\n    return `background-image: linear-gradient(${direction === 'horizontal'\n        ? 'to right, '\n        : ''}${color.join(', ')})`;\n};\n\nconst defaultColors = ['#FF4589', '#FF5050',\n    '#05DF9D', '#4FF2FD',\n    '#2D9CDB', '#A0BBFF',\n    '#FFD76F', '#F2C94C',\n    '#FF9A9A', '#FFB178'];\n\nconst getDefaultColors = (number) => {\n    const colors = [...defaultColors];\n    const colorSet = [];\n\n    for (let i = 0; i < number; i++) {\n        // get a random color\n        const index = Math.abs(Math.round(Math.random() * (colors.length - 1)));\n        // push it to the list\n        colorSet.push(colors[index]);\n        // and remove it, so that it is not chosen again\n        colors.splice(index, 1);\n    }\n    return colorSet;\n};\n\n/*\n    Used in comparing existing values to value provided on update\n    It is limited to comparing arrays on purpose\n    Name is slightly unusual, in order not to be confused with Lodash method\n */\nconst areEqual = (value, newValue) => {\n    // If values are not of the same type\n    const type = Object.prototype.toString.call(value);\n    if (type !== Object.prototype.toString.call(newValue)) return false;\n    if (type !== '[object Array]') return false;\n\n    if (value.length !== newValue.length) return false;\n\n    for (let i = 0; i < value.length; i++) {\n        // if the it's a two dimensional array\n        const currentType = Object.prototype.toString.call(value[i]);\n        if (currentType !== Object.prototype.toString.call(newValue[i])) return false;\n        if (currentType === '[object Array]') {\n            // if row lengths are not equal then arrays are not equal\n            if (value[i].length !== newValue[i].length) return false;\n            // compare each element in the row\n            for (let j = 0; j < value[i].length; j++) {\n                if (value[i][j] !== newValue[i][j]) {\n                    return false;\n                }\n            }\n        } else if (value[i] !== newValue[i]) {\n            // if it's a one dimensional array element\n            return false;\n        }\n    }\n\n    return true;\n};\n\nexport {\n    generateLegendBackground, getDefaultColors, areEqual, createSVGElement, setAttrs, removeAttrs, defaultColors\n};\n","const generateRandomIdString = prefix => Math.random().toString(36).replace('0.', prefix || '');\n\nexport default generateRandomIdString;\n","/* eslint-disable no-trailing-spaces */\n/* global HTMLElement */\nimport { roundPoint, formatNumber } from './number';\nimport { createPath, createVerticalPath } from './path';\nimport {\n    generateLegendBackground, getDefaultColors, createSVGElement, setAttrs, removeAttrs\n} from './graph';\nimport generateRandomIdString from './random';\n\nclass FunnelGraph {\n    constructor(options) {\n        this.containerSelector = options.container;\n        this.gradientDirection = (options.gradientDirection && options.gradientDirection === 'vertical')\n            ? 'vertical'\n            : 'horizontal';\n        this.direction = (options.direction && options.direction === 'vertical') ? 'vertical' : 'horizontal';\n        this.labels = FunnelGraph.getLabels(options);\n        this.subLabels = FunnelGraph.getSubLabels(options);\n        this.values = FunnelGraph.getValues(options);\n        this.percentages = this.createPercentages();\n        this.colors = options.data.colors || getDefaultColors(this.is2d() ? this.getSubDataSize() : 2);\n        this.displayPercent = options.displayPercent || false;\n        this.data = options.data;\n        this.height = options.height;\n        this.width = options.width;\n        this.subLabelValue = options.subLabelValue || 'percent';\n    }\n\n    /**\n    An example of a two-dimensional funnel graph\n    #0..................\n                       ...#1................\n                                           ......\n    #0********************#1**                    #2.........................#3 (A)\n                              *******************\n                                                  #2*************************#3 (B)\n                                                  #2+++++++++++++++++++++++++#3 (C)\n                              +++++++++++++++++++\n    #0++++++++++++++++++++#1++                    #2-------------------------#3 (D)\n                                           ------\n                       ---#1----------------\n    #0-----------------\n     Main axis is the primary axis of the graph.\n     In a horizontal graph it's the X axis, and Y is the cross axis.\n     However we use the names \"main\" and \"cross\" axis,\n     because in a vertical graph the primary axis is the Y axis\n     and the cross axis is the X axis.\n     First step of drawing the funnel graph is getting the coordinates of points,\n     that are used when drawing the paths.\n     There are 4 paths in the example above: A, B, C and D.\n     Such funnel has 3 labels and 3 subLabels.\n     This means that the main axis has 4 points (number of labels + 1)\n     One the ASCII illustrated graph above, those points are illustrated with a # symbol.\n    */\n    getMainAxisPoints() {\n        const size = this.getDataSize();\n        const points = [];\n        const fullDimension = this.isVertical() ? this.getHeight() : this.getWidth();\n        for (let i = 0; i <= size; i++) {\n            points.push(roundPoint(fullDimension * i / size));\n        }\n        return points;\n    }\n\n    getCrossAxisPoints() {\n        const points = [];\n        const fullDimension = this.getFullDimension();\n        // get half of the graph container height or width, since funnel shape is symmetric\n        // we use this when calculating the \"A\" shape\n        const dimension = fullDimension / 2;\n        if (this.is2d()) {\n            const totalValues = this.getValues2d();\n            const max = Math.max(...totalValues);\n\n            // duplicate last value\n            totalValues.push([...totalValues].pop());\n            // get points for path \"A\"\n            points.push(totalValues.map(value => roundPoint((max - value) / max * dimension)));\n            // percentages with duplicated last value\n            const percentagesFull = this.getPercentages2d();\n            const pointsOfFirstPath = points[0];\n\n            for (let i = 1; i < this.getSubDataSize(); i++) {\n                const p = points[i - 1];\n                const newPoints = [];\n\n                for (let j = 0; j < this.getDataSize(); j++) {\n                    newPoints.push(roundPoint(\n                        // eslint-disable-next-line comma-dangle\n                        p[j] + (fullDimension - pointsOfFirstPath[j] * 2) * (percentagesFull[j][i - 1] / 100)\n                    ));\n                }\n\n                // duplicate the last value as points #2 and #3 have the same value on the cross axis\n                newPoints.push([...newPoints].pop());\n                points.push(newPoints);\n            }\n\n            // add points for path \"D\", that is simply the \"inverted\" path \"A\"\n            points.push(pointsOfFirstPath.map(point => fullDimension - point));\n        } else {\n            // As you can see on the visualization above points #2 and #3 have the same cross axis coordinate\n            // so we duplicate the last value\n            const max = Math.max(...this.values);\n            const values = [...this.values].concat([...this.values].pop());\n            // if the graph is simple (not two-dimensional) then we have only paths \"A\" and \"D\"\n            // which are symmetric. So we get the points for \"A\" and then get points for \"D\" by subtracting \"A\"\n            // points from graph cross dimension length\n            points.push(values.map(value => roundPoint((max - value) / max * dimension)));\n            points.push(points[0].map(point => fullDimension - point));\n        }\n\n        return points;\n    }\n\n    getGraphType() {\n        return this.values && this.values[0] instanceof Array ? '2d' : 'normal';\n    }\n\n    is2d() {\n        return this.getGraphType() === '2d';\n    }\n\n    isVertical() {\n        return this.direction === 'vertical';\n    }\n\n    getDataSize() {\n        return this.values.length;\n    }\n\n    getSubDataSize() {\n        return this.values[0].length;\n    }\n\n    getFullDimension() {\n        return this.isVertical() ? this.getWidth() : this.getHeight();\n    }\n\n    static getSubLabels(options) {\n        if (!options.data) {\n            throw new Error('Data is missing');\n        }\n\n        const { data } = options;\n\n        if (typeof data.subLabels === 'undefined') return [];\n\n        return data.subLabels;\n    }\n\n    static getLabels(options) {\n        if (!options.data) {\n            throw new Error('Data is missing');\n        }\n\n        const { data } = options;\n\n        if (typeof data.labels === 'undefined') return [];\n\n        return data.labels;\n    }\n\n    addLabels() {\n        const holder = document.createElement('div');\n        holder.setAttribute('class', 'svg-funnel-js__labels');\n\n        this.percentages.forEach((percentage, index) => {\n            const labelElement = document.createElement('div');\n            labelElement.setAttribute('class', `svg-funnel-js__label label-${index + 1}`);\n\n            const title = document.createElement('div');\n            title.setAttribute('class', 'label__title');\n            title.textContent = this.labels[index] || '';\n\n            const value = document.createElement('div');\n            value.setAttribute('class', 'label__value');\n\n            const valueNumber = this.is2d() ? this.getValues2d()[index] : this.values[index];\n            value.textContent = formatNumber(valueNumber);\n\n            const percentageValue = document.createElement('div');\n            percentageValue.setAttribute('class', 'label__percentage');\n            percentageValue.textContent = `${percentage.toString()}%`;\n\n            labelElement.appendChild(value);\n            labelElement.appendChild(title);\n            if (this.displayPercent) {\n                labelElement.appendChild(percentageValue);\n            }\n\n            if (this.is2d()) {\n                const segmentPercentages = document.createElement('div');\n                segmentPercentages.setAttribute('class', 'label__segment-percentages');\n                let percentageList = '<ul class=\"segment-percentage__list\">';\n\n                const twoDimPercentages = this.getPercentages2d();\n\n                this.subLabels.forEach((subLabel, j) => {\n                    const subLabelDisplayValue = this.subLabelValue === 'percent'\n                        ? `${twoDimPercentages[index][j]}%`\n                        : formatNumber(this.values[index][j]);\n                    percentageList += `<li>${this.subLabels[j]}:\n    <span class=\"percentage__list-label\">${subLabelDisplayValue}</span>\n </li>`;\n                });\n                percentageList += '</ul>';\n                segmentPercentages.innerHTML = percentageList;\n                labelElement.appendChild(segmentPercentages);\n            }\n\n            holder.appendChild(labelElement);\n        });\n\n        this.container.appendChild(holder);\n    }\n\n    addSubLabels() {\n        if (this.subLabels) {\n            const subLabelsHolder = document.createElement('div');\n            subLabelsHolder.setAttribute('class', 'svg-funnel-js__subLabels');\n\n            let subLabelsHTML = '';\n\n            this.subLabels.forEach((subLabel, index) => {\n                subLabelsHTML += `<div class=\"svg-funnel-js__subLabel svg-funnel-js__subLabel-${index + 1}\">\n    <div class=\"svg-funnel-js__subLabel--color\"\n        style=\"${generateLegendBackground(this.colors[index], this.gradientDirection)}\"></div>\n    <div class=\"svg-funnel-js__subLabel--title\">${subLabel}</div>\n</div>`;\n            });\n\n            subLabelsHolder.innerHTML = subLabelsHTML;\n            this.container.appendChild(subLabelsHolder);\n        }\n    }\n\n    createContainer() {\n        if (!this.containerSelector) {\n            throw new Error('Container is missing');\n        }\n\n        if (typeof this.containerSelector === 'string') {\n            this.container = document.querySelector(this.containerSelector);\n            if (!this.container) {\n                throw new Error(`Container cannot be found (selector: ${this.containerSelector}).`);\n            }\n        } else if (this.container instanceof HTMLElement) {\n            this.container = this.containerSelector;\n        } else {\n            throw new Error('Container must either be a selector string or an HTMLElement.');\n        }\n\n        this.container.classList.add('svg-funnel-js');\n\n        this.graphContainer = document.createElement('div');\n        this.graphContainer.classList.add('svg-funnel-js__container');\n        this.container.appendChild(this.graphContainer);\n\n        if (this.direction === 'vertical') {\n            this.container.classList.add('svg-funnel-js--vertical');\n        }\n    }\n\n    setValues(v) {\n        this.values = v;\n        return this;\n    }\n\n    setDirection(d) {\n        this.direction = d;\n        return this;\n    }\n\n    setHeight(h) {\n        this.height = h;\n        return this;\n    }\n\n    setWidth(w) {\n        this.width = w;\n        return this;\n    }\n\n    static getValues(options) {\n        if (!options.data) {\n            return [];\n        }\n\n        const { data } = options;\n\n        if (typeof data === 'object') {\n            return data.values;\n        }\n\n        return [];\n    }\n\n    getValues2d() {\n        const values = [];\n\n        this.values.forEach((valueSet) => {\n            values.push(valueSet.reduce((sum, value) => sum + value, 0));\n        });\n\n        return values;\n    }\n\n    getPercentages2d() {\n        const percentages = [];\n\n        this.values.forEach((valueSet) => {\n            const total = valueSet.reduce((sum, value) => sum + value, 0);\n            percentages.push(valueSet.map(value => (total === 0 ? 0 : roundPoint(value * 100 / total))));\n        });\n\n        return percentages;\n    }\n\n    createPercentages() {\n        let values = [];\n\n        if (this.is2d()) {\n            values = this.getValues2d();\n        } else {\n            values = [...this.values];\n        }\n\n        const max = Math.max(...values);\n        return values.map(value => (value === 0 ? 0 : roundPoint(value * 100 / max)));\n    }\n\n    applyGradient(svg, path, colors, index) {\n        const defs = (svg.querySelector('defs') === null)\n            ? createSVGElement('defs', svg)\n            : svg.querySelector('defs');\n\n        const gradientName = generateRandomIdString(`funnelGradient-${index}-`);\n\n        const gradient = createSVGElement('linearGradient', defs, {\n            id: gradientName\n        });\n\n        if (this.gradientDirection === 'vertical') {\n            setAttrs(gradient, {\n                x1: '0',\n                x2: '0',\n                y1: '0',\n                y2: '1'\n            });\n        }\n\n        const numberOfColors = colors.length;\n\n        for (let i = 0; i < numberOfColors; i++) {\n            createSVGElement('stop', gradient, {\n                'stop-color': colors[i],\n                offset: `${Math.round(100 * i / (numberOfColors - 1))}%`\n            });\n        }\n\n        setAttrs(path, {\n            fill: `url(\"#${gradientName}\")`,\n            stroke: `url(\"#${gradientName}\")`\n        });\n    }\n\n    makeSVG() {\n        const svg = createSVGElement('svg', this.graphContainer, {\n            width: this.getWidth(),\n            height: this.getHeight()\n        });\n\n        const valuesNum = this.getCrossAxisPoints().length - 1;\n        for (let i = 0; i < valuesNum; i++) {\n            const path = createSVGElement('path', svg);\n\n            const color = (this.is2d()) ? this.colors[i] : this.colors;\n            const fillMode = (typeof color === 'string' || color.length === 1) ? 'solid' : 'gradient';\n\n            if (fillMode === 'solid') {\n                setAttrs(path, {\n                    fill: color,\n                    stroke: color\n                });\n            } else if (fillMode === 'gradient') {\n                this.applyGradient(svg, path, color, i + 1);\n            }\n\n            svg.appendChild(path);\n        }\n\n        this.graphContainer.appendChild(svg);\n    }\n\n    getSVG() {\n        const svg = this.container.querySelector('svg');\n\n        if (!svg) {\n            throw new Error('No SVG found inside of the container');\n        }\n\n        return svg;\n    }\n\n    getWidth() {\n        return this.width || this.graphContainer.clientWidth;\n    }\n\n    getHeight() {\n        return this.height || this.graphContainer.clientHeight;\n    }\n\n    getPathDefinitions() {\n        const valuesNum = this.getCrossAxisPoints().length - 1;\n        const paths = [];\n        for (let i = 0; i < valuesNum; i++) {\n            if (this.isVertical()) {\n                const X = this.getCrossAxisPoints()[i];\n                const XNext = this.getCrossAxisPoints()[i + 1];\n                const Y = this.getMainAxisPoints();\n\n                const d = createVerticalPath(i, X, XNext, Y);\n                paths.push(d);\n            } else {\n                const X = this.getMainAxisPoints();\n                const Y = this.getCrossAxisPoints()[i];\n                const YNext = this.getCrossAxisPoints()[i + 1];\n\n                const d = createPath(i, X, Y, YNext);\n                paths.push(d);\n            }\n        }\n\n        return paths;\n    }\n\n    getPathMedian(i) {\n        if (this.isVertical()) {\n            const cross = this.getCrossAxisPoints()[i];\n            const next = this.getCrossAxisPoints()[i + 1];\n            const Y = this.getMainAxisPoints();\n            const X = [];\n            const XNext = [];\n\n            cross.forEach((point, index) => {\n                const m = (point + next[index]) / 2;\n                X.push(m - 1);\n                XNext.push(m + 1);\n            });\n\n            return createVerticalPath(i, X, XNext, Y);\n        }\n\n        const X = this.getMainAxisPoints();\n        const cross = this.getCrossAxisPoints()[i];\n        const next = this.getCrossAxisPoints()[i + 1];\n        const Y = [];\n        const YNext = [];\n\n        cross.forEach((point, index) => {\n            const m = (point + next[index]) / 2;\n            Y.push(m - 1);\n            YNext.push(m + 1);\n        });\n\n        return createPath(i, X, Y, YNext);\n    }\n\n    drawPaths() {\n        const svg = this.getSVG();\n        const paths = svg.querySelectorAll('path');\n        const definitions = this.getPathDefinitions();\n\n        definitions.forEach((definition, index) => {\n            paths[index].setAttribute('d', definition);\n        });\n    }\n\n    draw() {\n        this.createContainer();\n        this.makeSVG();\n\n        this.addLabels();\n\n        if (this.is2d()) {\n            this.addSubLabels();\n        }\n\n        this.drawPaths();\n    }\n\n    /*\n        Methods\n     */\n\n    makeVertical() {\n        if (this.direction === 'vertical') return true;\n\n        this.direction = 'vertical';\n        this.container.classList.add('svg-funnel-js--vertical');\n\n        const svg = this.getSVG();\n        const height = this.getHeight();\n        const width = this.getWidth();\n        setAttrs(svg, { height, width });\n\n        this.drawPaths();\n\n        return true;\n    }\n\n    makeHorizontal() {\n        if (this.direction === 'horizontal') return true;\n\n        this.direction = 'horizontal';\n        this.container.classList.remove('svg-funnel-js--vertical');\n\n        const svg = this.getSVG();\n        const height = this.getHeight();\n        const width = this.getWidth();\n        setAttrs(svg, { height, width });\n\n        this.drawPaths();\n\n        return true;\n    }\n\n    toggleDirection() {\n        if (this.direction === 'horizontal') {\n            this.makeVertical();\n        } else {\n            this.makeHorizontal();\n        }\n    }\n\n    gradientMakeVertical() {\n        if (this.gradientDirection === 'vertical') return true;\n\n        this.gradientDirection = 'vertical';\n        const gradients = this.graphContainer.querySelectorAll('linearGradient');\n\n        for (let i = 0; i < gradients.length; i++) {\n            setAttrs(gradients[i], {\n                x1: '0',\n                x2: '0',\n                y1: '0',\n                y2: '1'\n            });\n        }\n\n        return true;\n    }\n\n    gradientMakeHorizontal() {\n        if (this.gradientDirection === 'horizontal') return true;\n\n        this.gradientDirection = 'horizontal';\n        const gradients = this.graphContainer.querySelectorAll('linearGradient');\n\n        for (let i = 0; i < gradients.length; i++) {\n            removeAttrs(gradients[i], 'x1', 'x2', 'y1', 'y2');\n        }\n\n        return true;\n    }\n\n    gradientToggleDirection() {\n        if (this.gradientDirection === 'horizontal') {\n            this.gradientMakeVertical();\n        } else {\n            this.gradientMakeHorizontal();\n        }\n    }\n\n    updateWidth(w) {\n        this.width = w;\n        const svg = this.getSVG();\n        const width = this.getWidth();\n        setAttrs(svg, { width });\n\n        this.drawPaths();\n\n        return true;\n    }\n\n    updateHeight(h) {\n        this.height = h;\n        const svg = this.getSVG();\n        const height = this.getHeight();\n        setAttrs(svg, { height });\n\n        this.drawPaths();\n\n        return true;\n    }\n\n    // @TODO: refactor data update\n    updateData(d) {\n        const labels = this.container.querySelector('.svg-funnel-js__labels');\n        const subLabels = this.container.querySelector('.svg-funnel-js__subLabels');\n\n        if (labels) labels.remove();\n        if (subLabels) subLabels.remove();\n\n        this.labels = [];\n        this.colors = getDefaultColors(this.is2d() ? this.getSubDataSize() : 2);\n        this.values = [];\n        this.percentages = [];\n\n        if (typeof d.labels !== 'undefined') {\n            this.labels = FunnelGraph.getLabels({ data: d });\n        }\n        if (typeof d.colors !== 'undefined') {\n            this.colors = d.colors || getDefaultColors(this.is2d() ? this.getSubDataSize() : 2);\n        }\n        if (typeof d.values !== 'undefined') {\n            if (Object.prototype.toString.call(d.values[0]) !== Object.prototype.toString.call(this.values[0])) {\n                this.container.querySelector('svg').remove();\n                this.values = FunnelGraph.getValues({ data: d });\n                this.makeSVG();\n            } else {\n                this.values = FunnelGraph.getValues({ data: d });\n            }\n            this.drawPaths();\n        }\n        this.percentages = this.createPercentages();\n\n        this.addLabels();\n\n        if (typeof d.subLabels !== 'undefined') {\n            this.subLabels = FunnelGraph.getSubLabels({ data: d });\n            this.addSubLabels();\n        }\n    }\n\n    update(o) {\n        if (typeof o.displayPercent !== 'undefined') {\n            if (this.displayPercent !== o.displayPercent) {\n                if (this.displayPercent === true) {\n                    this.container.querySelectorAll('.label__percentage').forEach((label) => {\n                        label.remove();\n                    });\n                } else {\n                    this.container.querySelectorAll('.svg-funnel-js__label').forEach((label, index) => {\n                        const percentage = this.percentages[index];\n                        const percentageValue = document.createElement('div');\n                        percentageValue.setAttribute('class', 'label__percentage');\n\n                        if (percentage !== 100) {\n                            percentageValue.textContent = `${percentage.toString()}%`;\n                            label.appendChild(percentageValue);\n                        }\n                    });\n                }\n            }\n        }\n        if (typeof o.height !== 'undefined') {\n            this.updateHeight(o.height);\n        }\n        if (typeof o.width !== 'undefined') {\n            this.updateWidth(o.width);\n        }\n        if (typeof o.gradientDirection !== 'undefined') {\n            if (o.gradientDirection === 'vertical') {\n                this.gradientMakeVertical();\n            } else if (o.gradientDirection === 'horizontal') {\n                this.gradientMakeHorizontal();\n            }\n        }\n        if (typeof o.direction !== 'undefined') {\n            if (o.direction === 'vertical') {\n                this.makeVertical();\n            } else if (o.direction === 'horizontal') {\n                this.makeHorizontal();\n            }\n        }\n        if (typeof o.data !== 'undefined') {\n            this.updateData(o.data);\n        }\n    }\n}\n\nexport default FunnelGraph;\n","import React from 'react'\nimport { Card } from 'lib/utils'\nimport { Link } from 'lib/components/Link'\nimport { actionsModel } from '~/models/actionsModel'\nimport { useValues, useActions } from 'kea'\nimport { funnelLogic } from './funnelLogic'\nimport { ActionFilter } from 'scenes/trends/ActionFilter/ActionFilter'\nimport { PropertyFilters } from 'lib/components/PropertyFilters/PropertyFilters'\nimport { Button } from 'antd'\nimport { userLogic } from 'scenes/userLogic'\n\nexport function EditFunnel({ funnelId }) {\n    const { funnel, isStepsEmpty } = useValues(funnelLogic({ id: funnelId }))\n    const { setFunnel, updateFunnel, createFunnel } = useActions(funnelLogic({ id: funnelId }))\n    const { actions, actionsLoading } = useValues(actionsModel())\n    const { eventProperties } = useValues(userLogic)\n\n    return (\n        <form\n            onSubmit={e => {\n                e.preventDefault()\n                if (!funnel.id) {\n                    createFunnel(funnel)\n                } else {\n                    updateFunnel(funnel)\n                }\n            }}\n        >\n            <Card>\n                <div className=\"card-body\">\n                    <input\n                        required\n                        placeholder=\"User drop off through signup\"\n                        type=\"text\"\n                        autoFocus\n                        onChange={e => setFunnel({ name: e.target.value })}\n                        value={funnel.name || ''}\n                        className=\"form-control\"\n                    />\n                    {!actionsLoading && actions.length === 0 && (\n                        <div className=\"alert alert-warning\" style={{ marginTop: '1rem' }}>\n                            You don't have any actions set up. <Link to=\"/actions\">Click here to set up an action</Link>\n                        </div>\n                    )}\n                    <br />\n                    <ActionFilter\n                        filters={funnel.filters}\n                        setFilters={filters => setFunnel({ filters }, false)}\n                        typeKey={`EditFunnel-${funnel.id || 'new'}`}\n                    />\n                    <br />\n                    <hr />\n                    <h4 className=\"secondary mt-3\">Filters</h4>\n                    <PropertyFilters\n                        pageKey={`EditFunnel-${funnel.id || 'new'}`}\n                        properties={eventProperties}\n                        propertyFilters={funnel.filters.properties || []}\n                        onChange={properties =>\n                            setFunnel({\n                                filters: {\n                                    properties,\n                                },\n                            })\n                        }\n                        style={{ marginBottom: 0 }}\n                    />\n                    <hr />\n                    <Button type=\"primary mt-3\" htmlType=\"submit\" disabled={isStepsEmpty}>\n                        Save funnel\n                    </Button>\n                    <br />\n                    {isStepsEmpty && <small>Add some actions/events to save the funnel</small>}\n                </div>\n            </Card>\n        </form>\n    )\n}\n","import React from 'react'\nimport { useValues } from 'kea'\nimport { funnelLogic } from './funnelLogic'\nimport { Link } from 'lib/components/Link'\nimport { Card, percentage, Loading } from 'lib/utils'\nimport { EntityTypes } from 'scenes/trends/trendsLogic'\n\nexport function People({ id }) {\n    const { stepsWithCount, peopleSorted, peopleLoading } = useValues(funnelLogic({ id }))\n\n    return (\n        <Card title=\"Per user\">\n            {peopleLoading && <Loading />}\n            <table className=\"table table-bordered table-fixed\">\n                <tbody>\n                    <tr>\n                        <th />\n                        {stepsWithCount &&\n                            stepsWithCount.map((step, index) => (\n                                <th key={index}>\n                                    {step.type === EntityTypes.ACTIONS ? (\n                                        <Link to={'/action/' + step.action_id}>{step.name}</Link>\n                                    ) : (\n                                        step.name\n                                    )}\n                                </th>\n                            ))}\n                    </tr>\n                    <tr>\n                        <td />\n                        {stepsWithCount &&\n                            stepsWithCount.map((step, index) => (\n                                <td key={index}>\n                                    {step.count}&nbsp; ({percentage(step.count / stepsWithCount[0].count)})\n                                </td>\n                            ))}\n                    </tr>\n                    {peopleSorted &&\n                        peopleSorted.map(person => (\n                            <tr key={person.id}>\n                                <td className=\"text-overflow\">\n                                    <Link to={`/person_by_id/${person.id}`}>{person.name}</Link>\n                                </td>\n                                {stepsWithCount.map((step, index) => (\n                                    <td\n                                        key={index}\n                                        className={\n                                            step.people.indexOf(person.id) > -1 ? 'funnel-success' : 'funnel-dropped'\n                                        }\n                                    />\n                                ))}\n                            </tr>\n                        ))}\n                </tbody>\n            </table>\n        </Card>\n    )\n}\n","import React from 'react'\nimport { Card, Loading } from '../../lib/utils'\nimport { SaveToDashboard } from '../../lib/components/SaveToDashboard'\nimport { DateFilter } from '../../lib/components/DateFilter'\nimport { EditFunnel } from './EditFunnel'\nimport { FunnelViz } from './FunnelViz'\nimport { People } from './People'\nimport { funnelLogic } from './funnelLogic'\nimport { useValues, useActions } from 'kea'\n\nexport function Funnel({ id }) {\n    const { funnel, funnelLoading, stepsWithCount, stepsWithCountLoading } = useValues(funnelLogic({ id }))\n    const { setFunnel } = useActions(funnelLogic({ id }))\n    if (!funnel && funnelLoading) return <Loading />\n    return (\n        <div className=\"funnel\">\n            {funnel.id ? <h1>Funnel: {funnel.name}</h1> : <h1>New funnel</h1>}\n            <EditFunnel funnelId={id} />\n\n            {funnel.id && (\n                <Card\n                    title={\n                        <span>\n                            <span className=\"float-right\">\n                                <DateFilter\n                                    onChange={(date_from, date_to) =>\n                                        setFunnel(\n                                            {\n                                                filters: {\n                                                    date_from,\n                                                    date_to,\n                                                },\n                                            },\n                                            true\n                                        )\n                                    }\n                                    dateFrom={funnel.filters.date_from}\n                                    dateTo={funnel.filters.date_to}\n                                />\n                                <SaveToDashboard\n                                    filters={{ funnel_id: funnel.id }}\n                                    type=\"FunnelViz\"\n                                    name={funnel.name}\n                                />\n                            </span>\n                            Graph\n                        </span>\n                    }\n                >\n                    <div style={{ height: 300 }}>\n                        {stepsWithCountLoading && <Loading />}\n                        {stepsWithCount && stepsWithCount[0] && stepsWithCount[0].count > -1 && (\n                            <FunnelViz funnel={{ steps: stepsWithCount }} />\n                        )}\n                    </div>\n                </Card>\n            )}\n            {funnel.id && <People id={id} />}\n        </div>\n    )\n}\n"],"sourceRoot":""}