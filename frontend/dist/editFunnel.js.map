{"version":3,"sources":["webpack:///./frontend/src/lib/utils.js","webpack:///./frontend/src/scenes/trends/trendsLogic.js","webpack:///./frontend/src/models/actionsModel.js","webpack:///./frontend/src/lib/components/PropertyFilters/PropertyValue.js","webpack:///./frontend/src/lib/components/PropertyFilters/PropertyFilter.js","webpack:///./frontend/src/lib/components/PropertyFilters/propertyFilterLogic.js","webpack:///./frontend/src/lib/components/PropertyFilters/PropertyFilters.js","webpack:///./frontend/src/scenes/funnels/funnelLogic.js","webpack:///./frontend/src/scenes/trends/ActionFilter/entityFilterLogic.js","webpack:///./frontend/src/scenes/trends/ActionSelectInfo.js","webpack:///./frontend/src/lib/components/ActionSelectTab.js","webpack:///./frontend/src/lib/components/ActionSelectBox.js","webpack:///./frontend/src/scenes/trends/ActionFilter/ActionFilterDropdown.js","webpack:///./frontend/src/scenes/trends/ActionFilter/ActionFilterRow.js","webpack:///./frontend/src/scenes/trends/ActionFilter/ActionFilter.js","webpack:///./frontend/src/scenes/funnels/EditFunnel.js"],"names":["uuid","replace","c","crypto","getRandomValues","Uint8Array","toString","toParams","obj","Object","entries","filter","map","key","val","_isAMomentObject","encodeURIComponent","format","JSON","stringify","handleVal","join","fromParams","window","location","search","slice","split","reduce","a","b","decodeURIComponent","percentage","division","toLocaleString","undefined","style","maximumFractionDigits","Loading","className","TableRowLoading","colSpan","asOverlay","padding","textAlign","CloseButton","props","aria-hidden","Card","title","children","DeleteWithUndo","href","onClick","e","preventDefault","deleteWithUndo","undo","api","update","endpoint","object","id","deleted","then","callback","response","name","toast","toastId","propTypes","PropTypes","string","isRequired","shape","number","selectStyle","control","base","height","minHeight","indicatorsContainer","input","paddingBottom","paddingTop","margin","opacity","valueContainer","marginTop","option","debounce","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","capitalizeFirstLetter","charAt","toUpperCase","operatorMap","exact","is_not","icontains","not_icontains","gt","lt","operatorEntries","reverse","formatFilterName","str","value","includes","deletePersonData","person","confirm","objectsEqual","obj1","obj2","EntityTypes","ACTIONS","EVENTS","NEW_ENTITY","disableMinuteFor","dStart","mStart","yStart","all","disableHourFor","ViewType","FILTERS","SESSIONS","cleanFilters","filters","interval","autocorrectInterval","display","session","actions","Array","isArray","events","properties","filterClientSideParams","people_day","people_action","stickiness_days","date_from","minute_disabled","hour_disabled","trendsLogic","kea","dashboardItemId","connect","values","userLogic","actionsModel","loaders","results","loadResults","activeView","get","toAPIParams","setFilters","mergeFilters","fromUrl","setDisplay","loadPeople","action","day","breakdown_value","setShowingPeople","isShowing","setPeople","people","count","setActiveView","type","setCachedUrl","url","reducers","state","router","selectors","searchParams","_","cachedUrls","showingPeople","peopleAction","find","parseInt","peopleDay","listeners","breakpoint","params","entityId","shown_as","date_to","breakdown","filterParams","actionToUrl","pathname","cachedUrl","urlToAction","cleanSearchParams","keys","length","eventNames","event","order","actionContains","steps","step","__default","loadActions","actionsGrouped","data","label","options","forEach","push","afterMount","PropertyValue","loadPropertyValues","bind","ref","React","createRef","propertyKey","propValues","property","onSet","isEditing","loadOptions","defaultOptions","cacheOptions","formatCreateLabel","inputValue","allowCreateWhileLoading","createOptionPosition","placeholder","width","onChange","out","setState","select","blur","autoFocus","styles","onFocus","onInputChange","actionMeta","Component","any","operatorOptions","PropertyFilter","index","onComplete","logic","useValues","useActions","setFilter","item","remove","minWidth","isLoading","openMenuOnFocus","operator","isNaN","propertyFilterLogic","pageKey","loadEventProperties","setProperties","newFilter","loadPeopleProperties","loadPeoplePropertiesSuccess","propertyFilters","newFilters","newState","i","dict","result","f","error","mappedFilters","eventProperties","FilterRow","useState","open","setOpen","align","trigger","onVisibleChange","visible","defaultVisible","placement","content","maxWidth","overflow","textOverflow","cursor","float","PropertyFilters","marginBottom","funnelLogic","setFunnel","funnel","loadFunnel","updateFunnel","createFunnel","create","stepsWithCount","loadStepsWithCount","peopleSorted","score","indexOf","sort","isStepsEmpty","loadStepsWithCountSuccess","updateFunnelSuccess","createFunnelSuccess","toLocalFilters","toFilters","localFilters","entityFilterLogic","typeKey","selectFilter","updateFilterMath","math","updateFilter","removeLocalFilter","addFilter","updateFilterProperty","setLocalFilters","selectedFilter","entities","ActionSelectInfo","prevProps","infoDiv","current","rect","boundingRect","top","left","componentDidMount","entity","isOpen","listStyle","selector","tag_name","text","url_matching","ActionSelectTab","entityType","chooseEntityType","allTypes","flexDirection","borderBottom","backgroundColor","flex","justifyContent","borderTopLeftRadius","borderTopRightRadius","ActionSelectTabs","selected","determineActiveTab","activeTab","setActiveTab","child","labels","ActionSelectPanel","infoOpen","onMouseOver","infoBoundingRect","target","getBoundingClientRect","infoActionId","onMouseOut","Option","redirect","onHover","onBlur","relatedTarget","tagName","onSelect","defaultMenuIsOpen","active","components","message","ActionFilterDropdown","onClickOutside","dropdownRef","useRef","eventNamesGrouped","deselect","contains","useEffect","document","addEventListener","removeEventListener","ActionPanelContainer","panelIndex","alignItems","Link","to","array","bool","ActionFilterRow","node","entityFilterVisible","setEntityFilterVisible","border","fontWeight","MathSelector","onMathSelect","determineFilterLabel","marginLeft","position","items","Dropdown","toLowerCase","buttonClassName","marginRight","ActionFilter","EditFunnel","funnelId","actionsLoading","onSubmit","required","htmlType","disabled"],"mappings":"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","file":"editFunnel.js","sourcesContent":["import React from 'react'\nimport api from './api'\nimport { toast } from 'react-toastify'\nimport PropTypes from 'prop-types'\nimport { Spin } from 'antd'\n\nexport function uuid() {\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n        (c ^ (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))).toString(16)\n    )\n}\n\nexport let toParams = obj => {\n    let handleVal = val => {\n        if (val._isAMomentObject) return encodeURIComponent(val.format('YYYY-MM-DD'))\n        val = typeof val === 'object' ? JSON.stringify(val) : val\n        return encodeURIComponent(val)\n    }\n    return Object.entries(obj)\n        .filter(([key, val]) => val)\n        .map(([key, val]) => `${key}=${handleVal(val)}`)\n        .join('&')\n}\nexport let fromParams = () =>\n    window.location.search != ''\n        ? window.location.search\n              .slice(1)\n              .split('&')\n              .reduce((a, b) => {\n                  b = b.split('=')\n                  a[b[0]] = decodeURIComponent(b[1])\n                  return a\n              }, {})\n        : {}\n\nexport let colors = ['success', 'secondary', 'warning', 'primary', 'danger', 'info', 'dark', 'light']\nexport let percentage = division =>\n    division\n        ? division.toLocaleString(undefined, {\n              style: 'percent',\n              maximumFractionDigits: 2,\n          })\n        : ''\n\nexport let Loading = () => (\n    <div className=\"loading-overlay\">\n        <div></div>\n        <Spin />\n    </div>\n)\n\nexport const TableRowLoading = ({ colSpan = 1, asOverlay = false }) => (\n    <tr className={asOverlay ? 'loading-overlay over-table' : ''}>\n        <td colSpan={colSpan} style={{ padding: 50, textAlign: 'center' }}>\n            <Spin />\n        </td>\n    </tr>\n)\n\nexport let CloseButton = props => {\n    return (\n        <span {...props} className={'close cursor-pointer ' + props.className} style={{ ...props.style }}>\n            <span aria-hidden=\"true\">&times;</span>\n        </span>\n    )\n}\n\nexport function Card(props) {\n    return (\n        <div {...props} className={'card ' + props.className} style={props.style} title=\"\">\n            {props.title && <div className=\"card-header\">{props.title}</div>}\n            {props.children}\n        </div>\n    )\n}\n\nexport let DeleteWithUndo = props => {\n    let deleteWithUndo = undo => {\n        api.update('api/' + props.endpoint + '/' + props.object.id, {\n            ...props.object,\n            deleted: undo ? false : true,\n        }).then(() => {\n            props.callback()\n            let response = (\n                <div>\n                    {!undo ? (\n                        <span>\n                            \"<strong>{props.object.name}</strong>\" deleted.{' '}\n                            <a\n                                href=\"#\"\n                                onClick={e => {\n                                    e.preventDefault()\n                                    deleteWithUndo(true)\n                                }}\n                            >\n                                Click here to undo\n                            </a>\n                        </span>\n                    ) : (\n                        <span>Delete un-done</span>\n                    )}\n                </div>\n            )\n            toast(response, { toastId: 'delete-item-' + props.object.id })\n        })\n    }\n\n    return (\n        <a\n            href=\"#\"\n            onClick={e => {\n                e.preventDefault()\n                deleteWithUndo()\n            }}\n            className={props.className}\n            style={props.style}\n        >\n            {props.children}\n        </a>\n    )\n}\nDeleteWithUndo.propTypes = {\n    endpoint: PropTypes.string.isRequired,\n    object: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        id: PropTypes.number.isRequired,\n    }).isRequired,\n    className: PropTypes.string,\n    style: PropTypes.object,\n}\n\nexport let selectStyle = {\n    control: base => ({\n        ...base,\n        height: 31,\n        minHeight: 31,\n    }),\n    indicatorsContainer: base => ({\n        ...base,\n        height: 31,\n    }),\n    input: base => ({\n        ...base,\n        paddingBottom: 0,\n        paddingTop: 0,\n        margin: 0,\n        opacity: 1,\n    }),\n    valueContainer: base => ({\n        ...base,\n        padding: '0 8px',\n        marginTop: -2,\n    }),\n    option: base => ({\n        ...base,\n        padding: '2px 15px',\n    }),\n}\n\nexport let debounce = (func, wait, immediate) => {\n    var timeout\n    return function() {\n        var context = this,\n            args = arguments\n        var later = function() {\n            timeout = null\n            if (!immediate) func.apply(context, args)\n        }\n        var callNow = immediate && !timeout\n        clearTimeout(timeout)\n        timeout = setTimeout(later, wait)\n        if (callNow) func.apply(context, args)\n    }\n}\n\nexport const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1)\n}\n\nexport const operatorMap = {\n    exact: '= equals',\n    is_not: \"≠ doesn't equal\",\n    icontains: '∋ contains',\n    not_icontains: \"∌ doesn't contain\",\n    gt: '> greater than',\n    lt: '< lower than',\n}\n\nconst operatorEntries = Object.entries(operatorMap).reverse()\n\nexport const formatFilterName = str => {\n    for (let [key, value] of operatorEntries) {\n        if (str.includes(key)) return str.replace('__' + key, '') + ` ${value.split(' ')[0]} `\n    }\n    return str + ` ${operatorMap['exact'].split(' ')[0]} `\n}\n\nexport const deletePersonData = (person, callback) => {\n    window.confirm('Are you sure you want to delete this user? This cannot be undone') &&\n        api.delete('api/person/' + person.id).then(() => {\n            toast('Person succesfully deleted.')\n            if (callback) callback()\n        })\n}\n\nexport const objectsEqual = (obj1, obj2) => JSON.stringify(obj1) === JSON.stringify(obj2)\n","import { kea } from 'kea'\n\nimport api from 'lib/api'\nimport { objectsEqual, toParams as toAPIParams } from 'lib/utils'\nimport { actionsModel } from '~/models/actionsModel'\nimport { userLogic } from 'scenes/userLogic'\nimport { router } from 'kea-router'\n\nexport const EntityTypes = {\n    ACTIONS: 'actions',\n    EVENTS: 'events',\n    NEW_ENTITY: 'new_entity',\n}\n\nexport const disableMinuteFor = {\n    dStart: false,\n    '-1d': false,\n    '-7d': true,\n    '-14d': true,\n    '-30d': true,\n    '-90d': true,\n    mStart: true,\n    '-1mStart': true,\n    yStart: true,\n    all: true,\n}\n\nexport const disableHourFor = {\n    dStart: false,\n    '-1d': false,\n    '-7d': false,\n    '-14d': false,\n    '-30d': false,\n    '-90d': true,\n    mStart: false,\n    '-1mStart': false,\n    yStart: true,\n    all: true,\n}\n\nexport const ViewType = {\n    FILTERS: 'FILTERS',\n    SESSIONS: 'SESSIONS',\n}\n\nfunction cleanFilters(filters) {\n    return {\n        ...filters,\n        interval: autocorrectInterval(filters),\n        display: filters.session && filters.session === 'dist' ? 'ActionsTable' : filters.display,\n        actions: Array.isArray(filters.actions) ? filters.actions : undefined,\n        events: Array.isArray(filters.events) ? filters.events : undefined,\n        properties: filters.properties || {},\n    }\n}\n\nfunction filterClientSideParams(filters) {\n    const {\n        people_day: _skip_this_one,\n        people_action: _skip_this_too,\n        stickiness_days: __and_this,\n        ...newFilters\n    } = filters\n\n    return newFilters\n}\n\nfunction autocorrectInterval({ date_from, interval }) {\n    if (!interval) return 'day' // undefined/uninitialized\n\n    const minute_disabled = disableMinuteFor[date_from] && interval === 'minute'\n    const hour_disabled = disableHourFor[date_from] && interval === 'hour'\n\n    if (minute_disabled) {\n        return 'hour'\n    } else if (hour_disabled) {\n        return 'day'\n    } else {\n        return interval\n    }\n}\n\n// props:\n// - dashboardItemId\n// - filters\nexport const trendsLogic = kea({\n    key: props => props.dashboardItemId || 'all_trends',\n\n    connect: {\n        values: [userLogic, ['eventNames'], actionsModel, ['actions']],\n    },\n\n    loaders: ({ values }) => ({\n        results: {\n            loadResults: async () => {\n                if (values.activeView === ViewType.SESSIONS) {\n                    return await api.get('api/event/sessions/?' + toAPIParams(filterClientSideParams(values.filters)))\n                }\n                return await api.get('api/action/trends/?' + toAPIParams(filterClientSideParams(values.filters)))\n            },\n        },\n    }),\n\n    actions: () => ({\n        setFilters: (filters, mergeFilters = true, fromUrl = false) => ({ filters, mergeFilters, fromUrl }),\n        setDisplay: display => ({ display }),\n\n        loadPeople: (action, day, breakdown_value) => ({ action, day, breakdown_value }),\n        setShowingPeople: isShowing => ({ isShowing }),\n        setPeople: (people, count, action, day, breakdown_value) => ({ people, count, action, day, breakdown_value }),\n        setActiveView: type => ({ type }),\n        setCachedUrl: (type, url) => ({ type, url }),\n    }),\n\n    reducers: ({ actions, props }) => ({\n        filters: [\n            props.dashboardItemId ? props.filters : state => cleanFilters(router.selectors.searchParams(state)),\n            {\n                [actions.setFilters]: (state, { filters, mergeFilters }) => {\n                    return cleanFilters({\n                        ...(mergeFilters ? state : {}),\n                        ...filters,\n                    })\n                },\n            },\n        ],\n        people: [\n            null,\n            {\n                [actions.setFilters]: () => null,\n                [actions.setPeople]: (_, people) => people,\n            },\n        ],\n        cachedUrls: [\n            {},\n            {\n                [actions.setCachedUrl]: (state, { type, url }) => ({ ...state, [type]: url }),\n            },\n        ],\n        showingPeople: [\n            false,\n            {\n                [actions.loadPeople]: () => true,\n                [actions.setShowingPeople]: (_, { isShowing }) => isShowing,\n            },\n        ],\n    }),\n\n    selectors: ({ selectors }) => ({\n        activeView: [() => [selectors.filters], filters => (filters.session ? ViewType.SESSIONS : ViewType.FILTERS)],\n        peopleAction: [\n            () => [selectors.filters, selectors.actions],\n            (filters, actions) =>\n                filters.people_action ? actions.find(a => a.id === parseInt(filters.people_action)) : null,\n        ],\n        peopleDay: [() => [selectors.filters], filters => filters.people_day],\n    }),\n\n    listeners: ({ actions, values }) => ({\n        [actions.setDisplay]: async ({ display }) => {\n            actions.setFilters({ display })\n        },\n        [actions.loadPeople]: async ({ action, day, breakdown_value }, breakpoint) => {\n            const params = filterClientSideParams({\n                ...values.filters,\n                entityId: action.id,\n                type: action.type,\n            })\n\n            if (values.filters.shown_as === 'Stickiness') {\n                params.stickiness_days = day\n            } else {\n                params.date_from = day\n                params.date_to = day\n            }\n            if (breakdown_value) {\n                params.properties = { ...params.properties, [params.breakdown]: breakdown_value }\n            }\n\n            const filterParams = toAPIParams(params)\n            actions.setPeople(null, null, action, day, breakdown_value)\n            const people = await api.get(`api/action/people/?include_last_event=1&${filterParams}`)\n            breakpoint()\n            actions.setPeople(people[0]?.people, people[0]?.count, action, day, breakdown_value)\n        },\n    }),\n\n    actionToUrl: ({ actions, values, props }) => ({\n        [actions.setFilters]: ({ fromUrl }) => {\n            if (props.dashboardItemId) {\n                return // don't use the URL if on the dashboard\n            }\n            if (!fromUrl) {\n                return ['/trends', values.filters]\n            }\n        },\n        [actions.setActiveView]: ({ type }) => {\n            if (props.dashboardItemId) {\n                return // don't use the URL if on the dashboard\n            }\n            actions.setCachedUrl(values.activeView, window.location.pathname + window.location.search)\n            const cachedUrl = values.cachedUrls[type]\n            if (cachedUrl) {\n                return cachedUrl\n            }\n            return ['/trends', type === ViewType.SESSIONS ? { session: 'avg' } : {}]\n        },\n    }),\n\n    urlToAction: ({ actions, values, props }) => ({\n        '/trends': (_, searchParams) => {\n            if (props.dashboardItemId) {\n                return // don't use the URL if on the dashboard\n            }\n\n            const cleanSearchParams = cleanFilters(searchParams)\n\n            // opening /trends without any params, just open $pageview, $screen or the first random event\n            if (Object.keys(searchParams).length === 0 && values.eventNames && values.eventNames[0]) {\n                const event = values.eventNames.includes('$pageview')\n                    ? '$pageview'\n                    : values.eventNames.includes('$screen')\n                    ? '$screen'\n                    : values.eventNames[0]\n\n                cleanSearchParams[EntityTypes.EVENTS] = [\n                    {\n                        id: event,\n                        name: event,\n                        type: EntityTypes.EVENTS,\n                        order: 0,\n                    },\n                ]\n            }\n\n            if (!objectsEqual(cleanSearchParams, values.filters)) {\n                actions.setFilters(cleanSearchParams, false, true)\n            }\n        },\n    }),\n})\n","import { kea } from 'kea'\nimport api from 'lib/api'\n\nconst actionContains = (action, event) => {\n    return action.steps.filter(step => step.event == event).length > 0\n}\n\nexport const actionsModel = kea({\n    loaders: () => ({\n        actions: {\n            __default: [],\n            loadActions: async () => {\n                const response = await api.get('api/action')\n                return response.results\n            },\n        },\n    }),\n    selectors: ({ selectors }) => ({\n        actionsGrouped: [\n            () => [selectors.actions],\n            actions => {\n                let data = [\n                    { label: 'Autocapture', options: [] },\n                    { label: 'Event', options: [] },\n                    { label: 'Pageview', options: [] },\n                ]\n                actions.forEach(action => {\n                    let format = { label: action.name, value: action.id }\n                    if (actionContains(action, '$autocapture')) data[0].options.push(format)\n                    if (actionContains(action, '$pageview')) data[2].options.push(format)\n                    if (!actionContains(action, '$autocapture') && !actionContains(action, '$pageview'))\n                        data[1].options.push(format)\n                })\n                return data\n            },\n        ],\n    }),\n\n    events: ({ actions }) => ({\n        afterMount: actions.loadActions,\n    }),\n})\n","import React, { Component } from 'react'\nimport api from '../../api'\nimport AsyncCreatableSelect from 'react-select/async-creatable/dist/react-select.esm'\nimport { selectStyle, debounce } from '../../utils'\nimport PropTypes from 'prop-types'\n\nexport class PropertyValue extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { input: props.value }\n        this.loadPropertyValues = debounce(this.loadPropertyValues.bind(this), 250)\n        this.ref = React.createRef()\n    }\n    loadPropertyValues(value, callback) {\n        let key = this.props.propertyKey.split('__')[0]\n        api.get('api/' + this.props.endpoint + '/values/?key=' + key + (value ? '&value=' + value : '')).then(\n            propValues =>\n                callback(\n                    propValues.map(property => ({\n                        label: property.name ? property.name : '(empty)',\n                        value: property.name,\n                    }))\n                )\n        )\n    }\n    render() {\n        let { propertyKey, onSet, value } = this.props\n        let { isEditing, input } = this.state\n        return (\n            <span ref={this.ref} className=\"property-value\">\n                <AsyncCreatableSelect\n                    loadOptions={this.loadPropertyValues}\n                    defaultOptions={true}\n                    cacheOptions\n                    formatCreateLabel={inputValue => 'Specify: ' + inputValue}\n                    allowCreateWhileLoading={true}\n                    createOptionPosition=\"first\"\n                    key={propertyKey} // forces a reload of the component when the property changes\n                    placeholder=\"Property value\"\n                    style={{ width: 200 }}\n                    value={{ label: value, value: value }}\n                    onChange={out => {\n                        onSet(propertyKey, out.value)\n                        this.setState({ input: out.value })\n                        this.select.blur()\n                    }}\n                    autoFocus={!value}\n                    styles={selectStyle}\n                    ref={ref => {\n                        this.select = ref\n                    }}\n                    // This is a series of hacks to make the text editable\n                    inputValue={isEditing ? this.state.input : ''}\n                    onFocus={() => this.setState({ isEditing: true })}\n                    onInputChange={(input, actionMeta) => {\n                        if (actionMeta.action === 'input-change') {\n                            this.setState({ input })\n                            return input\n                        }\n                        return this.state.input\n                    }}\n                />\n            </span>\n        )\n    }\n}\nPropertyValue.propTypes = {\n    propertyKey: PropTypes.string.isRequired,\n    value: PropTypes.any.isRequired,\n    onSet: PropTypes.func.isRequired,\n}\n","import React from 'react'\nimport Select from 'react-select'\nimport { selectStyle, operatorMap } from 'lib/utils'\nimport { PropertyValue } from './PropertyValue'\nimport { useValues, useActions } from 'kea'\n\nconst operatorOptions = Object.entries(operatorMap).map(([key, value]) => ({\n    label: value,\n    value: key,\n}))\n\nexport function PropertyFilter({ index, endpoint, onComplete, logic }) {\n    const { properties, filters } = useValues(logic)\n    const { setFilter, remove } = useActions(logic)\n    let item = filters[index]\n    let key = Object.keys(item)[0] ? Object.keys(item)[0].split('__') : []\n    let value = Object.values(item)[0]\n    return (\n        <div className=\"row\" style={{ margin: '0.5rem -15px', minWidth: key[0] ? 700 : 200 }}>\n            {properties && (\n                <div className={key[0] ? 'col-4' : 'col'}>\n                    <Select\n                        options={properties}\n                        value={[{ label: key[0], value: key[0] }]}\n                        isLoading={!properties}\n                        placeholder=\"Property key\"\n                        onChange={item =>\n                            setFilter(\n                                index,\n                                item.value + (key[1] ? '__' + key[1] : ''),\n                                item.value !== key[0] ? '' : value\n                            )\n                        }\n                        styles={selectStyle}\n                        autoFocus={!key[0]}\n                        openMenuOnFocus={true}\n                    />\n                </div>\n            )}\n\n            {key[0] && (\n                <div className=\"col-3 pl-0\">\n                    <Select\n                        options={operatorOptions}\n                        style={{ width: 200 }}\n                        value={[\n                            {\n                                label: operatorMap[key[1]] || '= equals',\n                                value: key[1],\n                            },\n                        ]}\n                        placeholder=\"Property key\"\n                        onChange={operator => setFilter(index, key[0] + '__' + operator.value, value)}\n                        styles={selectStyle}\n                    />\n                </div>\n            )}\n            {key[0] && (\n                <div className=\"col-5 pl-0\">\n                    <PropertyValue\n                        endpoint={endpoint}\n                        key={Object.keys(item)[0]}\n                        propertyKey={Object.keys(item)[0]}\n                        value={value}\n                        onSet={(key, value) => {\n                            onComplete()\n                            setFilter(index, key, value)\n                        }}\n                    />\n                    {(key[1] === 'gt' || key[1] === 'lt') && isNaN(value) && (\n                        <p className=\"text-danger\">Value needs to be a number. Try \"equals\" or \"contains\" instead.</p>\n                    )}\n                </div>\n            )}\n        </div>\n    )\n}\n","import { kea } from 'kea'\nimport api from '../../../lib/api'\nimport { userLogic } from 'scenes/userLogic'\nimport { objectsEqual } from 'lib/utils'\nimport { router } from 'kea-router'\n\nexport const propertyFilterLogic = kea({\n    key: props => props.pageKey,\n\n    actions: () => ({\n        loadEventProperties: true,\n        setProperties: properties => ({ properties }),\n        update: filters => ({ filters }),\n        setFilter: (index, key, value) => ({ index, key, value }),\n        setFilters: filters => ({ filters }),\n        newFilter: true,\n        remove: index => ({ index }),\n    }),\n\n    loaders: () => ({\n        properties: {\n            loadPeopleProperties: async () => {\n                return (await api.get('api/person/properties')).map(property => ({\n                    label: property.name,\n                    value: property.name,\n                }))\n            },\n        },\n    }),\n\n    reducers: ({ actions, props }) => ({\n        properties: [\n            [],\n            {\n                [actions.loadPeoplePropertiesSuccess]: (_, { properties }) => properties,\n                [actions.setProperties]: (_, { properties }) => properties,\n            },\n        ],\n        filters: [\n            props.propertyFilters\n                ? Object.entries(props.propertyFilters).map(([key, value]) => ({ [key]: value }))\n                : [],\n            {\n                [actions.setFilter]: (state, { index, key, value }) => {\n                    const newFilters = [...state]\n                    newFilters[index] = { [key]: value }\n                    return newFilters\n                },\n                [actions.setFilters]: (_, { filters }) => filters,\n                [actions.newFilter]: state => {\n                    return [...state, {}]\n                },\n                [actions.remove]: (state, { index }) => {\n                    const newState = state.filter((_, i) => i !== index)\n                    if (newState.length === 0) {\n                        return [{}]\n                    }\n                    if (Object.keys(newState[newState.length - 1]).length !== 0) {\n                        return [...newState, {}]\n                    }\n                    return newState\n                },\n            },\n        ],\n    }),\n\n    listeners: ({ actions, props, values }) => ({\n        // Only send update if value is set to something\n        [actions.setFilter]: ({ value }) => value && actions.update(),\n        [actions.remove]: () => actions.update(),\n        [actions.update]: () => {\n            if (props.onChange) {\n                if (values.filters.length === 0) {\n                    actions.newFilter()\n                    return props.onChange({})\n                }\n                if (Object.keys(values.filters[values.filters.length - 1]).length !== 0) actions.newFilter()\n                let dict = values.filters.reduce((result, item) => ({ ...result, ...item }))\n                props.onChange(dict)\n            } else {\n                const { filters } = values\n                const { properties: _, ...searchParams } = router.values.searchParams\n                const { pathname } = router.values.location\n\n                if (filters.filter(f => Object.keys(f).length > 0).length > 0) {\n                    searchParams.properties = filters.reduce((result, item) => ({ ...result, ...item }))\n                }\n\n                if (!objectsEqual(router.values.searchParams, searchParams)) {\n                    router.actions.push(pathname, searchParams)\n                }\n            }\n        },\n    }),\n\n    urlToAction: ({ actions, values, props }) => ({\n        '*': (_, { properties }) => {\n            if (props.onChange) {\n                return\n            }\n\n            let filters\n            try {\n                filters = values.filters\n            } catch (error) {\n                // since this is a catch-all route, this code might run during or after the logic was unmounted\n                // if we have an error accessing the filter value, the logic is gone and we should return\n                return\n            }\n\n            if (!objectsEqual(properties || {}, filters)) {\n                const mappedFilters = Object.entries(properties || {}).map(([key, value]) => ({ [key]: value }))\n                actions.setFilters([...mappedFilters, {}])\n            }\n        },\n    }),\n\n    events: ({ actions, props }) => ({\n        afterMount: () => {\n            actions.newFilter()\n            if (props.endpoint === 'person') {\n                actions.loadPeopleProperties()\n            } else {\n                actions.setProperties(userLogic.values.eventProperties)\n            }\n        },\n    }),\n})\n","import React, { useState } from 'react'\nimport { PropertyFilter } from './PropertyFilter'\nimport { Button } from 'antd'\nimport { useValues, useActions } from 'kea'\nimport { propertyFilterLogic } from './propertyFilterLogic'\nimport { Popover, Row } from 'antd'\nimport { CloseButton, formatFilterName } from 'lib/utils'\n\nfunction FilterRow({ endpoint, item, index, filters, logic }) {\n    const { remove } = useActions(logic)\n    let [open, setOpen] = useState(false)\n\n    let handleVisibleChange = visible => {\n        if (!visible && Object.keys(item).length >= 0 && !item[Object.keys(item)[0]]) {\n            remove(index)\n        }\n        setOpen(visible)\n    }\n\n    return (\n        <Row align=\"middle\" className=\"mt-2 mb-2\">\n            <Popover\n                trigger=\"click\"\n                onVisibleChange={handleVisibleChange}\n                defaultVisible={false}\n                visible={open}\n                placement=\"bottomLeft\"\n                content={\n                    <PropertyFilter\n                        key={index}\n                        index={index}\n                        endpoint={endpoint || 'event'}\n                        onComplete={() => setOpen(false)}\n                        logic={logic}\n                    />\n                }\n            >\n                {Object.keys(item).length !== 0 ? (\n                    <Button type=\"primary\" shape=\"round\" style={{ maxWidth: '85%' }}>\n                        <span style={{ width: '100%', overflow: 'hidden', textOverflow: 'ellipsis' }}>\n                            {formatFilterName(Object.keys(item)[0]) + item[Object.keys(item)[0]]}\n                        </span>\n                    </Button>\n                ) : (\n                    <Button type=\"default\" shape=\"round\">\n                        {'New Filter'}\n                    </Button>\n                )}\n            </Popover>\n            {index !== filters.length - 1 && (\n                <CloseButton\n                    className=\"ml-1\"\n                    onClick={() => {\n                        remove(index)\n                    }}\n                    style={{ cursor: 'pointer', float: 'none' }}\n                />\n            )}\n        </Row>\n    )\n}\n\nexport function PropertyFilters({ endpoint, propertyFilters, className, style, onChange, pageKey }) {\n    const logic = propertyFilterLogic({ propertyFilters, endpoint, onChange, pageKey })\n    const { filters } = useValues(logic)\n\n    return (\n        <div\n            className={className || 'col-8'}\n            style={{\n                padding: 0,\n                marginBottom: '2rem',\n                display: 'inline',\n                style,\n            }}\n        >\n            <div className=\"column\">\n                {filters &&\n                    filters.map((item, index) => {\n                        return (\n                            <FilterRow\n                                key={index === filters.length - 1 ? index : `${index}_${Object.keys(item)[0]}`}\n                                logic={logic}\n                                item={item}\n                                index={index}\n                                filters={filters}\n                                endpoint={endpoint}\n                            />\n                        )\n                    })}\n            </div>\n        </div>\n    )\n}\n","import { kea } from 'kea'\nimport api from 'lib/api'\nimport { toast } from 'react-toastify'\n\nexport const funnelLogic = kea({\n    key: props => props.id || 'new',\n\n    actions: () => ({\n        setFunnel: (funnel, update) => ({ funnel, update }),\n    }),\n\n    loaders: ({ props }) => ({\n        funnel: [\n            { filters: {} },\n            {\n                loadFunnel: async (id = props.id) => {\n                    return await api.get('api/funnel/' + id + '/?exclude_count=1')\n                },\n                updateFunnel: async funnel => {\n                    return await api.update('api/funnel/' + funnel.id, funnel)\n                },\n                createFunnel: async funnel => {\n                    return await api.create('api/funnel', funnel)\n                },\n            },\n        ],\n        stepsWithCount: {\n            loadStepsWithCount: async (id = props.id) => {\n                return (await api.get('api/funnel/' + id)).steps\n            },\n        },\n        people: {\n            loadPeople: async steps => {\n                return (await api.get('api/person/?id=' + steps[0].people.join(','))).results\n            },\n        },\n    }),\n\n    reducers: () => ({\n        funnel: {\n            setFunnel: (state, { funnel }) => ({\n                ...state,\n                ...funnel,\n                filters: { ...state.filters, ...funnel.filters },\n            }),\n        },\n    }),\n\n    selectors: ({ selectors }) => ({\n        peopleSorted: [\n            () => [selectors.stepsWithCount, selectors.people],\n            (steps, people) => {\n                if (!people) return null\n                const score = person => {\n                    return steps.reduce((val, step) => (step.people.indexOf(person.id) > -1 ? val + 1 : val), 0)\n                }\n                return people.sort((a, b) => score(b) - score(a))\n            },\n        ],\n        isStepsEmpty: [\n            () => [selectors.funnel],\n            funnel => {\n                return funnel && [...(funnel.filters.actions || []), ...(funnel.filters.events || [])].length === 0\n            },\n        ],\n    }),\n\n    listeners: ({ actions, values }) => ({\n        loadStepsWithCountSuccess: async () => {\n            actions.loadPeople(values.stepsWithCount)\n        },\n        setFunnel: ({ update }) => {\n            if (update) actions.updateFunnel(values.funnel)\n        },\n        updateFunnelSuccess: async ({ funnel }) => {\n            actions.loadStepsWithCount(funnel.id)\n            toast('Funnel saved!')\n        },\n        createFunnelSuccess: ({ funnel }) => {\n            actions.loadStepsWithCount(funnel.id)\n            toast('Funnel saved!')\n        },\n    }),\n\n    actionToUrl: () => ({\n        createFunnelSuccess: ({ funnel }) => `/funnel/${funnel.id}`,\n    }),\n\n    events: ({ actions, key }) => ({\n        afterMount: () => {\n            if (key === 'new') {\n                return\n            }\n            actions.loadFunnel()\n            actions.loadStepsWithCount()\n        },\n    }),\n})\n","import { kea } from 'kea'\nimport { actionsModel } from '~/models/actionsModel'\nimport { EntityTypes } from '../trendsLogic'\nimport { userLogic } from 'scenes/userLogic'\n\nfunction toLocalFilters(filters) {\n    return [\n        ...(filters[EntityTypes.ACTIONS] || []),\n        ...(filters[EntityTypes.EVENTS] || []),\n        ...(filters[EntityTypes.NEW_ENTITY] || []),\n    ]\n        .sort((a, b) => a.order - b.order)\n        .map((filter, order) => ({ ...filter, order }))\n}\n\nfunction toFilters(localFilters) {\n    const filters = localFilters.map((filter, index) => ({\n        ...filter,\n        order: index,\n    }))\n\n    return {\n        [EntityTypes.ACTIONS]: filters.filter(filter => filter.type === EntityTypes.ACTIONS),\n        [EntityTypes.EVENTS]: filters.filter(filter => filter.type === EntityTypes.EVENTS),\n        [EntityTypes.NEW_ENTITY]: filters.filter(filter => filter.type === EntityTypes.NEW_ENTITY),\n    }\n}\n\n// required props:\n// - filters\n// - setFilters\n// - typeKey\nexport const entityFilterLogic = kea({\n    key: props => props.typeKey,\n    connect: {\n        values: [userLogic, ['eventNames'], actionsModel, ['actions']],\n    },\n    actions: () => ({\n        selectFilter: filter => ({ filter }),\n        updateFilterMath: filter => ({\n            type: filter.type,\n            value: filter.value,\n            math: filter.math,\n            index: filter.index,\n        }),\n        updateFilter: filter => ({ type: filter.type, index: filter.index, value: filter.value }),\n        removeLocalFilter: filter => ({ value: filter.value, type: filter.type, index: filter.index }),\n        addFilter: true,\n        updateFilterProperty: filter => ({ properties: filter.properties, index: filter.index }),\n        setFilters: filters => ({ filters }),\n        setLocalFilters: filters => ({ filters }),\n    }),\n\n    reducers: ({ props }) => ({\n        selectedFilter: [\n            null,\n            {\n                selectFilter: (state, { filter }) => filter,\n            },\n        ],\n        localFilters: [\n            toLocalFilters(props.filters),\n            {\n                setLocalFilters: (_, { filters }) => toLocalFilters(filters),\n            },\n        ],\n    }),\n\n    selectors: ({ selectors }) => ({\n        entities: [\n            () => [selectors.eventNames, selectors.actions],\n            (events, actions) => {\n                return {\n                    [EntityTypes.ACTIONS]: actions,\n                    [EntityTypes.EVENTS]: events.map(event => ({ id: event, name: event })),\n                }\n            },\n        ],\n        filters: [() => [selectors.localFilters], localFilters => toFilters(localFilters)],\n    }),\n\n    listeners: ({ actions, values, props }) => ({\n        updateFilter: ({ type, index, value }) => {\n            actions.setFilters(\n                values.localFilters.map((filter, i) => (i === index ? { ...filter, id: value, type } : filter))\n            )\n            actions.selectFilter(null)\n        },\n        updateFilterProperty: ({ properties, index }) => {\n            actions.setFilters(\n                values.localFilters.map((filter, i) => (i === index ? { ...filter, properties } : filter))\n            )\n        },\n        updateFilterMath: ({ math, index }) => {\n            actions.setFilters(values.localFilters.map((filter, i) => (i === index ? { ...filter, math } : filter)))\n        },\n        removeLocalFilter: ({ index }) => {\n            actions.setFilters(values.localFilters.filter((_, i) => i !== index))\n        },\n        addFilter: () => {\n            actions.setFilters([\n                ...values.localFilters,\n                { id: null, type: EntityTypes.NEW_ENTITY, order: values.localFilters.length },\n            ])\n        },\n        setFilters: ({ filters }) => {\n            props.setFilters(toFilters(filters))\n        },\n    }),\n})\n","import React, { Component } from 'react'\nimport { Card } from '../../lib/utils'\n\nexport class ActionSelectInfo extends Component {\n    infoDiv = React.createRef()\n    componentDidMount(prevProps) {\n        if (!this.infoDiv.current) return\n        let rect = this.props.boundingRect\n        this.infoDiv.current.style.top = rect.top - rect.height / 2 + 'px'\n        this.infoDiv.current.style.left = rect.left + rect.width + 'px'\n        this.infoDiv.current.style.opacity = 1\n    }\n    componentDidUpdate() {\n        this.componentDidMount()\n    }\n    render() {\n        let { entity, isOpen } = this.props\n        if (!entity) return null\n        return (\n            <div className=\"select-box-info\" ref={this.infoDiv} style={{ opacity: isOpen ? 1 : 0 }}>\n                <div style={{ marginBottom: '0.5rem' }}>{entity.name}</div>\n                {entity.steps &&\n                    entity.steps.map((step, index) => (\n                        <div key={step.id}>\n                            <Card key={step.id} style={{ marginBottom: 0 }}>\n                                <div className=\"card-body\">\n                                    <strong>\n                                        {step.event && step.event[0] == '$'\n                                            ? step.event[1].toUpperCase() + step.event.slice(2)\n                                            : step.event}\n                                    </strong>\n                                    <ul style={{ listStyle: 'none' }}>\n                                        {step.selector && (\n                                            <li>\n                                                CSS selector matches\n                                                <pre>{step.selector}</pre>\n                                            </li>\n                                        )}\n                                        {step.tag_name && (\n                                            <li>\n                                                Tag name matches <pre>{step.tag_name}</pre>\n                                            </li>\n                                        )}\n                                        {step.text && (\n                                            <li>\n                                                Text matches <pre>{step.text}</pre>\n                                            </li>\n                                        )}\n                                        {step.href && (\n                                            <li>\n                                                Link HREF matches <pre>{step.href}</pre>\n                                            </li>\n                                        )}\n                                        {step.url && (\n                                            <li>\n                                                URL {step.url_matching == 'contains' ? 'contains' : 'matches'}{' '}\n                                                <pre>{step.url}</pre>\n                                            </li>\n                                        )}\n                                    </ul>\n                                </div>\n                            </Card>\n                            {index < entity.steps.length - 1 && (\n                                <div className=\"secondary\" style={{ textAlign: 'center', margin: '1rem' }}>\n                                    OR\n                                </div>\n                            )}\n                        </div>\n                    ))}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { capitalizeFirstLetter } from '~/lib/utils'\n\nexport default class ActionSelectTab extends Component {\n    render() {\n        let { entityType, chooseEntityType, allTypes } = this.props\n        return (\n            <div style={{ display: 'flex', flexDirection: 'row', height: '25px', borderBottom: '1px solid #cccccc' }}>\n                {allTypes.map((type, index) => (\n                    <div\n                        key={index}\n                        style={{\n                            backgroundColor: entityType == type ? '#eeeeee' : 'white',\n                            flex: 1,\n                            display: 'flex',\n                            justifyContent: 'center',\n                            borderTopLeftRadius: index == 0 ? '5px' : '0px',\n                            borderTopRightRadius: index == allTypes.length - 1 ? '5px' : '0px',\n                            cursor: 'pointer',\n                        }}\n                        onClick={() => chooseEntityType(type)}\n                    >\n                        {capitalizeFirstLetter(type)}\n                    </div>\n                ))}\n            </div>\n        )\n    }\n}\n","import React, { Component, useState } from 'react'\nimport Select, { components } from 'react-select'\nimport { ActionSelectInfo } from 'scenes/trends/ActionSelectInfo'\nimport { selectStyle } from '../utils'\nimport PropTypes from 'prop-types'\nimport ActionSelectTab from './ActionSelectTab'\nimport { Link } from 'lib/components/Link'\n\nconst determineActiveTab = props => {\n    if (props.selected) {\n        return props.selected\n    } else {\n        return Array.isArray(props.children) ? props.children[0].props.title : props.children.props.title\n    }\n}\n\nexport function ActionSelectTabs(props) {\n    let [activeTab, setActiveTab] = useState(determineActiveTab(props))\n    let [labels] = useState(\n        Array.isArray(props.children) ? props.children.map(child => child.props.title) : [props.children.props.title]\n    )\n    return (\n        <div className=\"select-box\" style={{ padding: 0 }}>\n            {labels.length > 1 && (\n                <ActionSelectTab\n                    entityType={activeTab}\n                    allTypes={labels}\n                    chooseEntityType={setActiveTab}\n                ></ActionSelectTab>\n            )}\n            {Array.isArray(props.children)\n                ? props.children.map(child => {\n                      if (child.props.title !== activeTab) return undefined\n                      return child\n                  })\n                : props.children}\n        </div>\n    )\n}\n\nexport class ActionSelectPanel extends Component {\n    state = {\n        infoOpen: false,\n    }\n\n    Option = props => {\n        return (\n            <div\n                onMouseOver={e =>\n                    this.setState({\n                        infoOpen: true,\n                        infoBoundingRect: e.target.getBoundingClientRect(),\n                        infoActionId: props.value,\n                    })\n                }\n                onMouseOut={e => {\n                    this.setState({ infoOpen: false })\n                }}\n            >\n                <components.Option {...props} />\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div style={{ padding: '1rem', height: '90%', width: '100%' }}>\n                {this.props.redirect}\n                {this.state.infoOpen && (\n                    <ActionSelectInfo\n                        isOpen={this.state.infoOpen}\n                        boundingRect={this.state.infoBoundingRect}\n                        entity={this.props.onHover(this.state.infoActionId)}\n                    />\n                )}\n                <Select\n                    onBlur={e => {\n                        if (e.relatedTarget && e.relatedTarget.tagName == 'A') return\n                        this.setState({ infoOpen: false })\n                    }}\n                    onChange={this.props.onSelect}\n                    defaultMenuIsOpen={this.props.defaultMenuIsOpen}\n                    autoFocus={true}\n                    value={this.props.active}\n                    className=\"select-box-select\"\n                    styles={selectStyle}\n                    components={{ Option: this.Option }}\n                    options={this.props.options}\n                />\n                {this.props.message}\n            </div>\n        )\n    }\n}\n\nActionSelectPanel.propTypes = {\n    options: PropTypes.array.isRequired,\n    defaultMenuIsOpen: PropTypes.bool.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    title: PropTypes.string.isRequired,\n    onHover: PropTypes.func.isRequired,\n}\n","import React, { useRef, useEffect } from 'react'\nimport { useActions, useValues } from 'kea'\nimport { EntityTypes } from '../trendsLogic'\nimport { ActionSelectPanel, ActionSelectTabs } from '~/lib/components/ActionSelectBox'\nimport { Link } from 'lib/components/Link'\nimport { userLogic } from 'scenes/userLogic'\nimport { actionsModel } from '~/models/actionsModel'\n\nexport function ActionFilterDropdown({ onClickOutside, logic }) {\n    const dropdownRef = useRef()\n    const { selectedFilter } = useValues(logic)\n    const { eventNamesGrouped } = useValues(userLogic)\n    const { actionsGrouped } = useValues(actionsModel)\n\n    const deselect = e => {\n        if (dropdownRef.current.contains(e.target)) {\n            return\n        }\n        onClickOutside && onClickOutside(e)\n    }\n\n    useEffect(() => {\n        document.addEventListener('mousedown', deselect)\n        return () => {\n            document.removeEventListener('mousedown', deselect)\n        }\n    }, [])\n\n    return (\n        <div ref={dropdownRef} className=\"action-filter-dropdown\">\n            <ActionSelectTabs\n                selected={\n                    selectedFilter.type && selectedFilter.type !== EntityTypes.NEW_ENTITY ? selectedFilter.type : null\n                }\n            >\n                <ActionPanelContainer\n                    title=\"actions\"\n                    entityType={EntityTypes.ACTIONS}\n                    options={actionsGrouped}\n                    panelIndex={0}\n                    logic={logic}\n                />\n                <ActionPanelContainer\n                    title=\"events\"\n                    entityType={EntityTypes.EVENTS}\n                    options={eventNamesGrouped}\n                    panelIndex={1}\n                    logic={logic}\n                />\n            </ActionSelectTabs>\n        </div>\n    )\n}\n\nexport function ActionPanelContainer({ entityType, panelIndex, options, logic }) {\n    const { entities, selectedFilter, filters } = useValues(logic)\n    const { updateFilter } = useActions(logic)\n\n    const dropDownOnSelect = item => updateFilter({ type: entityType, value: item.value, index: selectedFilter.index })\n    const dropDownOnHover = value => entities[entityType].filter(a => a.id === value)[0]\n\n    const redirect = () => {\n        if (selectedFilter && selectedFilter.type === EntityTypes.ACTIONS && entityType === EntityTypes.ACTIONS) {\n            const action = entities[selectedFilter.type].filter(a => a.id === selectedFilter.filter.id)[0]\n            return (\n                <a href={'/action/' + selectedFilter.filter.id} target=\"_blank\">\n                    Edit \"{action.name}\" <i className=\"fi flaticon-export\" />\n                </a>\n            )\n        } else {\n            return null\n        }\n    }\n\n    const message = () => {\n        if (entityType === EntityTypes.ACTIONS && !filters[EntityTypes.ACTIONS]) {\n            return (\n                <div\n                    style={{\n                        height: '100%',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                    }}\n                >\n                    <p>You don't have any actions defined yet. </p>\n                    <Link to=\"/action\">Click here to define an action.</Link>\n                </div>\n            )\n        } else {\n            return null\n        }\n    }\n\n    return (\n        <ActionSelectPanel\n            key={panelIndex}\n            title={entityType}\n            options={options}\n            defaultMenuIsOpen={true}\n            onSelect={dropDownOnSelect}\n            onHover={dropDownOnHover}\n            active={null}\n            redirect={redirect()}\n            message={message()}\n        />\n    )\n}\n","import React, { useRef, useState } from 'react'\nimport { useActions, useValues } from 'kea'\nimport { EntityTypes } from '../trendsLogic'\nimport { CloseButton } from '~/lib/utils'\nimport { Dropdown } from '~/lib/components/Dropdown'\nimport { ActionFilterDropdown } from './ActionFilterDropdown'\nimport { Tooltip } from 'antd'\nimport { PropertyFilters } from 'lib/components/PropertyFilters/PropertyFilters'\nimport { userLogic } from 'scenes/userLogic'\n\nconst determineFilterLabel = (visible, filter) => {\n    if (visible) return 'Hide Filters'\n\n    if (filter.properties && Object.keys(filter.properties).length > 0) {\n        return (\n            Object.keys(filter.properties).length + ' Filter' + (Object.keys(filter.properties).length === 1 ? '' : 's')\n        )\n    }\n    return 'Add Filters'\n}\n\nexport function ActionFilterRow({ logic, filter, index }) {\n    const node = useRef()\n    const { selectedFilter, entities } = useValues(logic)\n    const { selectFilter, updateFilterMath, removeLocalFilter, updateFilterProperty } = useActions(logic)\n    const { eventProperties } = useValues(userLogic)\n    const [entityFilterVisible, setEntityFilterVisible] = useState(false)\n\n    let entity, name, value\n    let math = filter.math\n    const onClose = () => {\n        removeLocalFilter({ value: filter.id, type: filter.type, index })\n    }\n    const onMathSelect = (_, math) => {\n        updateFilterMath({ math, value: filter.id, type: filter.type, index: index })\n    }\n\n    const dropDownCondition = () =>\n        selectedFilter && selectedFilter.type === filter.type && selectedFilter.index === index\n\n    const onClick = () => {\n        if (selectedFilter && selectedFilter.type === filter.type && selectedFilter.index === index) selectFilter(null)\n        else selectFilter({ filter, type: filter.type, index })\n    }\n\n    if (filter.type === EntityTypes.NEW_ENTITY) {\n        name = null\n        value = null\n    } else {\n        entity = entities[filter.type].filter(action => action.id === filter.id)[0] || {}\n        name = entity.name || filter.name\n        value = entity.id || filter.id\n    }\n    return (\n        <div>\n            <button\n                ref={node}\n                className=\"filter-action\"\n                type=\"button\"\n                onClick={onClick}\n                style={{\n                    border: 0,\n                    padding: 0,\n                    fontWeight: 500,\n                    borderBottom: '1.5px dotted var(--blue)',\n                }}\n            >\n                {name || 'Select action'}\n            </button>\n            <MathSelector math={math} index={index} onMathSelect={onMathSelect} />\n            <div className=\"btn btn-sm btn-light\" onClick={() => setEntityFilterVisible(!entityFilterVisible)}>\n                {determineFilterLabel(entityFilterVisible, filter)}\n            </div>\n            <CloseButton\n                onClick={onClose}\n                style={{\n                    float: 'none',\n                    marginLeft: 8,\n                    position: 'absolute',\n                    marginTop: 3,\n                }}\n            />\n            {entityFilterVisible && (\n                <div className=\"ml-4\">\n                    <PropertyFilters\n                        pageKey={`${index}-${value}-filter`}\n                        properties={eventProperties}\n                        propertyFilters={filter.properties}\n                        onChange={properties => updateFilterProperty({ properties, index })}\n                        style={{ marginBottom: 0 }}\n                    />\n                </div>\n            )}\n            {dropDownCondition() && (\n                <ActionFilterDropdown\n                    logic={logic}\n                    onClickOutside={e => {\n                        if (node.current.contains(e.target)) {\n                            return\n                        }\n                        selectFilter(null)\n                    }}\n                />\n            )}\n        </div>\n    )\n}\n\nfunction MathSelector(props) {\n    let items = ['Total', 'DAU']\n    return (\n        <Dropdown\n            title={items[items.map(i => i.toLowerCase()).indexOf(props.math)] || 'Total'}\n            buttonClassName=\"btn btn-sm btn-light\"\n            style={{ marginLeft: 32, marginRight: 16 }}\n        >\n            <Tooltip\n                placement=\"right\"\n                title=\"Total shows total event volume. If a user performs an event 3 times on one day it counts as 3.\"\n            >\n                <a href=\"#\" className=\"dropdown-item\" onClick={() => props.onMathSelect(props.index, 'total')}>\n                    Total\n                </a>\n            </Tooltip>\n\n            <Tooltip\n                placement=\"right\"\n                title=\"Daily Active Users. Selecting DAU will mean a user performing an event 3 times on one day counts as 1.\"\n            >\n                <a href=\"#\" className=\"dropdown-item\" onClick={() => props.onMathSelect(props.index, 'dau')}>\n                    DAU\n                </a>\n            </Tooltip>\n        </Dropdown>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { useActions, useValues } from 'kea'\nimport { entityFilterLogic } from './entityFilterLogic'\nimport { ActionFilterRow } from './ActionFilterRow'\nimport { Button } from 'antd'\n\nexport function ActionFilter({ setFilters, filters, typeKey }) {\n    const logic = entityFilterLogic({ setFilters, filters, typeKey })\n\n    const { localFilters } = useValues(logic)\n    const { addFilter, setLocalFilters } = useActions(logic)\n\n    // No way around this. Somehow the ordering of the logic calling each other causes stale \"localFilters\"\n    // to be shown on the /funnels page, even if we try to use a selector with props to hydrate it\n    useEffect(() => {\n        setLocalFilters(filters)\n    }, [filters])\n\n    return (\n        <div>\n            {localFilters &&\n                localFilters.map((filter, index) => (\n                    <ActionFilterRow logic={logic} filter={filter} index={index} key={index} />\n                ))}\n            <Button type=\"primary\" onClick={() => addFilter()} style={{ marginTop: '0.5rem' }}>\n                Add action/event\n            </Button>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Card } from 'lib/utils'\nimport { Link } from 'lib/components/Link'\nimport { actionsModel } from '~/models/actionsModel'\nimport { useValues, useActions } from 'kea'\nimport { funnelLogic } from './funnelLogic'\nimport { ActionFilter } from 'scenes/trends/ActionFilter/ActionFilter'\nimport { PropertyFilters } from 'lib/components/PropertyFilters/PropertyFilters'\nimport { Button } from 'antd'\nimport { userLogic } from 'scenes/userLogic'\n\nexport function EditFunnel({ funnelId }) {\n    const { funnel, isStepsEmpty } = useValues(funnelLogic({ id: funnelId }))\n    const { setFunnel, updateFunnel, createFunnel } = useActions(funnelLogic({ id: funnelId }))\n    const { actions, actionsLoading } = useValues(actionsModel())\n    const { eventProperties } = useValues(userLogic)\n\n    return (\n        <form\n            onSubmit={e => {\n                e.preventDefault()\n                if (!funnel.id) {\n                    createFunnel(funnel)\n                } else {\n                    updateFunnel(funnel)\n                }\n            }}\n        >\n            <Card>\n                <div className=\"card-body\">\n                    <input\n                        required\n                        placeholder=\"User drop off through signup\"\n                        type=\"text\"\n                        autoFocus\n                        onChange={e => setFunnel({ name: e.target.value })}\n                        value={funnel.name || ''}\n                        className=\"form-control\"\n                    />\n                    {!actionsLoading && actions.length === 0 && (\n                        <div className=\"alert alert-warning\" style={{ marginTop: '1rem' }}>\n                            You don't have any actions set up. <Link to=\"/actions\">Click here to set up an action</Link>\n                        </div>\n                    )}\n                    <br />\n                    <ActionFilter\n                        filters={funnel.filters}\n                        setFilters={filters => setFunnel({ filters }, false)}\n                        typeKey={`EditFunnel-${funnel.id || 'new'}`}\n                    />\n                    <br />\n                    <hr />\n                    <h4 className=\"secondary mt-3\">Filters</h4>\n                    <PropertyFilters\n                        pageKey={`EditFunnel-${funnel.id || 'new'}`}\n                        properties={eventProperties}\n                        propertyFilters={funnel.filters.properties || []}\n                        onChange={properties =>\n                            setFunnel({\n                                filters: {\n                                    properties,\n                                },\n                            })\n                        }\n                        style={{ marginBottom: 0 }}\n                    />\n                    <hr />\n                    <Button type=\"primary mt-3\" htmlType=\"submit\" disabled={isStepsEmpty}>\n                        Save funnel\n                    </Button>\n                    <br />\n                    {isStepsEmpty && <small>Add some actions/events to save the funnel</small>}\n                </div>\n            </Card>\n        </form>\n    )\n}\n"],"sourceRoot":""}