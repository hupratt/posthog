{"version":3,"sources":["webpack:///./frontend/src/lib/components/Property.js","webpack:///./frontend/src/scenes/events/eventsTableLogic.js","webpack:///./frontend/src/lib/components/FilterPropertyLink.js","webpack:///./frontend/src/scenes/events/EventElements.js","webpack:///./frontend/src/scenes/events/EventDetails.js","webpack:///./frontend/src/scenes/actions/LiveActionsTable.js","webpack:///./frontend/src/scenes/actions/LiveActions.js"],"names":["Property","value","JSON","stringify","replace","eventsTableLogic","kea","key","props","fixedFilters","apiUrl","live","actions","setProperties","properties","updateProperty","fetchEvents","nextParams","fetchEventsSuccess","events","hasNext","isNext","fetchNextEvents","flipSort","pollEvents","pollEventsSuccess","prependNewEvents","setSelectedEvent","selectedEvent","setPollTimeout","pollTimeout","setDelayedLoading","reducers","initialPathname","state","router","selectors","location","pathname","noop","a","_","isLoading","isLoadingNext","orderBy","newEvents","highlightEvents","forEach","event","id","propertiesForUrl","Object","keys","length","values","afterMount","beforeUnmount","clearTimeout","actionToUrl","urlToAction","searchParams","error","objectsEqual","listeners","timestamp","breakpoint","urlParams","toParams","api","get","results","next","setTimeout","params","after","FilterPropertyLink","property","filters","onClick","url","combineUrl","window","to","propTypes","PropTypes","string","isRequired","object","func","indent","n","Array","fill","map","i","EventElements","elements","reverse","element","index","className","style","margin","padding","borderRadius","backgroundColor","tag_name","attr_id","entries","attributes","text","slice","EventDetails","useState","selected","setSelected","role","aria-orientation","maxWidth","overflow","PropertiesTable","Timestamp","moment","toISOString","LiveActionsTable","logic","useValues","useActions","PropertyFilters","pageKey","propertyFilters","position","scope","colSpan","asOverlay","Link","action","isSame","format","name","distinct_id","person","param","title","fromNow","$browser","$browser_version","$os","connect","undefined","LiveActions","this","Component"],"mappings":"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","file":"liveActions.js","sourcesContent":["import React from 'react'\n\nexport function Property({ value }) {\n    return <>{typeof value === 'object' ? JSON.stringify(value) : value && value.replace(/(^\\w+:|^)\\/\\//, '')}</>\n}\n","import { kea } from 'kea'\nimport { objectsEqual, toParams } from 'lib/utils'\nimport { router } from 'kea-router'\nimport api from 'lib/api'\n\nconst POLL_TIMEOUT = 5000\n\n// props:\n// - fixedFilters\n// - apiUrl = 'api/event/'\n// - live = false\nexport const eventsTableLogic = kea({\n    // Set a unique key based on the fixed filters.\n    // This way if we move back/forward between /events and /person/ID, the logic is reloaded.\n    key: props =>\n        (props.fixedFilters ? JSON.stringify(props.fixedFilters) : 'all') +\n        '-' +\n        (props.apiUrl || 'events') +\n        (props.live ? '-live' : ''),\n\n    actions: () => ({\n        setProperties: properties => ({ properties }),\n        updateProperty: (key, value) => ({ key, value }),\n        fetchEvents: (nextParams = null) => ({ nextParams }),\n        fetchEventsSuccess: (events, hasNext = false, isNext = false) => ({ events, hasNext, isNext }),\n        fetchNextEvents: true,\n        flipSort: true,\n        pollEvents: true,\n        pollEventsSuccess: events => ({ events }),\n        prependNewEvents: events => ({ events }),\n        setSelectedEvent: selectedEvent => ({ selectedEvent }),\n        setPollTimeout: pollTimeout => ({ pollTimeout }),\n        setDelayedLoading: true,\n    }),\n\n    reducers: () => ({\n        // save the pathname that was used when this logic was mounted\n        // we use it to NOT update the filters when the user moves away from this path, yet the scene is still active\n        initialPathname: [state => router.selectors.location(state).pathname, { noop: a => a }],\n        properties: [\n            {},\n            {\n                setProperties: (_, { properties }) => properties,\n                updateProperty: (state, { key, value }) => ({ ...state, [key]: value }),\n            },\n        ],\n        isLoading: [\n            false,\n            {\n                fetchEvents: (state, { nextParams }) => (nextParams ? state : state || null),\n                setDelayedLoading: () => true,\n                fetchEventsSuccess: () => false,\n            },\n        ],\n        isLoadingNext: [\n            false,\n            {\n                fetchNextEvents: () => true,\n                fetchEventsSuccess: () => false,\n            },\n        ],\n        events: [\n            [],\n            {\n                fetchEventsSuccess: (state, { events, isNext }) => (isNext ? [...state, ...events] : events),\n                prependNewEvents: (state, { events }) => [...events, ...state],\n            },\n        ],\n        hasNext: [\n            false,\n            {\n                fetchEvents: () => false,\n                fetchNextEvents: () => false,\n                fetchEventsSuccess: (_, { hasNext }) => hasNext,\n            },\n        ],\n        orderBy: ['-timestamp', { flipSort: state => (state === 'timestamp' ? '-timestamp' : 'timestamp') }],\n        selectedEvent: [\n            null,\n            {\n                setSelectedEvent: (_, { selectedEvent }) => selectedEvent,\n            },\n        ],\n        newEvents: [\n            [],\n            {\n                pollEventsSuccess: (_, { events }) => events,\n                prependNewEvents: () => [],\n            },\n        ],\n        highlightEvents: [\n            {},\n            {\n                pollEventsSuccess: () => ({}),\n                prependNewEvents: (_, { events }) => {\n                    const highlightEvents = {}\n                    events.forEach(event => {\n                        highlightEvents[event.id] = true\n                    })\n                    return highlightEvents\n                },\n            },\n        ],\n        pollTimeout: [\n            null,\n            {\n                setPollTimeout: (_, { pollTimeout }) => pollTimeout,\n            },\n        ],\n    }),\n\n    selectors: ({ selectors }) => ({\n        propertiesForUrl: [\n            () => [selectors.properties],\n            properties => {\n                if (Object.keys(properties).length > 0) {\n                    return { properties }\n                } else {\n                    return ''\n                }\n            },\n        ],\n    }),\n\n    events: ({ actions, values }) => ({\n        afterMount: [actions.fetchEvents],\n        beforeUnmount: () => {\n            clearTimeout(values.pollTimeout)\n        },\n    }),\n\n    actionToUrl: ({ values }) => ({\n        setProperties: () => {\n            return [router.values.location.pathname, values.propertiesForUrl]\n        },\n        updateProperty: () => {\n            return [router.values.location.pathname, values.propertiesForUrl]\n        },\n    }),\n\n    urlToAction: ({ actions, values }) => ({\n        '*': (_, searchParams) => {\n            try {\n                // if the url changed, but we are not anymore on the page we were at when the logic was mounted\n                if (router.values.location.pathname !== values.initialPathname) {\n                    return\n                }\n            } catch (error) {\n                // since this is a catch-all route, this code might run during or after the logic was unmounted\n                // if we have an error accessing the filter value, the logic is gone and we should return\n                return\n            }\n\n            if (!objectsEqual(searchParams.properties || {}, values.properties)) {\n                actions.setProperties(searchParams.properties || {})\n            }\n        },\n    }),\n\n    listeners: ({ actions, values, props }) => ({\n        setProperties: () => {\n            actions.fetchEvents()\n        },\n        updateProperty: () => {\n            actions.fetchEvents()\n        },\n        flipSort: () => {\n            actions.fetchEvents()\n        },\n        fetchNextEvents: async () => {\n            const { events, orderBy } = values\n\n            actions.fetchEvents({\n                [orderBy === 'timestamp' ? 'after' : 'before']: events[events.length - 1].timestamp,\n            })\n        },\n        fetchEvents: [\n            async (_, breakpoint) => {\n                if (values.events.length > 0) {\n                    await breakpoint(500)\n                }\n                if (values.isLoading === null) {\n                    actions.setDelayedLoading()\n                }\n            },\n            async ({ nextParams }, breakpoint) => {\n                clearTimeout(values.pollTimeout)\n\n                const urlParams = toParams({\n                    properties: values.properties,\n                    ...(props.fixedFilters || {}),\n                    ...(nextParams || {}),\n                    orderBy: [values.orderBy],\n                })\n\n                const events = await api.get(`${props.apiUrl || 'api/event/'}?${urlParams}`)\n                breakpoint()\n                actions.fetchEventsSuccess(events.results, events.next, !!nextParams)\n\n                actions.setPollTimeout(setTimeout(actions.pollEvents, POLL_TIMEOUT))\n            },\n        ],\n        pollEvents: async (_, breakpoint) => {\n            // Poll events when they are ordered in ascending order based on timestamp\n            if (values.orderBy !== '-timestamp') {\n                return\n            }\n\n            let params = {\n                properties: values.properties,\n                ...(props.fixedFilters || {}),\n                orderBy: [values.orderBy],\n            }\n\n            const event = values.events[0]\n\n            if (event) {\n                params.after = event.timestamp || event.event.timestamp\n            }\n\n            const events = await api.get(`${props.apiUrl || 'api/event/'}?${toParams(params)}`)\n            breakpoint()\n\n            if (props.live) {\n                actions.prependNewEvents(events.results)\n            } else {\n                actions.pollEventsSuccess(events.results)\n            }\n\n            actions.setPollTimeout(setTimeout(actions.pollEvents, POLL_TIMEOUT))\n        },\n    }),\n})\n","import React from 'react'\nimport { combineUrl } from 'kea-router'\nimport PropTypes from 'prop-types'\n\nimport { Property } from 'lib/components/Property'\nimport { Link } from 'lib/components/Link'\n\nexport function FilterPropertyLink({ property, value, filters, onClick }) {\n    const { url } = combineUrl(window.location.pathname, {\n        ...filters,\n        properties: { ...filters.properties, [property]: value },\n    })\n\n    return (\n        <Link\n            to={url}\n            onClick={event => {\n                if (onClick) {\n                    onClick(property, value)\n                }\n            }}\n        >\n            <Property value={value} />\n        </Link>\n    )\n}\nFilterPropertyLink.propTypes = {\n    property: PropTypes.string.isRequired,\n    value: PropTypes.string,\n    filters: PropTypes.object.isRequired,\n    onClick: PropTypes.func,\n}\n","import React from 'react'\n\nfunction indent(n) {\n    return Array(n)\n        .fill('')\n        .map((_, i) => <span key={i}>&nbsp;&nbsp;&nbsp;&nbsp;</span>)\n}\n\nexport function EventElements({ event }) {\n    const elements = [...event.elements].reverse()\n\n    return (\n        <div>\n            {elements.map((element, index) => (\n                <pre\n                    className=\"code\"\n                    style={{\n                        margin: 0,\n                        padding: 0,\n                        borderRadius: 0,\n                        ...(index === elements.length - 1 ? { backgroundColor: 'var(--blue)' } : {}),\n                    }}\n                >\n                    {indent(index)}\n                    &lt;{element.tag_name}\n                    {element.attr_id && ' id=\"' + element.attr_id + '\"'}\n                    {Object.entries(element.attributes).map(([key, value]) => (\n                        <span>\n                            {' '}\n                            {key.replace('attr__', '')}=\"{value}\"\n                        </span>\n                    ))}\n                    &gt;{element.text}\n                    {index === elements.length - 1 && <span>&lt;/{element.tag_name}&gt;</span>}\n                </pre>\n            ))}\n            {[...elements]\n                .reverse()\n                .slice(1)\n                .map((element, index) => (\n                    <pre className=\"code\" key={index} style={{ margin: 0, padding: 0, borderRadius: 0 }}>\n                        {indent(elements.length - index - 2)}\n                        &lt;/{element.tag_name}&gt;\n                    </pre>\n                ))}\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { PropertiesTable } from 'lib/components/PropertiesTable'\nimport moment from 'moment'\nimport { EventElements } from 'scenes/events/EventElements'\n\nexport function EventDetails({ event }) {\n    const [selected, setSelected] = useState('properties')\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-2\">\n                <div className=\"nav flex-column nav-pills\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\n                    <a\n                        className={'cursor-pointer nav-link ' + (selected === 'properties' && 'active')}\n                        onClick={() => setSelected('properties')}\n                    >\n                        Properties\n                    </a>\n                    {event.elements.length > 0 && (\n                        <a\n                            className={'cursor-pointer nav-link ' + (selected === 'elements' && 'active')}\n                            onClick={() => setSelected('elements')}\n                        >\n                            Elements\n                        </a>\n                    )}\n                </div>\n            </div>\n            <div className=\"col-10\">\n                {selected === 'properties' ? (\n                    <div className=\"d-flex flex-wrap flex-column\" style={{ maxWidth: '100%', overflow: 'scroll' }}>\n                        <PropertiesTable\n                            properties={{\n                                Timestamp: moment(event.timestamp).toISOString(),\n                                ...event.properties,\n                            }}\n                        />\n                    </div>\n                ) : (\n                    <EventElements event={event} />\n                )}\n            </div>\n        </div>\n    )\n}\n","import React, { Fragment } from 'react'\nimport moment from 'moment'\n\nimport { TableRowLoading } from 'lib/utils'\nimport { Link } from 'lib/components/Link'\nimport { PropertyFilters } from 'lib/components/PropertyFilters/PropertyFilters'\nimport { FilterPropertyLink } from 'lib/components/FilterPropertyLink'\n\nimport { EventDetails } from 'scenes/events/EventDetails'\nimport { eventsTableLogic } from 'scenes/events/eventsTableLogic'\nimport { useActions, useValues } from 'kea'\n\nexport function LiveActionsTable({ fixedFilters }) {\n    const logic = eventsTableLogic({ fixedFilters, apiUrl: 'api/event/actions/', live: true })\n    const { properties, events, isLoading, selectedEvent, highlightEvents } = useValues(logic)\n    const { setSelectedEvent } = useActions(logic)\n\n    let params = ['$current_url']\n    return (\n        <div className=\"events\">\n            <PropertyFilters pageKey=\"LiveActionsTable\" propertyFilters={properties} />\n            <table className=\"table\" style={{ position: 'relative' }}>\n                <tbody>\n                    <tr>\n                        <th scope=\"col\">Action ID</th>\n                        <th scope=\"col\">User</th>\n                        <th scope=\"col\">Path</th>\n                        <th scope=\"col\">Date</th>\n                        <th scope=\"col\">Browser</th>\n                    </tr>\n                    {isLoading && <TableRowLoading colSpan={5} asOverlay={events.length > 0} />}\n                    {events && events.length === 0 && (\n                        <tr>\n                            <td colSpan=\"5\">\n                                We didn't find any events matching any actions. You can either{' '}\n                                <Link to=\"/actions\">set up some actions</Link> or{' '}\n                                <Link to=\"/setup\">integrate PostHog in your app</Link>.\n                            </td>\n                        </tr>\n                    )}\n                    {events &&\n                        events.map((action, index) => (\n                            <Fragment key={action.id}>\n                                {index > 0 &&\n                                    !moment(action.event.timestamp).isSame(\n                                        events[index - 1].event.timestamp,\n                                        'day'\n                                    ) && (\n                                        <tr>\n                                            <td colSpan=\"5\" className=\"event-day-separator\">\n                                                {moment(action.event.timestamp).format('LL')}\n                                            </td>\n                                        </tr>\n                                    )}\n                                <tr\n                                    className={\n                                        'cursor-pointer event-row' +\n                                        (highlightEvents[action.id] ? ' event-row-new' : '')\n                                    }\n                                    onClick={() => setSelectedEvent(selectedEvent === action.id ? null : action.id)}\n                                >\n                                    <td>{action.action.name}</td>\n                                    <td>\n                                        <Link to={`/person/${action.event.distinct_id}`}>{action.event.person}</Link>\n                                    </td>\n                                    {params.map(param => (\n                                        <td key={param} title={action.event.properties[param]}>\n                                            <FilterPropertyLink\n                                                property={param}\n                                                value={action.event.properties[param]}\n                                                filters={{ properties }}\n                                            />\n                                        </td>\n                                    ))}\n                                    <td>{moment(action.event.timestamp).fromNow()}</td>\n                                    <td>\n                                        {action.event.properties.$browser} {action.event.properties.$browser_version} -{' '}\n                                        {action.event.properties.$os}\n                                    </td>\n                                </tr>\n                                {selectedEvent === action.id && (\n                                    <tr>\n                                        <td colSpan=\"4\">\n                                            <EventDetails event={action.event} />\n                                        </td>\n                                    </tr>\n                                )}\n                            </Fragment>\n                        ))}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\n\nimport { LiveActionsTable } from './LiveActionsTable'\nimport { eventsTableLogic } from 'scenes/events/eventsTableLogic'\nimport { connect } from 'kea'\n\nexport const logic = connect(() => [\n    eventsTableLogic({ fixedFilters: undefined, apiUrl: 'api/event/actions/', live: true }),\n])\n\nexport class LiveActions extends Component {\n    render() {\n        return <LiveActionsTable {...this.props} />\n    }\n}\n"],"sourceRoot":""}