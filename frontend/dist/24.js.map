{"version":3,"sources":["webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/pairs.js","webpack:///./node_modules/d3-array/src/cross.js","webpack:///./node_modules/d3-array/src/descending.js","webpack:///./node_modules/d3-array/src/number.js","webpack:///./node_modules/d3-array/src/variance.js","webpack:///./node_modules/d3-array/src/deviation.js","webpack:///./node_modules/d3-array/src/extent.js","webpack:///./node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-array/src/constant.js","webpack:///./node_modules/d3-array/src/identity.js","webpack:///./node_modules/d3-array/src/range.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-array/src/threshold/sturges.js","webpack:///./node_modules/d3-array/src/histogram.js","webpack:///./node_modules/d3-array/src/quantile.js","webpack:///./node_modules/d3-array/src/threshold/freedmanDiaconis.js","webpack:///./node_modules/d3-array/src/threshold/scott.js","webpack:///./node_modules/d3-array/src/max.js","webpack:///./node_modules/d3-array/src/mean.js","webpack:///./node_modules/d3-array/src/median.js","webpack:///./node_modules/d3-array/src/merge.js","webpack:///./node_modules/d3-array/src/min.js","webpack:///./node_modules/d3-array/src/permute.js","webpack:///./node_modules/d3-array/src/scan.js","webpack:///./node_modules/d3-array/src/shuffle.js","webpack:///./node_modules/d3-array/src/sum.js","webpack:///./node_modules/d3-array/src/transpose.js","webpack:///./node_modules/d3-array/src/zip.js","webpack:///./node_modules/d3-shape/src/constant.js","webpack:///./node_modules/d3-shape/src/point.js","webpack:///./node_modules/d3-shape/src/pointRadial.js","webpack:///./node_modules/d3-shape/src/link/index.js","webpack:///./node_modules/d3-shape/src/array.js","webpack:///./node_modules/d3-path/src/path.js","webpack:///./node_modules/d3-sankey/src/align.js","webpack:///./node_modules/d3-sankey/src/constant.js","webpack:///./node_modules/d3-sankey/src/sankey.js","webpack:///./node_modules/d3-sankey/src/sankeyLinkHorizontal.js"],"names":["a","b","NaN","f","compare","length","d","x","ascending","left","lo","hi","mid","right","ascendingBisect","bisector","bisectRight","bisectLeft","bisect","pair","i","n","array","p","pairs","Array","i0","i1","value0","n0","values0","n1","values1","values","reduce","value","delta","m","mean","sum","valueof","isNaN","number","v","variance","Math","sqrt","min","max","prototype","slice","map","start","stop","step","arguments","ceil","range","e10","e5","e2","reverse","ticks","count","tickIncrement","isFinite","floor","power","log","LN10","error","pow","tickStep","step0","abs","step1","LN2","identity","domain","extent","threshold","sturges","histogram","data","xz","x0","x1","tz","isArray","shift","pop","bin","bins","push","_","constant","thresholds","call","sort","quantile","deviation","numbers","merged","arrays","j","indexes","permutes","xi","xj","t","random","matrix","transpose","row","y","cos","PI","sin","linkSource","source","linkTarget","target","link","curve","context","buffer","argv","s","apply","this","curveHorizontal","y0","y1","moveTo","bezierCurveTo","curveVertical","curveRadial","p0","p1","p2","p3","linkHorizontal","linkVertical","linkRadial","l","angle","radius","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","path","constructor","closePath","lineTo","quadraticCurveTo","x2","y2","arcTo","r","x21","y21","x01","y01","l01_2","Error","x20","y20","l21_2","l20_2","l21","l01","tan","acos","t01","t21","arc","a0","a1","ccw","dx","dy","cw","da","rect","w","h","toString","targetDepth","depth","node","height","justify","sourceLinks","center","targetLinks","ascendingSourceBreadth","ascendingBreadth","index","ascendingTargetBreadth","defaultId","defaultNodes","graph","nodes","defaultLinks","links","find","nodeById","id","get","computeLinkBreadths","width","Sankey","py","linkSort","align","iterations","sankey","computeNodeLinks","computeNodeValues","computeNodeDepths","computeNodeHeights","computeNodeBreadths","entries","Map","undefined","fixedValue","current","Set","next","size","add","columns","kx","layer","column","computeNodeLayers","c","ky","reorderLinks","initializeNodeBreadths","alpha","beta","relaxRightToLeft","relaxLeftToRight","targetTop","reorderNodeLinks","resolveCollisions","sourceTop","subject","resolveCollisionsBottomToTop","resolveCollisionsTopToBottom","update","nodeId","nodeAlign","nodeSort","nodeWidth","nodePadding","horizontalSource","horizontalTarget"],"mappings":"ynCAAe,oBACb,OAAOA,EAAIC,GAAK,EAAID,EAAIC,EAAI,EAAID,GAAKC,EAAI,EAAIC,KCChC,cA0Bf,IAA6BC,EAxB3B,OADuB,IAAnBC,EAAQC,SAyBeF,EAzB6BC,EAA9BA,EA0BnB,SAASE,EAAGC,GACjB,OAAOC,EAAUL,EAAEG,GAAIC,KA1BlB,CACLE,KAAM,SAAST,EAAGO,EAAGG,EAAIC,GAGvB,IAFU,MAAND,IAAYA,EAAK,GACX,MAANC,IAAYA,EAAKX,EAAEK,QAChBK,EAAKC,GAAI,CACd,IAAIC,EAAMF,EAAKC,IAAO,EAClBP,EAAQJ,EAAEY,GAAML,GAAK,EAAGG,EAAKE,EAAM,EAClCD,EAAKC,EAEZ,OAAOF,GAETG,MAAO,SAASb,EAAGO,EAAGG,EAAIC,GAGxB,IAFU,MAAND,IAAYA,EAAK,GACX,MAANC,IAAYA,EAAKX,EAAEK,QAChBK,EAAKC,GAAI,CACd,IAAIC,EAAMF,EAAKC,IAAO,EAClBP,EAAQJ,EAAEY,GAAML,GAAK,EAAGI,EAAKC,EAC5BF,EAAKE,EAAM,EAElB,OAAOF,KCpBb,IAAII,EAAkBC,EAASP,GACpBQ,EAAcF,EAAgBD,MAC9BI,EAAaH,EAAgBL,KACzBS,EAAA,ECNA,aAAAf,GACJ,MAALA,IAAWA,EAAIgB,GAEnB,IADA,IAAIC,EAAI,EAAGC,EAAIC,EAAMjB,OAAS,EAAGkB,EAAID,EAAM,GAAIE,EAAQ,IAAIC,MAAMJ,EAAI,EAAI,EAAIA,GACtED,EAAIC,GAAGG,EAAMJ,GAAKjB,EAAEoB,EAAGA,EAAID,IAAQF,IAC1C,OAAOI,GAGF,SAASL,EAAKnB,EAAGC,GACtB,MAAO,CAACD,EAAGC,GCNE,sBACb,IAGIyB,EACAC,EACAP,EACAQ,EANAC,EAAKC,EAAQzB,OACb0B,EAAKC,EAAQ3B,OACb4B,EAAS,IAAIR,MAAMI,EAAKE,GAQ5B,IAFc,MAAVG,IAAgBA,EAASf,GAExBO,EAAKN,EAAI,EAAGM,EAAKG,IAAMH,EAC1B,IAAKE,EAASE,EAAQJ,GAAKC,EAAK,EAAGA,EAAKI,IAAMJ,IAAMP,EAClDa,EAAOb,GAAKc,EAAON,EAAQI,EAAQL,IAIvC,OAAOM,GCnBM,gBACb,OAAOhC,EAAID,GAAK,EAAIC,EAAID,EAAI,EAAIC,GAAKD,EAAI,EAAIE,KCDhC,cACb,OAAa,OAANK,EAAaL,KAAOK,GCCd,gBACb,IAII4B,EACAC,EALAf,EAAIY,EAAO5B,OACXgC,EAAI,EACJjB,GAAK,EACLkB,EAAO,EAGPC,EAAM,EAEV,GAAe,MAAXC,EACF,OAASpB,EAAIC,GACNoB,MAAMN,EAAQO,EAAOT,EAAOb,OAG/BmB,IAFAH,EAAQD,EAAQG,IAEAH,GADhBG,GAAQF,IAAUC,UAOtB,OAASjB,EAAIC,GACNoB,MAAMN,EAAQO,EAAOF,EAAQP,EAAOb,GAAIA,EAAGa,OAG9CM,IAFAH,EAAQD,EAAQG,IAEAH,GADhBG,GAAQF,IAAUC,KAMxB,GAAIA,EAAI,EAAG,OAAOE,GAAOF,EAAI,IC7BhB,aAAAlC,GACb,IAAIwC,EAAIC,EAAStB,EAAOnB,GACxB,OAAOwC,EAAIE,KAAKC,KAAKH,GAAKA,GCJb,gBACb,IAEIR,EACAY,EACAC,EAJA3B,EAAIY,EAAO5B,OACXe,GAAK,EAKT,GAAe,MAAXoB,GACF,OAASpB,EAAIC,GACX,GAA2B,OAAtBc,EAAQF,EAAOb,KAAee,GAASA,EAE1C,IADAY,EAAMC,EAAMb,IACHf,EAAIC,GACgB,OAAtBc,EAAQF,EAAOb,MACd2B,EAAMZ,IAAOY,EAAMZ,GACnBa,EAAMb,IAAOa,EAAMb,SAQ/B,OAASf,EAAIC,GACX,GAA+C,OAA1Cc,EAAQK,EAAQP,EAAOb,GAAIA,EAAGa,KAAoBE,GAASA,EAE9D,IADAY,EAAMC,EAAMb,IACHf,EAAIC,GACoC,OAA1Cc,EAAQK,EAAQP,EAAOb,GAAIA,EAAGa,MAC7Bc,EAAMZ,IAAOY,EAAMZ,GACnBa,EAAMb,IAAOa,EAAMb,IAOjC,MAAO,CAACY,EAAKC,ICnCX,EAAQvB,MAAMwB,UAEPC,EAAQ,EAAMA,MACdC,EAAM,EAAMA,ICHR,cACb,OAAO,WACL,OAAO5C,ICFI,cACb,OAAOA,GCDM,kBACb6C,GAASA,EAAOC,GAAQA,EAAMC,GAAQjC,EAAIkC,UAAUlD,QAAU,GAAKgD,EAAOD,EAAOA,EAAQ,EAAG,GAAK/B,EAAI,EAAI,GAAKiC,EAM9G,IAJA,IAAIlC,GAAK,EACLC,EAAoD,EAAhDwB,KAAKG,IAAI,EAAGH,KAAKW,MAAMH,EAAOD,GAASE,IAC3CG,EAAQ,IAAIhC,MAAMJ,KAEbD,EAAIC,GACXoC,EAAMrC,GAAKgC,EAAQhC,EAAIkC,EAGzB,OAAOG,GCXLC,EAAMb,KAAKC,KAAK,IAChBa,EAAKd,KAAKC,KAAK,IACfc,EAAKf,KAAKC,KAAK,GAEJ,kBACb,IAAIe,EAEAxC,EACAyC,EACAR,EAHAlC,GAAK,EAMT,GAD8B2C,GAASA,GAAzBX,GAASA,MAAvBC,GAAQA,IACcU,EAAQ,EAAG,MAAO,CAACX,GAEzC,IADIS,EAAUR,EAAOD,KAAO/B,EAAI+B,EAAOA,EAAQC,EAAMA,EAAOhC,GACT,KAA9CiC,EAAOU,EAAcZ,EAAOC,EAAMU,MAAkBE,SAASX,GAAO,MAAO,GAEhF,GAAIA,EAAO,EAIT,IAHAF,EAAQP,KAAKW,KAAKJ,EAAQE,GAC1BD,EAAOR,KAAKqB,MAAMb,EAAOC,GACzBQ,EAAQ,IAAIrC,MAAMJ,EAAIwB,KAAKW,KAAKH,EAAOD,EAAQ,MACtChC,EAAIC,GAAGyC,EAAM1C,IAAMgC,EAAQhC,GAAKkC,OAKzC,IAHAF,EAAQP,KAAKqB,MAAMd,EAAQE,GAC3BD,EAAOR,KAAKW,KAAKH,EAAOC,GACxBQ,EAAQ,IAAIrC,MAAMJ,EAAIwB,KAAKW,KAAKJ,EAAQC,EAAO,MACtCjC,EAAIC,GAAGyC,EAAM1C,IAAMgC,EAAQhC,GAAKkC,EAK3C,OAFIO,GAASC,EAAMD,UAEZC,GAGF,SAASE,EAAcZ,EAAOC,EAAMU,GACzC,IAAIT,GAAQD,EAAOD,GAASP,KAAKG,IAAI,EAAGe,GACpCI,EAAQtB,KAAKqB,MAAMrB,KAAKuB,IAAId,GAAQT,KAAKwB,MACzCC,EAAQhB,EAAOT,KAAK0B,IAAI,GAAIJ,GAChC,OAAOA,GAAS,GACTG,GAASZ,EAAM,GAAKY,GAASX,EAAK,EAAIW,GAASV,EAAK,EAAI,GAAKf,KAAK0B,IAAI,GAAIJ,IAC1EtB,KAAK0B,IAAI,IAAKJ,IAAUG,GAASZ,EAAM,GAAKY,GAASX,EAAK,EAAIW,GAASV,EAAK,EAAI,GAGlF,SAASY,EAASpB,EAAOC,EAAMU,GACpC,IAAIU,EAAQ5B,KAAK6B,IAAIrB,EAAOD,GAASP,KAAKG,IAAI,EAAGe,GAC7CY,EAAQ9B,KAAK0B,IAAI,GAAI1B,KAAKqB,MAAMrB,KAAKuB,IAAIK,GAAS5B,KAAKwB,OACvDC,EAAQG,EAAQE,EAIpB,OAHIL,GAASZ,EAAKiB,GAAS,GAClBL,GAASX,EAAIgB,GAAS,EACtBL,GAASV,IAAIe,GAAS,GACxBtB,EAAOD,GAASuB,EAAQA,ECjDlB,kBACb,OAAO9B,KAAKW,KAAKX,KAAKuB,IAAInC,EAAO5B,QAAUwC,KAAK+B,KAAO,GCQ1C,aACb,IAAIzC,EAAQ0C,EACRC,EAASC,EACTC,EAAYC,EAEhB,SAASC,EAAUC,GACjB,IAAI/D,EAEAb,EADAc,EAAI8D,EAAK9E,OAET4B,EAAS,IAAIR,MAAMJ,GAEvB,IAAKD,EAAI,EAAGA,EAAIC,IAAKD,EACnBa,EAAOb,GAAKe,EAAMgD,EAAK/D,GAAIA,EAAG+D,GAGhC,IAAIC,EAAKN,EAAO7C,GACZoD,EAAKD,EAAG,GACRE,EAAKF,EAAG,GACRG,EAAKP,EAAU/C,EAAQoD,EAAIC,GAG1B7D,MAAM+D,QAAQD,KACjBA,EAAKf,EAASa,EAAIC,EAAIC,GACtBA,EAAK9B,EAAMZ,KAAKW,KAAK6B,EAAKE,GAAMA,EAAID,EAAIC,IAK1C,IADA,IAAIlD,EAAIkD,EAAGlF,OACJkF,EAAG,IAAMF,GAAIE,EAAGE,UAAWpD,EAClC,KAAOkD,EAAGlD,EAAI,GAAKiD,GAAIC,EAAGG,QAASrD,EAEnC,IACIsD,EADAC,EAAO,IAAInE,MAAMY,EAAI,GAIzB,IAAKjB,EAAI,EAAGA,GAAKiB,IAAKjB,GACpBuE,EAAMC,EAAKxE,GAAK,IACZiE,GAAKjE,EAAI,EAAImE,EAAGnE,EAAI,GAAKiE,EAC7BM,EAAIL,GAAKlE,EAAIiB,EAAIkD,EAAGnE,GAAKkE,EAI3B,IAAKlE,EAAI,EAAGA,EAAIC,IAAKD,EAEfiE,IADJ9E,EAAI0B,EAAOb,KACIb,GAAK+E,GAClBM,EAAK1E,EAAOqE,EAAIhF,EAAG,EAAG8B,IAAIwD,KAAKV,EAAK/D,IAIxC,OAAOwE,EAeT,OAZAV,EAAU/C,MAAQ,SAAS2D,GACzB,OAAOvC,UAAUlD,QAAU8B,EAAqB,mBAAN2D,EAAmBA,EAAIC,EAASD,GAAIZ,GAAa/C,GAG7F+C,EAAUJ,OAAS,SAASgB,GAC1B,OAAOvC,UAAUlD,QAAUyE,EAAsB,mBAANgB,EAAmBA,EAAIC,EAAS,CAACD,EAAE,GAAIA,EAAE,KAAMZ,GAAaJ,GAGzGI,EAAUc,WAAa,SAASF,GAC9B,OAAOvC,UAAUlD,QAAU2E,EAAyB,mBAANc,EAAmBA,EAAIrE,MAAM+D,QAAQM,GAAKC,EAAS7C,EAAM+C,KAAKH,IAAMC,EAASD,GAAIZ,GAAaF,GAGvIE,GCvEM,kBAEb,GADe,MAAX1C,IAAiBA,EAAUE,GACzBrB,EAAIY,EAAO5B,OAAjB,CACA,IAAKkB,GAAKA,IAAM,GAAKF,EAAI,EAAG,OAAQmB,EAAQP,EAAO,GAAI,EAAGA,GAC1D,GAAIV,GAAK,EAAG,OAAQiB,EAAQP,EAAOZ,EAAI,GAAIA,EAAI,EAAGY,GAClD,IAAIZ,EACAD,GAAKC,EAAI,GAAKE,EACdG,EAAKmB,KAAKqB,MAAM9C,GAChBQ,GAAUY,EAAQP,EAAOP,GAAKA,EAAIO,GAEtC,OAAOL,IADOY,EAAQP,EAAOP,EAAK,GAAIA,EAAK,EAAGO,GACpBL,IAAWR,EAAIM,KCP5B,kBAEb,OADAO,EAASkB,EAAI8C,KAAKhE,EAAQS,GAAQwD,KAAK1F,GAChCqC,KAAKW,MAAMR,EAAMD,IAAQ,GAAKoD,EAASlE,EAAQ,KAAQkE,EAASlE,EAAQ,MAASY,KAAK0B,IAAItC,EAAO5B,QAAS,EAAI,MCLxG,kBACb,OAAOwC,KAAKW,MAAMR,EAAMD,IAAQ,IAAMqD,EAAUnE,GAAUY,KAAK0B,IAAItC,EAAO5B,QAAS,EAAI,MCH1E,gBACb,IAEI8B,EACAa,EAHA3B,EAAIY,EAAO5B,OACXe,GAAK,EAIT,GAAe,MAAXoB,GACF,OAASpB,EAAIC,GACX,GAA2B,OAAtBc,EAAQF,EAAOb,KAAee,GAASA,EAE1C,IADAa,EAAMb,IACGf,EAAIC,GACgB,OAAtBc,EAAQF,EAAOb,KAAee,EAAQa,IACzCA,EAAMb,QAQd,OAASf,EAAIC,GACX,GAA+C,OAA1Cc,EAAQK,EAAQP,EAAOb,GAAIA,EAAGa,KAAoBE,GAASA,EAE9D,IADAa,EAAMb,IACGf,EAAIC,GACoC,OAA1Cc,EAAQK,EAAQP,EAAOb,GAAIA,EAAGa,KAAoBE,EAAQa,IAC7DA,EAAMb,GAOhB,OAAOa,GC9BM,gBACb,IAGIb,EAHAd,EAAIY,EAAO5B,OACXgC,EAAIhB,EACJD,GAAK,EAELmB,EAAM,EAEV,GAAe,MAAXC,EACF,OAASpB,EAAIC,GACNoB,MAAMN,EAAQO,EAAOT,EAAOb,OAC1BiB,EADgCE,GAAOJ,OAMhD,OAASf,EAAIC,GACNoB,MAAMN,EAAQO,EAAOF,EAAQP,EAAOb,GAAIA,EAAGa,OACzCI,EADoDE,GAAOJ,EAKtE,GAAIE,EAAG,OAAOE,EAAMF,GCnBP,gBACb,IAEIF,EAFAd,EAAIY,EAAO5B,OACXe,GAAK,EAELiF,EAAU,GAEd,GAAe,MAAX7D,EACF,OAASpB,EAAIC,GACNoB,MAAMN,EAAQO,EAAOT,EAAOb,MAC/BiF,EAAQR,KAAK1D,QAMjB,OAASf,EAAIC,GACNoB,MAAMN,EAAQO,EAAOF,EAAQP,EAAOb,GAAIA,EAAGa,MAC9CoE,EAAQR,KAAK1D,GAKnB,OAAOgE,EAASE,EAAQH,KAAK1F,GAAY,KC1B5B,cAQb,IAPA,IACI6B,EAGAiE,EACAhF,EALAD,EAAIkF,EAAOlG,OAEXe,GAAK,EACLoF,EAAI,IAICpF,EAAIC,GAAGmF,GAAKD,EAAOnF,GAAGf,OAG/B,IAFAiG,EAAS,IAAI7E,MAAM+E,KAEVnF,GAAK,GAGZ,IADAgB,GADAf,EAAQiF,EAAOlF,IACLhB,SACDgC,GAAK,GACZiE,IAASE,GAAKlF,EAAMe,GAIxB,OAAOiE,GCnBM,gBACb,IAEInE,EACAY,EAHA1B,EAAIY,EAAO5B,OACXe,GAAK,EAIT,GAAe,MAAXoB,GACF,OAASpB,EAAIC,GACX,GAA2B,OAAtBc,EAAQF,EAAOb,KAAee,GAASA,EAE1C,IADAY,EAAMZ,IACGf,EAAIC,GACgB,OAAtBc,EAAQF,EAAOb,KAAe2B,EAAMZ,IACvCY,EAAMZ,QAQd,OAASf,EAAIC,GACX,GAA+C,OAA1Cc,EAAQK,EAAQP,EAAOb,GAAIA,EAAGa,KAAoBE,GAASA,EAE9D,IADAY,EAAMZ,IACGf,EAAIC,GACoC,OAA1Cc,EAAQK,EAAQP,EAAOb,GAAIA,EAAGa,KAAoBc,EAAMZ,IAC3DY,EAAMZ,GAOhB,OAAOY,GChCM,gBAEb,IADA,IAAI3B,EAAIqF,EAAQpG,OAAQqG,EAAW,IAAIjF,MAAML,GACtCA,KAAKsF,EAAStF,GAAKE,EAAMmF,EAAQrF,IACxC,OAAOsF,GCDM,gBACb,GAAMrF,EAAIY,EAAO5B,OAAjB,CACA,IAAIgB,EAGAsF,EAFAvF,EAAI,EACJoF,EAAI,EAEJI,EAAK3E,EAAOuE,GAIhB,IAFe,MAAXpG,IAAiBA,EAAUI,KAEtBY,EAAIC,IACPjB,EAAQuG,EAAK1E,EAAOb,GAAIwF,GAAM,GAAyB,IAApBxG,EAAQwG,EAAIA,MACjDA,EAAKD,EAAIH,EAAIpF,GAIjB,OAAwB,IAApBhB,EAAQwG,EAAIA,GAAkBJ,OAAlC,IClBa,kBAKb,IAJA,IACIK,EACAzF,EAFAiB,GAAW,MAANV,EAAaL,EAAMjB,OAASsB,IAAOD,EAAW,MAANA,EAAa,GAAKA,GAI5DW,GACLjB,EAAIyB,KAAKiE,SAAWzE,IAAM,EAC1BwE,EAAIvF,EAAMe,EAAIX,GACdJ,EAAMe,EAAIX,GAAMJ,EAAMF,EAAIM,GAC1BJ,EAAMF,EAAIM,GAAMmF,EAGlB,OAAOvF,GCZM,gBACb,IAEIa,EAFAd,EAAIY,EAAO5B,OACXe,GAAK,EAELmB,EAAM,EAEV,GAAe,MAAXC,EACF,OAASpB,EAAIC,IACPc,GAASF,EAAOb,MAAImB,GAAOJ,QAKjC,OAASf,EAAIC,IACPc,GAASK,EAAQP,EAAOb,GAAIA,EAAGa,MAASM,GAAOJ,GAIvD,OAAOI,GChBM,cACb,KAAMlB,EAAI0F,EAAO1G,QAAS,MAAO,GACjC,IAAK,IAAIe,GAAK,EAAGiB,EAAI,EAAI0E,EAAQ,GAASC,EAAY,IAAIvF,MAAMY,KAAMjB,EAAIiB,GACxE,IAAK,IAAYhB,EAARmF,GAAK,EAAMS,EAAMD,EAAU5F,GAAK,IAAIK,MAAMJ,KAAMmF,EAAInF,GAC3D4F,EAAIT,GAAKO,EAAOP,GAAGpF,GAGvB,OAAO4F,GAGT,SAAS,EAAO1G,GACd,OAAOA,EAAED,OCXI,iBACb,OAAO,EAAUkD,a,iCCHJ,gBACb,OAAO,WACL,OAAOhD,K,iCCFJ,SAASA,EAAEgB,GAChB,OAAOA,EAAE,GAGJ,SAAS2F,EAAE3F,GAChB,OAAOA,EAAE,GALX,qE,iCCAe,kBACb,MAAO,EAAE2F,GAAKA,GAAKrE,KAAKsE,IAAI5G,GAAKsC,KAAKuE,GAAK,GAAIF,EAAIrE,KAAKwE,IAAI9G,M,iCCD9D,uJAMA,SAAS+G,EAAWhH,GAClB,OAAOA,EAAEiH,OAGX,SAASC,EAAWlH,GAClB,OAAOA,EAAEmH,OAGX,SAASC,EAAKC,GACZ,IAAIJ,EAASD,EACTG,EAASD,EACTjH,EAAI,IACJ2G,EAAI,IACJU,EAAU,KAEd,SAASF,IACP,IAAIG,EAAQC,EAAO,IAAM7B,KAAK1C,WAAYwE,EAAIR,EAAOS,MAAMC,KAAMH,GAAOjB,EAAIY,EAAOO,MAAMC,KAAMH,GAG/F,GAFKF,IAASA,EAAUC,EAAS,eACjCF,EAAMC,GAAUrH,EAAEyH,MAAMC,MAAOH,EAAK,GAAKC,EAAGD,KAASZ,EAAEc,MAAMC,KAAMH,IAAQvH,EAAEyH,MAAMC,MAAOH,EAAK,GAAKjB,EAAGiB,KAASZ,EAAEc,MAAMC,KAAMH,IAC1HD,EAAQ,OAAOD,EAAU,KAAMC,EAAS,IAAM,KAuBpD,OApBAH,EAAKH,OAAS,SAASzB,GACrB,OAAOvC,UAAUlD,QAAUkH,EAASzB,EAAG4B,GAAQH,GAGjDG,EAAKD,OAAS,SAAS3B,GACrB,OAAOvC,UAAUlD,QAAUoH,EAAS3B,EAAG4B,GAAQD,GAGjDC,EAAKnH,EAAI,SAASuF,GAChB,OAAOvC,UAAUlD,QAAUE,EAAiB,mBAANuF,EAAmBA,EAAI,aAAUA,GAAI4B,GAAQnH,GAGrFmH,EAAKR,EAAI,SAASpB,GAChB,OAAOvC,UAAUlD,QAAU6G,EAAiB,mBAANpB,EAAmBA,EAAI,aAAUA,GAAI4B,GAAQR,GAGrFQ,EAAKE,QAAU,SAAS9B,GACtB,OAAOvC,UAAUlD,QAAWuH,EAAe,MAAL9B,EAAY,KAAOA,EAAI4B,GAAQE,GAGhEF,EAGT,SAASQ,EAAgBN,EAASvC,EAAI8C,EAAI7C,EAAI8C,GAC5CR,EAAQS,OAAOhD,EAAI8C,GACnBP,EAAQU,cAAcjD,GAAMA,EAAKC,GAAM,EAAG6C,EAAI9C,EAAI+C,EAAI9C,EAAI8C,GAG5D,SAASG,EAAcX,EAASvC,EAAI8C,EAAI7C,EAAI8C,GAC1CR,EAAQS,OAAOhD,EAAI8C,GACnBP,EAAQU,cAAcjD,EAAI8C,GAAMA,EAAKC,GAAM,EAAG9C,EAAI6C,EAAI7C,EAAI8C,GAG5D,SAASI,EAAYZ,EAASvC,EAAI8C,EAAI7C,EAAI8C,GACxC,IAAIK,EAAK,YAAYpD,EAAI8C,GACrBO,EAAK,YAAYrD,EAAI8C,GAAMA,EAAKC,GAAM,GACtCO,EAAK,YAAYrD,EAAI6C,GACrBS,EAAK,YAAYtD,EAAI8C,GACzBR,EAAQS,OAAOI,EAAG,GAAIA,EAAG,IACzBb,EAAQU,cAAcI,EAAG,GAAIA,EAAG,GAAIC,EAAG,GAAIA,EAAG,GAAIC,EAAG,GAAIA,EAAG,IAGvD,SAASC,IACd,OAAOnB,EAAKQ,GAGP,SAASY,IACd,OAAOpB,EAAKa,GAGP,SAASQ,IACd,IAAIC,EAAItB,EAAKc,GAGb,OAFAQ,EAAEC,MAAQD,EAAEzI,SAAUyI,EAAEzI,EACxByI,EAAEE,OAASF,EAAE9B,SAAU8B,EAAE9B,EAClB8B,I,iCClFT,kCAAO,IAAI9F,EAAQzB,MAAMwB,UAAUC,O,iCCAnC,IAAIiG,EAAKtG,KAAKuE,GACVgC,EAAM,EAAID,EAEVE,EAAaD,EADH,KAGd,SAASE,IACPrB,KAAKsB,IAAMtB,KAAKuB,IAChBvB,KAAKwB,IAAMxB,KAAKyB,IAAM,KACtBzB,KAAKnC,EAAI,GAGX,SAAS6D,IACP,OAAO,IAAIL,EAGbA,EAAKrG,UAAY0G,EAAK1G,UAAY,CAChC2G,YAAaN,EACbjB,OAAQ,SAAS9H,EAAG2G,GAClBe,KAAKnC,GAAK,KAAOmC,KAAKsB,IAAMtB,KAAKwB,KAAOlJ,GAAK,KAAO0H,KAAKuB,IAAMvB,KAAKyB,KAAOxC,IAE7E2C,UAAW,WACQ,OAAb5B,KAAKwB,MACPxB,KAAKwB,IAAMxB,KAAKsB,IAAKtB,KAAKyB,IAAMzB,KAAKuB,IACrCvB,KAAKnC,GAAK,MAGdgE,OAAQ,SAASvJ,EAAG2G,GAClBe,KAAKnC,GAAK,KAAOmC,KAAKwB,KAAOlJ,GAAK,KAAO0H,KAAKyB,KAAOxC,IAEvD6C,iBAAkB,SAASzE,EAAI8C,EAAI7H,EAAG2G,GACpCe,KAAKnC,GAAK,MAAQR,EAAM,MAAQ8C,EAAM,KAAOH,KAAKwB,KAAOlJ,GAAK,KAAO0H,KAAKyB,KAAOxC,IAEnFoB,cAAe,SAAShD,EAAI8C,EAAI4B,EAAIC,EAAI1J,EAAG2G,GACzCe,KAAKnC,GAAK,MAAQR,EAAM,MAAQ8C,EAAM,MAAQ4B,EAAM,MAAQC,EAAM,KAAOhC,KAAKwB,KAAOlJ,GAAK,KAAO0H,KAAKyB,KAAOxC,IAE/GgD,MAAO,SAAS5E,EAAI8C,EAAI4B,EAAIC,EAAIE,GAC9B7E,GAAMA,EAAI8C,GAAMA,EAAI4B,GAAMA,EAAIC,GAAMA,EAAIE,GAAKA,EAC7C,IAAI9E,EAAK4C,KAAKwB,IACVtB,EAAKF,KAAKyB,IACVU,EAAMJ,EAAK1E,EACX+E,EAAMJ,EAAK7B,EACXkC,EAAMjF,EAAKC,EACXiF,EAAMpC,EAAKC,EACXoC,EAAQF,EAAMA,EAAMC,EAAMA,EAG9B,GAAIJ,EAAI,EAAG,MAAM,IAAIM,MAAM,oBAAsBN,GAGjD,GAAiB,OAAblC,KAAKwB,IACPxB,KAAKnC,GAAK,KAAOmC,KAAKwB,IAAMnE,GAAM,KAAO2C,KAAKyB,IAAMtB,QAIjD,GAAMoC,EApDD,KAyDL,GAAM3H,KAAK6B,IAAI6F,EAAMH,EAAMC,EAAMC,GAzD5B,MAyDgDH,EAKrD,CACH,IAAIO,EAAMV,EAAK3E,EACXsF,EAAMV,EAAK9B,EACXyC,EAAQR,EAAMA,EAAMC,EAAMA,EAC1BQ,EAAQH,EAAMA,EAAMC,EAAMA,EAC1BG,EAAMjI,KAAKC,KAAK8H,GAChBG,EAAMlI,KAAKC,KAAK0H,GAChBxB,EAAImB,EAAItH,KAAKmI,KAAK7B,EAAKtG,KAAKoI,MAAML,EAAQJ,EAAQK,IAAU,EAAIC,EAAMC,KAAS,GAC/EG,EAAMlC,EAAI+B,EACVI,EAAMnC,EAAI8B,EAGVjI,KAAK6B,IAAIwG,EAAM,GA1EX,OA2ENjD,KAAKnC,GAAK,KAAOR,EAAK4F,EAAMZ,GAAO,KAAOlC,EAAK8C,EAAMX,IAGvDtC,KAAKnC,GAAK,IAAMqE,EAAI,IAAMA,EAAI,WAAaI,EAAMG,EAAMJ,EAAMK,GAAQ,KAAO1C,KAAKwB,IAAMnE,EAAK6F,EAAMf,GAAO,KAAOnC,KAAKyB,IAAMtB,EAAK+C,EAAMd,QApBtIpC,KAAKnC,GAAK,KAAOmC,KAAKwB,IAAMnE,GAAM,KAAO2C,KAAKyB,IAAMtB,UAuBxDgD,IAAK,SAAS7K,EAAG2G,EAAGiD,EAAGkB,EAAIC,EAAIC,GAC7BhL,GAAKA,EAAG2G,GAAKA,EAAWqE,IAAQA,EAChC,IAAIC,GADYrB,GAAKA,GACRtH,KAAKsE,IAAIkE,GAClBI,EAAKtB,EAAItH,KAAKwE,IAAIgE,GAClBhG,EAAK9E,EAAIiL,EACTrD,EAAKjB,EAAIuE,EACTC,EAAK,EAAIH,EACTI,EAAKJ,EAAMF,EAAKC,EAAKA,EAAKD,EAG9B,GAAIlB,EAAI,EAAG,MAAM,IAAIM,MAAM,oBAAsBN,GAGhC,OAAblC,KAAKwB,IACPxB,KAAKnC,GAAK,IAAMT,EAAK,IAAM8C,GAIpBtF,KAAK6B,IAAIuD,KAAKwB,IAAMpE,GAnGnB,MAmGoCxC,KAAK6B,IAAIuD,KAAKyB,IAAMvB,GAnGxD,QAoGRF,KAAKnC,GAAK,IAAMT,EAAK,IAAM8C,GAIxBgC,IAGDwB,EAAK,IAAGA,EAAKA,EAAKvC,EAAMA,GAGxBuC,EAAKtC,EACPpB,KAAKnC,GAAK,IAAMqE,EAAI,IAAMA,EAAI,QAAUuB,EAAK,KAAOnL,EAAIiL,GAAM,KAAOtE,EAAIuE,GAAM,IAAMtB,EAAI,IAAMA,EAAI,QAAUuB,EAAK,KAAOzD,KAAKwB,IAAMpE,GAAM,KAAO4C,KAAKyB,IAAMvB,GAIrJwD,EAnHC,OAoHR1D,KAAKnC,GAAK,IAAMqE,EAAI,IAAMA,EAAI,SAAWwB,GAAMxC,GAAO,IAAMuC,EAAK,KAAOzD,KAAKwB,IAAMlJ,EAAI4J,EAAItH,KAAKsE,IAAImE,IAAO,KAAOrD,KAAKyB,IAAMxC,EAAIiD,EAAItH,KAAKwE,IAAIiE,OAGlJM,KAAM,SAASrL,EAAG2G,EAAG2E,EAAGC,GACtB7D,KAAKnC,GAAK,KAAOmC,KAAKsB,IAAMtB,KAAKwB,KAAOlJ,GAAK,KAAO0H,KAAKuB,IAAMvB,KAAKyB,KAAOxC,GAAK,MAAQ2E,EAAK,MAAQC,EAAK,KAAQD,EAAK,KAEzHE,SAAU,WACR,OAAO9D,KAAKnC,IAID,O,mUC/Hf,SAASkG,EAAY1L,GACnB,OAAOA,EAAEmH,OAAOwE,MAGX,SAASxL,EAAKyL,GACnB,OAAOA,EAAKD,MAGP,SAASpL,EAAMqL,EAAM7K,GAC1B,OAAOA,EAAI,EAAI6K,EAAKC,OAGf,SAASC,EAAQF,EAAM7K,GAC5B,OAAO6K,EAAKG,YAAYhM,OAAS6L,EAAKD,MAAQ5K,EAAI,EAG7C,SAASiL,EAAOJ,GACrB,OAAOA,EAAKK,YAAYlM,OAAS6L,EAAKD,MAChCC,EAAKG,YAAYhM,OAAS,YAAI6L,EAAKG,YAAaL,GAAe,EAC/D,ECrBO,SAASjG,EAASxF,GAC/B,OAAO,WACL,OAAOA,GCEX,SAASiM,EAAuBxM,EAAGC,GACjC,OAAOwM,EAAiBzM,EAAEuH,OAAQtH,EAAEsH,SAAWvH,EAAE0M,MAAQzM,EAAEyM,MAG7D,SAASC,EAAuB3M,EAAGC,GACjC,OAAOwM,EAAiBzM,EAAEyH,OAAQxH,EAAEwH,SAAWzH,EAAE0M,MAAQzM,EAAEyM,MAG7D,SAASD,EAAiBzM,EAAGC,GAC3B,OAAOD,EAAEmI,GAAKlI,EAAEkI,GAGlB,SAAShG,EAAM7B,GACb,OAAOA,EAAE6B,MAGX,SAASyK,EAAUtM,GACjB,OAAOA,EAAEoM,MAGX,SAASG,EAAaC,GACpB,OAAOA,EAAMC,MAGf,SAASC,EAAaF,GACpB,OAAOA,EAAMG,MAGf,SAASC,EAAKC,EAAUC,GACtB,MAAMlB,EAAOiB,EAASE,IAAID,GAC1B,IAAKlB,EAAM,MAAM,IAAIzB,MAAM,YAAc2C,GACzC,OAAOlB,EAGT,SAASoB,GAAoB,MAACP,IAC5B,IAAK,MAAMb,KAAQa,EAAO,CACxB,IAAI5E,EAAK+D,EAAK/D,GACVC,EAAKD,EACT,IAAK,MAAMT,KAAQwE,EAAKG,YACtB3E,EAAKS,GAAKA,EAAKT,EAAK6F,MAAQ,EAC5BpF,GAAMT,EAAK6F,MAEb,IAAK,MAAM7F,KAAQwE,EAAKK,YACtB7E,EAAKU,GAAKA,EAAKV,EAAK6F,MAAQ,EAC5BnF,GAAMV,EAAK6F,OAKF,SAASC,IACtB,IAEYC,EAGRvH,EACAwH,EANArI,EAAK,EAAG8C,EAAK,EAAG7C,EAAK,EAAG8C,EAAK,EAC7BoD,EAAK,GACLC,EAAK,EACL2B,EAAKR,EACLe,EAAQvB,EAGRW,EAAQF,EACRI,EAAQD,EACRY,EAAa,EAEjB,SAASC,IACP,MAAMf,EAAQ,CAACC,MAAOA,EAAM/E,MAAM,KAAMzE,WAAY0J,MAAOA,EAAMjF,MAAM,KAAMzE,YAO7E,OANAuK,EAAiBhB,GACjBiB,EAAkBjB,GAClBkB,EAAkBlB,GAClBmB,EAAmBnB,GACnBoB,EAAoBpB,GACpBQ,EAAoBR,GACbA,EAoDT,SAASgB,GAAiB,MAACf,EAAK,MAAEE,IAChC,IAAK,MAAO7L,EAAG8K,KAASa,EAAMoB,UAC5BjC,EAAKQ,MAAQtL,EACb8K,EAAKG,YAAc,GACnBH,EAAKK,YAAc,GAErB,MAAMY,EAAW,IAAIiB,IAAIrB,EAAM5J,IAAI,CAAC7C,EAAGc,IAAM,CAACgM,EAAG9M,EAAGc,EAAG2L,GAAQzM,KAC/D,IAAK,MAAOc,EAAGsG,KAASuF,EAAMkB,UAAW,CACvCzG,EAAKgF,MAAQtL,EACb,IAAI,OAACmG,EAAM,OAAEE,GAAUC,EACD,iBAAXH,IAAqBA,EAASG,EAAKH,OAAS2F,EAAKC,EAAU5F,IAChD,iBAAXE,IAAqBA,EAASC,EAAKD,OAASyF,EAAKC,EAAU1F,IACtEF,EAAO8E,YAAYxG,KAAK6B,GACxBD,EAAO8E,YAAY1G,KAAK6B,GAE1B,GAAgB,MAAZgG,EACF,IAAK,MAAM,YAACrB,EAAW,YAAEE,KAAgBQ,EACvCV,EAAYnG,KAAKwH,GACjBnB,EAAYrG,KAAKwH,GAKvB,SAASK,GAAkB,MAAChB,IAC1B,IAAK,MAAMb,KAAQa,EACjBb,EAAK/J,WAA4BkM,IAApBnC,EAAKoC,WACZzL,KAAKG,IAAI,YAAIkJ,EAAKG,YAAalK,GAAQ,YAAI+J,EAAKK,YAAapK,IAC7D+J,EAAKoC,WAIf,SAASN,GAAkB,MAACjB,IAC1B,MAAM1L,EAAI0L,EAAM1M,OAChB,IAAIkO,EAAU,IAAIC,IAAIzB,GAClB0B,EAAO,IAAID,IACXjO,EAAI,EACR,KAAOgO,EAAQG,MAAM,CACnB,IAAK,MAAMxC,KAAQqC,EAAS,CAC1BrC,EAAKD,MAAQ1L,EACb,IAAK,MAAM,OAACkH,KAAWyE,EAAKG,YAC1BoC,EAAKE,IAAIlH,GAGb,KAAMlH,EAAIc,EAAG,MAAM,IAAIoJ,MAAM,iBAC7B8D,EAAUE,EACVA,EAAO,IAAID,KAIf,SAASP,GAAmB,MAAClB,IAC3B,MAAM1L,EAAI0L,EAAM1M,OAChB,IAAIkO,EAAU,IAAIC,IAAIzB,GAClB0B,EAAO,IAAID,IACXjO,EAAI,EACR,KAAOgO,EAAQG,MAAM,CACnB,IAAK,MAAMxC,KAAQqC,EAAS,CAC1BrC,EAAKC,OAAS5L,EACd,IAAK,MAAM,OAACgH,KAAW2E,EAAKK,YAC1BkC,EAAKE,IAAIpH,GAGb,KAAMhH,EAAIc,EAAG,MAAM,IAAIoJ,MAAM,iBAC7B8D,EAAUE,EACVA,EAAO,IAAID,KA4Cf,SAASN,EAAoBpB,GAC3B,MAAM8B,EAzCR,UAA2B,MAAC7B,IAC1B,MAAMxM,EAAI,YAAIwM,EAAOzM,GAAKA,EAAE2L,OAAS,EAC/B4C,GAAMvJ,EAAKD,EAAKmG,IAAOjL,EAAI,GAC3BqO,EAAU,IAAInN,MAAMlB,GAC1B,IAAK,MAAM2L,KAAQa,EAAO,CACxB,MAAM3L,EAAIyB,KAAKG,IAAI,EAAGH,KAAKE,IAAIxC,EAAI,EAAGsC,KAAKqB,MAAMyJ,EAAM1H,KAAK,KAAMiG,EAAM3L,MACxE2L,EAAK4C,MAAQ1N,EACb8K,EAAK7G,GAAKA,EAAKjE,EAAIyN,EACnB3C,EAAK5G,GAAK4G,EAAK7G,GAAKmG,EAChBoD,EAAQxN,GAAIwN,EAAQxN,GAAGyE,KAAKqG,GAC3B0C,EAAQxN,GAAK,CAAC8K,GAErB,GAAIhG,EAAM,IAAK,MAAM6I,KAAUH,EAC7BG,EAAO7I,KAAKA,GAEd,OAAO0I,EA0BSI,CAAkBlC,GAClCW,EAAK5K,KAAKE,IAAI0I,GAAKrD,EAAKD,IAAO,YAAIyG,EAASK,GAAKA,EAAE5O,QAAU,IAxB/D,SAAgCuO,GAC9B,MAAMM,EAAK,YAAIN,EAASK,IAAM7G,EAAKD,GAAM8G,EAAE5O,OAAS,GAAKoN,GAAM,YAAIwB,EAAG9M,IACtE,IAAK,MAAM4K,KAAS6B,EAAS,CAC3B,IAAI1H,EAAIiB,EACR,IAAK,MAAM+D,KAAQa,EAAO,CACxBb,EAAK/D,GAAKjB,EACVgF,EAAK9D,GAAKlB,EAAIgF,EAAK/J,MAAQ+M,EAC3BhI,EAAIgF,EAAK9D,GAAKqF,EACd,IAAK,MAAM/F,KAAQwE,EAAKG,YACtB3E,EAAK6F,MAAQ7F,EAAKvF,MAAQ+M,EAG9BhI,GAAKkB,EAAKlB,EAAIuG,IAAOV,EAAM1M,OAAS,GACpC,IAAK,IAAIe,EAAI,EAAGA,EAAI2L,EAAM1M,SAAUe,EAAG,CACrC,MAAM8K,EAAOa,EAAM3L,GACnB8K,EAAK/D,IAAMjB,GAAK9F,EAAI,GACpB8K,EAAK9D,IAAMlB,GAAK9F,EAAI,GAEtB+N,EAAapC,IAOfqC,CAAuBR,GACvB,IAAK,IAAIxN,EAAI,EAAGA,EAAIwM,IAAcxM,EAAG,CACnC,MAAMiO,EAAQxM,KAAK0B,IAAI,IAAMnD,GACvBkO,EAAOzM,KAAKG,IAAI,EAAIqM,GAAQjO,EAAI,GAAKwM,GAC3C2B,EAAiBX,EAASS,EAAOC,GACjCE,EAAiBZ,EAASS,EAAOC,IAKrC,SAASE,EAAiBZ,EAASS,EAAOC,GACxC,IAAK,IAAIlO,EAAI,EAAGC,EAAIuN,EAAQvO,OAAQe,EAAIC,IAAKD,EAAG,CAC9C,MAAM2N,EAASH,EAAQxN,GACvB,IAAK,MAAMqG,KAAUsH,EAAQ,CAC3B,IAAI7H,EAAI,EACJ2E,EAAI,EACR,IAAK,MAAM,OAACtE,EAAM,MAAEpF,KAAUsF,EAAO8E,YAAa,CAChD,IAAI5J,EAAIR,GAASsF,EAAOqH,MAAQvH,EAAOuH,OACvC5H,GAAKuI,EAAUlI,EAAQE,GAAU9E,EACjCkJ,GAAKlJ,EAEP,KAAMkJ,EAAI,GAAI,SACd,IAAIJ,GAAMvE,EAAI2E,EAAIpE,EAAOU,IAAMkH,EAC/B5H,EAAOU,IAAMsD,EACbhE,EAAOW,IAAMqD,EACbiE,EAAiBjI,QAEN4G,IAATnI,GAAoB6I,EAAO7I,KAAKuG,GACpCkD,EAAkBZ,EAAQO,IAK9B,SAASC,EAAiBX,EAASS,EAAOC,GACxC,IAAK,IAAwBlO,EAAhBwN,EAAQvO,OAAgB,EAAGe,GAAK,IAAKA,EAAG,CACnD,MAAM2N,EAASH,EAAQxN,GACvB,IAAK,MAAMmG,KAAUwH,EAAQ,CAC3B,IAAI7H,EAAI,EACJ2E,EAAI,EACR,IAAK,MAAM,OAACpE,EAAM,MAAEtF,KAAUoF,EAAO8E,YAAa,CAChD,IAAI1J,EAAIR,GAASsF,EAAOqH,MAAQvH,EAAOuH,OACvC5H,GAAK0I,EAAUrI,EAAQE,GAAU9E,EACjCkJ,GAAKlJ,EAEP,KAAMkJ,EAAI,GAAI,SACd,IAAIJ,GAAMvE,EAAI2E,EAAItE,EAAOY,IAAMkH,EAC/B9H,EAAOY,IAAMsD,EACblE,EAAOa,IAAMqD,EACbiE,EAAiBnI,QAEN8G,IAATnI,GAAoB6I,EAAO7I,KAAKuG,GACpCkD,EAAkBZ,EAAQO,IAI9B,SAASK,EAAkB5C,EAAOsC,GAChC,MAAMjO,EAAI2L,EAAM1M,QAAU,EACpBwP,EAAU9C,EAAM3L,GACtB0O,EAA6B/C,EAAO8C,EAAQ1H,GAAKsF,EAAIrM,EAAI,EAAGiO,GAC5DU,EAA6BhD,EAAO8C,EAAQzH,GAAKqF,EAAIrM,EAAI,EAAGiO,GAC5DS,EAA6B/C,EAAO3E,EAAI2E,EAAM1M,OAAS,EAAGgP,GAC1DU,EAA6BhD,EAAO5E,EAAI,EAAGkH,GAI7C,SAASU,EAA6BhD,EAAO7F,EAAG9F,EAAGiO,GACjD,KAAOjO,EAAI2L,EAAM1M,SAAUe,EAAG,CAC5B,MAAM8K,EAAOa,EAAM3L,GACbqK,GAAMvE,EAAIgF,EAAK/D,IAAMkH,EACvB5D,EAAK,OAAMS,EAAK/D,IAAMsD,EAAIS,EAAK9D,IAAMqD,GACzCvE,EAAIgF,EAAK9D,GAAKqF,GAKlB,SAASqC,EAA6B/C,EAAO7F,EAAG9F,EAAGiO,GACjD,KAAOjO,GAAK,IAAKA,EAAG,CAClB,MAAM8K,EAAOa,EAAM3L,GACbqK,GAAMS,EAAK9D,GAAKlB,GAAKmI,EACvB5D,EAAK,OAAMS,EAAK/D,IAAMsD,EAAIS,EAAK9D,IAAMqD,GACzCvE,EAAIgF,EAAK/D,GAAKsF,GAIlB,SAASiC,GAAiB,YAACrD,EAAW,YAAEE,IACtC,QAAiB8B,IAAbX,EAAwB,CAC1B,IAAK,MAAOnG,QAAQ,YAAC8E,MAAiBE,EACpCF,EAAYnG,KAAKyG,GAEnB,IAAK,MAAOlF,QAAQ,YAAC8E,MAAiBF,EACpCE,EAAYrG,KAAKsG,IAKvB,SAAS2C,EAAapC,GACpB,QAAiBsB,IAAbX,EACF,IAAK,MAAM,YAACrB,EAAW,YAAEE,KAAgBQ,EACvCV,EAAYnG,KAAKyG,GACjBJ,EAAYrG,KAAKsG,GAMvB,SAASiD,EAAUlI,EAAQE,GACzB,IAAIP,EAAIK,EAAOY,IAAMZ,EAAO8E,YAAYhM,OAAS,GAAKoN,EAAK,EAC3D,IAAK,MAAOhG,OAAQyE,EAAI,MAAEqB,KAAUhG,EAAO8E,YAAa,CACtD,GAAIH,IAASzE,EAAQ,MACrBP,GAAKqG,EAAQE,EAEf,IAAK,MAAOlG,OAAQ2E,EAAI,MAAEqB,KAAU9F,EAAO8E,YAAa,CACtD,GAAIL,IAAS3E,EAAQ,MACrBL,GAAKqG,EAEP,OAAOrG,EAIT,SAAS0I,EAAUrI,EAAQE,GACzB,IAAIP,EAAIO,EAAOU,IAAMV,EAAO8E,YAAYlM,OAAS,GAAKoN,EAAK,EAC3D,IAAK,MAAOlG,OAAQ2E,EAAI,MAAEqB,KAAU9F,EAAO8E,YAAa,CACtD,GAAIL,IAAS3E,EAAQ,MACrBL,GAAKqG,EAAQE,EAEf,IAAK,MAAOhG,OAAQyE,EAAI,MAAEqB,KAAUhG,EAAO8E,YAAa,CACtD,GAAIH,IAASzE,EAAQ,MACrBP,GAAKqG,EAEP,OAAOrG,EAGT,OAnSA2G,EAAOmC,OAAS,SAASlD,GAEvB,OADAQ,EAAoBR,GACbA,GAGTe,EAAOoC,OAAS,SAASnK,GACvB,OAAOvC,UAAUlD,QAAU+M,EAAkB,mBAANtH,EAAmBA,EAAIC,EAASD,GAAI+H,GAAUT,GAGvFS,EAAOqC,UAAY,SAASpK,GAC1B,OAAOvC,UAAUlD,QAAUsN,EAAqB,mBAAN7H,EAAmBA,EAAIC,EAASD,GAAI+H,GAAUF,GAG1FE,EAAOsC,SAAW,SAASrK,GACzB,OAAOvC,UAAUlD,QAAU6F,EAAOJ,EAAG+H,GAAU3H,GAGjD2H,EAAOuC,UAAY,SAAStK,GAC1B,OAAOvC,UAAUlD,QAAUmL,GAAM1F,EAAG+H,GAAUrC,GAGhDqC,EAAOwC,YAAc,SAASvK,GAC5B,OAAOvC,UAAUlD,QAAUoL,EAAKgC,GAAM3H,EAAG+H,GAAUpC,GAGrDoC,EAAOd,MAAQ,SAASjH,GACtB,OAAOvC,UAAUlD,QAAU0M,EAAqB,mBAANjH,EAAmBA,EAAIC,EAASD,GAAI+H,GAAUd,GAG1Fc,EAAOZ,MAAQ,SAASnH,GACtB,OAAOvC,UAAUlD,QAAU4M,EAAqB,mBAANnH,EAAmBA,EAAIC,EAASD,GAAI+H,GAAUZ,GAG1FY,EAAOH,SAAW,SAAS5H,GACzB,OAAOvC,UAAUlD,QAAUqN,EAAW5H,EAAG+H,GAAUH,GAGrDG,EAAOa,KAAO,SAAS5I,GACrB,OAAOvC,UAAUlD,QAAUgF,EAAK8C,EAAK,EAAG7C,GAAMQ,EAAE,GAAIsC,GAAMtC,EAAE,GAAI+H,GAAU,CAACvI,EAAKD,EAAI+C,EAAKD,IAG3F0F,EAAO9I,OAAS,SAASe,GACvB,OAAOvC,UAAUlD,QAAUgF,GAAMS,EAAE,GAAG,GAAIR,GAAMQ,EAAE,GAAG,GAAIqC,GAAMrC,EAAE,GAAG,GAAIsC,GAAMtC,EAAE,GAAG,GAAI+H,GAAU,CAAC,CAACxI,EAAI8C,GAAK,CAAC7C,EAAI8C,KAGnHyF,EAAOD,WAAa,SAAS9H,GAC3B,OAAOvC,UAAUlD,QAAUuN,GAAc9H,EAAG+H,GAAUD,GAqPjDC,E,aC7WT,SAASyC,EAAiBhQ,GACxB,MAAO,CAACA,EAAEiH,OAAOjC,GAAIhF,EAAE6H,IAGzB,SAASoI,EAAiBjQ,GACxB,MAAO,CAACA,EAAEmH,OAAOpC,GAAI/E,EAAE8H,IAGV,iBACb,OAAO,cACFb,OAAO+I,GACP7I,OAAO8I","file":"24.js","sourcesContent":["export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n","import variance from \"./variance\";\n\nexport default function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return x;\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import {slice} from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport {tickStep} from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import {map} from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\n\nexport default function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n","import deviation from \"../deviation\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n","import ascending from \"./ascending\";\nimport number from \"./number\";\nimport quantile from \"./quantile\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","export default function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n","import ascending from \"./ascending\";\n\nexport default function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n","export default function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n","import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","import {path} from \"d3-path\";\nimport {slice} from \"../array.js\";\nimport constant from \"../constant.js\";\nimport {x as pointX, y as pointY} from \"../point.js\";\nimport pointRadial from \"../pointRadial.js\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","export var slice = Array.prototype.slice;\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","import {min} from \"d3-array\";\n\nfunction targetDepth(d) {\n  return d.target.depth;\n}\n\nexport function left(node) {\n  return node.depth;\n}\n\nexport function right(node, n) {\n  return n - 1 - node.height;\n}\n\nexport function justify(node, n) {\n  return node.sourceLinks.length ? node.depth : n - 1;\n}\n\nexport function center(node) {\n  return node.targetLinks.length ? node.depth\n      : node.sourceLinks.length ? min(node.sourceLinks, targetDepth) - 1\n      : 0;\n}\n","export default function constant(x) {\n  return function() {\n    return x;\n  };\n}\n","import {max, min, sum} from \"d3-array\";\nimport {justify} from \"./align.js\";\nimport constant from \"./constant.js\";\n\nfunction ascendingSourceBreadth(a, b) {\n  return ascendingBreadth(a.source, b.source) || a.index - b.index;\n}\n\nfunction ascendingTargetBreadth(a, b) {\n  return ascendingBreadth(a.target, b.target) || a.index - b.index;\n}\n\nfunction ascendingBreadth(a, b) {\n  return a.y0 - b.y0;\n}\n\nfunction value(d) {\n  return d.value;\n}\n\nfunction defaultId(d) {\n  return d.index;\n}\n\nfunction defaultNodes(graph) {\n  return graph.nodes;\n}\n\nfunction defaultLinks(graph) {\n  return graph.links;\n}\n\nfunction find(nodeById, id) {\n  const node = nodeById.get(id);\n  if (!node) throw new Error(\"missing: \" + id);\n  return node;\n}\n\nfunction computeLinkBreadths({nodes}) {\n  for (const node of nodes) {\n    let y0 = node.y0;\n    let y1 = y0;\n    for (const link of node.sourceLinks) {\n      link.y0 = y0 + link.width / 2;\n      y0 += link.width;\n    }\n    for (const link of node.targetLinks) {\n      link.y1 = y1 + link.width / 2;\n      y1 += link.width;\n    }\n  }\n}\n\nexport default function Sankey() {\n  let x0 = 0, y0 = 0, x1 = 1, y1 = 1; // extent\n  let dx = 24; // nodeWidth\n  let dy = 8, py; // nodePadding\n  let id = defaultId;\n  let align = justify;\n  let sort;\n  let linkSort;\n  let nodes = defaultNodes;\n  let links = defaultLinks;\n  let iterations = 6;\n\n  function sankey() {\n    const graph = {nodes: nodes.apply(null, arguments), links: links.apply(null, arguments)};\n    computeNodeLinks(graph);\n    computeNodeValues(graph);\n    computeNodeDepths(graph);\n    computeNodeHeights(graph);\n    computeNodeBreadths(graph);\n    computeLinkBreadths(graph);\n    return graph;\n  }\n\n  sankey.update = function(graph) {\n    computeLinkBreadths(graph);\n    return graph;\n  };\n\n  sankey.nodeId = function(_) {\n    return arguments.length ? (id = typeof _ === \"function\" ? _ : constant(_), sankey) : id;\n  };\n\n  sankey.nodeAlign = function(_) {\n    return arguments.length ? (align = typeof _ === \"function\" ? _ : constant(_), sankey) : align;\n  };\n\n  sankey.nodeSort = function(_) {\n    return arguments.length ? (sort = _, sankey) : sort;\n  };\n\n  sankey.nodeWidth = function(_) {\n    return arguments.length ? (dx = +_, sankey) : dx;\n  };\n\n  sankey.nodePadding = function(_) {\n    return arguments.length ? (dy = py = +_, sankey) : dy;\n  };\n\n  sankey.nodes = function(_) {\n    return arguments.length ? (nodes = typeof _ === \"function\" ? _ : constant(_), sankey) : nodes;\n  };\n\n  sankey.links = function(_) {\n    return arguments.length ? (links = typeof _ === \"function\" ? _ : constant(_), sankey) : links;\n  };\n\n  sankey.linkSort = function(_) {\n    return arguments.length ? (linkSort = _, sankey) : linkSort;\n  };\n\n  sankey.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], sankey) : [x1 - x0, y1 - y0];\n  };\n\n  sankey.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], sankey) : [[x0, y0], [x1, y1]];\n  };\n\n  sankey.iterations = function(_) {\n    return arguments.length ? (iterations = +_, sankey) : iterations;\n  };\n\n  function computeNodeLinks({nodes, links}) {\n    for (const [i, node] of nodes.entries()) {\n      node.index = i;\n      node.sourceLinks = [];\n      node.targetLinks = [];\n    }\n    const nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d]));\n    for (const [i, link] of links.entries()) {\n      link.index = i;\n      let {source, target} = link;\n      if (typeof source !== \"object\") source = link.source = find(nodeById, source);\n      if (typeof target !== \"object\") target = link.target = find(nodeById, target);\n      source.sourceLinks.push(link);\n      target.targetLinks.push(link);\n    }\n    if (linkSort != null) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(linkSort);\n        targetLinks.sort(linkSort);\n      }\n    }\n  }\n\n  function computeNodeValues({nodes}) {\n    for (const node of nodes) {\n      node.value = node.fixedValue === undefined\n          ? Math.max(sum(node.sourceLinks, value), sum(node.targetLinks, value))\n          : node.fixedValue;\n    }\n  }\n\n  function computeNodeDepths({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.depth = x;\n        for (const {target} of node.sourceLinks) {\n          next.add(target);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeHeights({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.height = x;\n        for (const {source} of node.targetLinks) {\n          next.add(source);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeLayers({nodes}) {\n    const x = max(nodes, d => d.depth) + 1;\n    const kx = (x1 - x0 - dx) / (x - 1);\n    const columns = new Array(x);\n    for (const node of nodes) {\n      const i = Math.max(0, Math.min(x - 1, Math.floor(align.call(null, node, x))));\n      node.layer = i;\n      node.x0 = x0 + i * kx;\n      node.x1 = node.x0 + dx;\n      if (columns[i]) columns[i].push(node);\n      else columns[i] = [node];\n    }\n    if (sort) for (const column of columns) {\n      column.sort(sort);\n    }\n    return columns;\n  }\n\n  function initializeNodeBreadths(columns) {\n    const ky = min(columns, c => (y1 - y0 - (c.length - 1) * py) / sum(c, value));\n    for (const nodes of columns) {\n      let y = y0;\n      for (const node of nodes) {\n        node.y0 = y;\n        node.y1 = y + node.value * ky;\n        y = node.y1 + py;\n        for (const link of node.sourceLinks) {\n          link.width = link.value * ky;\n        }\n      }\n      y = (y1 - y + py) / (nodes.length + 1);\n      for (let i = 0; i < nodes.length; ++i) {\n        const node = nodes[i];\n        node.y0 += y * (i + 1);\n        node.y1 += y * (i + 1);\n      }\n      reorderLinks(nodes);\n    }\n  }\n\n  function computeNodeBreadths(graph) {\n    const columns = computeNodeLayers(graph);\n    py = Math.min(dy, (y1 - y0) / (max(columns, c => c.length) - 1));\n    initializeNodeBreadths(columns);\n    for (let i = 0; i < iterations; ++i) {\n      const alpha = Math.pow(0.99, i);\n      const beta = Math.max(1 - alpha, (i + 1) / iterations);\n      relaxRightToLeft(columns, alpha, beta);\n      relaxLeftToRight(columns, alpha, beta);\n    }\n  }\n\n  // Reposition each node based on its incoming (target) links.\n  function relaxLeftToRight(columns, alpha, beta) {\n    for (let i = 1, n = columns.length; i < n; ++i) {\n      const column = columns[i];\n      for (const target of column) {\n        let y = 0;\n        let w = 0;\n        for (const {source, value} of target.targetLinks) {\n          let v = value * (target.layer - source.layer);\n          y += targetTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - target.y0) * alpha;\n        target.y0 += dy;\n        target.y1 += dy;\n        reorderNodeLinks(target);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  // Reposition each node based on its outgoing (source) links.\n  function relaxRightToLeft(columns, alpha, beta) {\n    for (let n = columns.length, i = n - 2; i >= 0; --i) {\n      const column = columns[i];\n      for (const source of column) {\n        let y = 0;\n        let w = 0;\n        for (const {target, value} of source.sourceLinks) {\n          let v = value * (target.layer - source.layer);\n          y += sourceTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - source.y0) * alpha;\n        source.y0 += dy;\n        source.y1 += dy;\n        reorderNodeLinks(source);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  function resolveCollisions(nodes, alpha) {\n    const i = nodes.length >> 1;\n    const subject = nodes[i];\n    resolveCollisionsBottomToTop(nodes, subject.y0 - py, i - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, subject.y1 + py, i + 1, alpha);\n    resolveCollisionsBottomToTop(nodes, y1, nodes.length - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, y0, 0, alpha);\n  }\n\n  // Push any overlapping nodes down.\n  function resolveCollisionsTopToBottom(nodes, y, i, alpha) {\n    for (; i < nodes.length; ++i) {\n      const node = nodes[i];\n      const dy = (y - node.y0) * alpha;\n      if (dy > 1e-6) node.y0 += dy, node.y1 += dy;\n      y = node.y1 + py;\n    }\n  }\n\n  // Push any overlapping nodes up.\n  function resolveCollisionsBottomToTop(nodes, y, i, alpha) {\n    for (; i >= 0; --i) {\n      const node = nodes[i];\n      const dy = (node.y1 - y) * alpha;\n      if (dy > 1e-6) node.y0 -= dy, node.y1 -= dy;\n      y = node.y0 - py;\n    }\n  }\n\n  function reorderNodeLinks({sourceLinks, targetLinks}) {\n    if (linkSort === undefined) {\n      for (const {source: {sourceLinks}} of targetLinks) {\n        sourceLinks.sort(ascendingTargetBreadth);\n      }\n      for (const {target: {targetLinks}} of sourceLinks) {\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  function reorderLinks(nodes) {\n    if (linkSort === undefined) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(ascendingTargetBreadth);\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  // Returns the target.y0 that would produce an ideal link from source to target.\n  function targetTop(source, target) {\n    let y = source.y0 - (source.sourceLinks.length - 1) * py / 2;\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y += width + py;\n    }\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  // Returns the source.y0 that would produce an ideal link from source to target.\n  function sourceTop(source, target) {\n    let y = target.y0 - (target.targetLinks.length - 1) * py / 2;\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y += width + py;\n    }\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  return sankey;\n}\n","import {linkHorizontal} from \"d3-shape\";\n\nfunction horizontalSource(d) {\n  return [d.source.x1, d.y0];\n}\n\nfunction horizontalTarget(d) {\n  return [d.target.x0, d.y1];\n}\n\nexport default function() {\n  return linkHorizontal()\n      .source(horizontalSource)\n      .target(horizontalTarget);\n}\n"],"sourceRoot":""}