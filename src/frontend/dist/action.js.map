{"version":3,"sources":["webpack:///./frontend/src/scenes/actions/EventName.js","webpack:///./frontend/src/lib/components/AppEditorLink/utils.js","webpack:///./frontend/src/lib/components/AppEditorLink/UrlRow.js","webpack:///./frontend/src/lib/components/AppEditorLink/ChooseURLModal.js","webpack:///./frontend/src/lib/components/AppEditorLink/AppEditorLink.js","webpack:///./frontend/src/scenes/actions/ActionStep.js","webpack:///./frontend/src/scenes/actions/ActionEdit.js","webpack:///./frontend/src/scenes/actions/Action.js"],"names":["EventName","value","onChange","eventNamesGrouped","useValues","userLogic","options","isSearchable","isClearable","disabled","length","label","href","target","appEditorUrl","actionId","appUrl","encodeURIComponent","UrlRow","url","saveUrl","deleteUrl","useState","isEditing","setIsEditing","savedValue","setSavedValue","editedValue","setEditedValue","className","key","style","display","width","e","autoFocus","flex","type","placeholder","marginLeft","onClick","preventDefault","float","ChooseURLModal","dismissModal","user","useActions","setUser","loadUser","userUpdateRequest","appUrls","team","app_urls","newValue","setNewValue","addingNew","setAddingNew","index","callback","newUrls","concat","map","i","willRedirect","api","update","then","useEffect","Modal","title","footer","onDismiss","maxWidth","name","window","location","filter","v","AppEditorLink","children","modalOpen","setModalOpen","getSafeText","el","childNodes","elText","forEach","child","nodeType","textContent","trim","replace","substring","ActionStep","props","state","step","selection","Object","keys","onMouseOver","bind","onKeyDown","Option","sendStep","AutocaptureFields","TypeSwitcher","URLMatching","stop","box","document","createElement","body","appendChild","element","rect","getBoundingClientRect","this","position","top","parseInt","pageYOffset","left","pageXOffset","right","height","bottom","background","opacity","zIndex","event","currentTarget","drawBox","query","simmer","d","toLowerCase","tagName","getAttribute","tag_name","text","selector","protocol","host","pathname","setState","keyCode","querySelectorAll","addEventListener","capture","transition","boxShadow","removeEventListener","selectorError","matches","item","indexOf","isEditor","checked","push","extra_options","marginTop","margin","url_matching","marginBottom","aria-label","onDelete","aria-hidden","start","Component","propTypes","PropTypes","bool","object","func","ActionEdit","action","steps","edited","focus","slackEnabled","slack_incoming_webhook","params","temporaryToken","fetchAction","call","onSubmit","get","apiURL","isNew","uuid","createNew","form","checkValidity","id","save","error","saved","count","onSave","toast","autoClose","hideProgressBar","detail","error_id","data","post_to_slack","create","addGroup","required","textAlign","fontSize","letterSpacing","s","newStep","marginRight","Link","to","showNewActionButton","Action","fixedFilters","action_id","router","fetchEvents","eventsTableLogic","filtersEnabled"],"mappings":"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","file":"action.js","sourcesContent":["import React, { Component } from 'react'\nimport api from '../../lib/api'\nimport Select from 'react-select'\nimport PropTypes from 'prop-types'\nimport { useValues } from 'kea'\nimport { userLogic } from 'scenes/userLogic'\n\nexport function EventName({ value, onChange }) {\n    const { eventNamesGrouped } = useValues(userLogic)\n    return (\n        <span>\n            <Select\n                options={eventNamesGrouped}\n                isSearchable={true}\n                isClearable={true}\n                onChange={onChange}\n                disabled={eventNamesGrouped[0].options.length === 0}\n                value={value ? { label: value, value } : null}\n            />\n            <br />\n            {eventNamesGrouped[0].options.length === 0 && \"You haven't sent any custom events.\"}{' '}\n            <a href=\"https://docs.posthog.com/#/integrations\" target=\"_blank\">\n                See documentation\n            </a>{' '}\n            on how to send custom events in lots of languages.\n        </span>\n    )\n}\n","export function appEditorUrl(actionId, appUrl) {\n    return (\n        '/api/user/redirect_to_site/' +\n        (actionId ? '?actionId=' + actionId : '') +\n        (appUrl\n            ? `${actionId ? '&' : '?'}appUrl=${encodeURIComponent(appUrl)}`\n            : '')\n    )\n}\nexport const defaultUrl = 'https://'\n","import React, { useState } from 'react'\n\nimport { appEditorUrl, defaultUrl } from './utils'\n\nexport function UrlRow({ actionId, url, saveUrl, deleteUrl }) {\n    const [isEditing, setIsEditing] = useState(url === defaultUrl)\n    const [savedValue, setSavedValue] = useState(url || defaultUrl)\n    const [editedValue, setEditedValue] = useState(url || defaultUrl)\n\n    return (\n        <li className=\"list-group-item\">\n            {isEditing ? (\n                <div key=\"form\" style={{ display: 'flex', width: '100%' }}>\n                    <input\n                        value={editedValue}\n                        onChange={e => setEditedValue(e.target.value)}\n                        autoFocus\n                        style={{ flex: '1' }}\n                        type=\"url\"\n                        className=\"form-control\"\n                        placeholder={defaultUrl}\n                    />\n                    <button\n                        className=\"btn btn-primary\"\n                        style={{ marginLeft: 5 }}\n                        onClick={() => {\n                            if (editedValue === defaultUrl) {\n                                deleteUrl()\n                            } else {\n                                saveUrl(editedValue, () => {\n                                    setIsEditing(false)\n                                    setSavedValue(editedValue)\n                                })\n                            }\n                        }}\n                    >\n                        Save\n                    </button>\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        style={{ marginLeft: 5 }}\n                        onClick={() => {\n                            if (url === defaultUrl) {\n                                deleteUrl()\n                            } else {\n                                setIsEditing(false)\n                                setEditedValue(savedValue || url || defaultUrl)\n                            }\n                        }}\n                    >\n                        Cancel\n                    </button>\n                </div>\n            ) : typeof url === 'undefined' ? (\n                <div key=\"add-new\">\n                    <a\n                        href=\"#\"\n                        onClick={e => {\n                            e.preventDefault()\n                            setIsEditing(true)\n                        }}\n                    >\n                        + Add Another URL\n                    </a>\n                </div>\n            ) : (\n                <div key=\"list\">\n                    <div style={{ float: 'right' }}>\n                        <button\n                            className=\"no-style\"\n                            onClick={() => setIsEditing(true)}\n                        >\n                            <i className=\"fi flaticon-edit text-primary\" />\n                        </button>\n                        <button\n                            className=\"no-style text-danger\"\n                            onClick={deleteUrl}\n                        >\n                            <i className=\"fi flaticon-basket\" />\n                        </button>\n                    </div>\n                    <a href={appEditorUrl(actionId, editedValue)}>\n                        {editedValue}\n                    </a>\n                </div>\n            )}\n        </li>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useActions, useValues } from 'kea'\nimport { Modal } from '../Modal'\nimport api from '../../api'\nimport { userLogic } from '../../../scenes/userLogic'\nimport { UrlRow } from './UrlRow'\nimport { appEditorUrl, defaultUrl } from './utils'\n\nexport function ChooseURLModal({ actionId, dismissModal }) {\n    const { user } = useValues(userLogic)\n    const { setUser, loadUser, userUpdateRequest } = useActions(userLogic)\n    const appUrls = user.team.app_urls\n\n    const [newValue, setNewValue] = useState(defaultUrl)\n    const [addingNew, setAddingNew] = useState(false)\n\n    // We run this effect so that the URLs are the latest ones from the database.\n    // Otherwise if you edit/add an URL, click to it and then click back, you will\n    // see state urls (i.e. without the one you just added)\n    useEffect(() => {\n        loadUser()\n    }, []) // run just once\n\n    function saveUrl({ index, value, callback }) {\n        const newUrls =\n            typeof index === 'undefined'\n                ? appUrls.concat([value])\n                : appUrls.map((url, i) => (i === index ? value : url))\n\n        const willRedirect =\n            appUrls.length === 0 && typeof index === 'undefined'\n\n        api.update('api/user', { team: { app_urls: newUrls } }).then(user => {\n            callback(newUrls)\n\n            // Do not set the app urls when redirecting.\n            // Doing so is bad UX as the screen will flash from the \"add first url\" dialog to\n            // the \"here are all the urls\" dialog before the user is redirected away\n            if (!willRedirect) {\n                setUser(user)\n            }\n            if (!index) {\n                setAddingNew(false)\n            }\n        })\n    }\n\n    function deleteUrl({ index }) {\n        const newUrls = appUrls.filter((v, i) => i !== index)\n        userUpdateRequest({ team: { app_urls: newUrls } })\n    }\n\n    return (\n        <Modal\n            title={\n                actionId\n                    ? 'Where do you want to edit this action?'\n                    : 'On which domain do you want to create an action?'\n            }\n            footer={\n                appUrls.length > 0 &&\n                !addingNew && (\n                    <div style={{ flex: 1 }}>\n                        <button\n                            className=\"btn btn-outline-secondary\"\n                            style={{ flex: 1 }}\n                            onClick={() => setAddingNew(true)}\n                        >\n                            + Add Another URL\n                        </button>\n                    </div>\n                )\n            }\n            onDismiss={dismissModal}\n        >\n            {appUrls.length === 0 ? (\n                <div>\n                    <input\n                        value={newValue}\n                        onChange={e => setNewValue(e.target.value)}\n                        autoFocus\n                        style={{ maxWidth: 400 }}\n                        type=\"url\"\n                        className=\"form-control\"\n                        name=\"url\"\n                        placeholder={defaultUrl}\n                    />\n                    <br />\n                    <button\n                        onClick={() =>\n                            saveUrl({\n                                value: newValue,\n                                callback: () => {\n                                    window.location.href = appEditorUrl(\n                                        actionId,\n                                        newValue\n                                    )\n                                },\n                            })\n                        }\n                        className=\"btn btn-success\"\n                        type=\"button\"\n                    >\n                        Save URL & go\n                    </button>\n                </div>\n            ) : (\n                <ul className=\"list-group\">\n                    {appUrls.map((url, index) => (\n                        <UrlRow\n                            key={`${index},${url}`}\n                            actionId={actionId}\n                            url={url}\n                            saveUrl={(value, callback) =>\n                                saveUrl({ index, value, callback })\n                            }\n                            deleteUrl={() => deleteUrl({ index })}\n                        />\n                    ))}\n                    {addingNew ? (\n                        <UrlRow\n                            actionId={actionId}\n                            url={defaultUrl}\n                            saveUrl={(value, callback) =>\n                                saveUrl({ value, callback })\n                            }\n                            deleteUrl={() => setAddingNew(false)}\n                        />\n                    ) : null}\n                </ul>\n            )}\n        </Modal>\n    )\n}\n","import React, { useState } from 'react'\nimport { useValues } from 'kea'\n\nimport { ChooseURLModal } from './ChooseURLModal'\nimport { appEditorUrl } from './utils'\nimport { userLogic } from '../../../scenes/userLogic'\n\nexport function AppEditorLink({ actionId, style, className, children }) {\n    const [modalOpen, setModalOpen] = useState(false)\n    const { user } = useValues(userLogic)\n    const appUrls = user.team.app_urls\n\n    return (\n        <>\n            <a\n                href={appEditorUrl(actionId, appUrls && appUrls[0])}\n                style={style}\n                className={className}\n                onClick={e => {\n                    e.preventDefault()\n                    setModalOpen(true)\n                }}\n            >\n                {children}\n            </a>\n            {modalOpen && (\n                <ChooseURLModal\n                    actionId={actionId}\n                    dismissModal={() => setModalOpen(false)}\n                />\n            )}\n        </>\n    )\n}\n","import React, { Component } from 'react'\nimport { EventName } from './EventName'\nimport { AppEditorLink } from '../../lib/components/AppEditorLink/AppEditorLink'\nimport PropTypes from 'prop-types'\n\nlet getSafeText = el => {\n    if (!el.childNodes || !el.childNodes.length) return\n    let elText = ''\n    el.childNodes.forEach(child => {\n        if (child.nodeType !== 3 || !child.textContent) return\n        elText += child.textContent\n            .trim()\n            .replace(/[\\r\\n]/g, ' ')\n            .replace(/[ ]+/g, ' ') // normalize whitespace\n            .substring(0, 255)\n    })\n    return elText\n}\nexport class ActionStep extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            step: props.step,\n            selection: Object.keys(props.step).filter(key => key != 'id' && key != 'isNew' && props.step[key]),\n        }\n        this.onMouseOver = this.onMouseOver.bind(this)\n        this.onKeyDown = this.onKeyDown.bind(this)\n        this.Option = this.Option.bind(this)\n        this.sendStep = this.sendStep.bind(this)\n        this.AutocaptureFields = this.AutocaptureFields.bind(this)\n        this.TypeSwitcher = this.TypeSwitcher.bind(this)\n        this.URLMatching = this.URLMatching.bind(this)\n        this.stop = this.stop.bind(this)\n\n        this.box = document.createElement('div')\n        document.body.appendChild(this.box)\n    }\n    drawBox(element) {\n        let rect = element.getBoundingClientRect()\n        this.box.style.display = 'block'\n        this.box.style.position = 'absolute'\n        this.box.style.top = parseInt(rect.top + window.pageYOffset) + 'px'\n        this.box.style.left = parseInt(rect.left + window.pageXOffset) + 'px'\n        this.box.style.width = parseInt(rect.right - rect.left) + 'px'\n        this.box.style.height = parseInt(rect.bottom - rect.top) + 'px'\n        this.box.style.background = '#007bff'\n        this.box.style.opacity = '0.5'\n        this.box.style.zIndex = '9999999999'\n    }\n    onMouseOver(event) {\n        let el = event.currentTarget\n        this.drawBox(el)\n        let query = this.props.simmer(el)\n        // Turn tags into lower cases\n        query = query.replace(/(^[A-Z]+| [A-Z]+)/g, d => d.toLowerCase())\n        let tagName = el.tagName.toLowerCase()\n\n        let selection = ['selector']\n        if (tagName == 'a') selection = ['href', 'selector']\n        else if (tagName == 'button') selection = ['text', 'selector']\n        else if (el.getAttribute('name')) selection = ['name', 'selector']\n        let step = {\n            ...this.props.step,\n            event: '$autocapture',\n            tag_name: tagName,\n            href: el.getAttribute('href') || '',\n            name: el.getAttribute('name') || '',\n            text: getSafeText(el) || '',\n            selector: query || '',\n            url: window.location.protocol + '//' + window.location.host + window.location.pathname,\n        }\n        this.setState(\n            {\n                element: el,\n                selection,\n            },\n            () => this.sendStep(step)\n        )\n    }\n    onKeyDown(event) {\n        // stop selecting if esc key was pressed\n        if (event.keyCode == 27) this.stop()\n    }\n    start() {\n        document.querySelectorAll('a, button, input, select, textarea, label').forEach(element => {\n            element.addEventListener('mouseover', this.onMouseOver, {\n                capture: true,\n            })\n        })\n        document.addEventListener('keydown', this.onKeyDown)\n        document.body.style.transition = '0.7s box-shadow'\n        // document.body.style.boxShadow = 'inset 0 0px 13px -2px #dc3545';\n        document.body.style.boxShadow = 'inset 0 0px 30px -5px #007bff'\n        this.box.addEventListener('click', this.stop)\n    }\n    stop() {\n        this.box.style.display = 'none'\n        document.body.style.boxShadow = 'none'\n        document.querySelectorAll('a, button, input, select, textarea, label').forEach(element => {\n            element.removeEventListener('mouseover', this.onMouseOver, {\n                capture: true,\n            })\n        })\n        document.removeEventListener('keydown', this.onKeyDown)\n    }\n    sendStep(step) {\n        step.selection = this.state.selection\n        this.props.onChange(step)\n    }\n    Option(props) {\n        let onChange = e => {\n            this.props.step[props.item] = e.target.value\n\n            if (e.target.value && this.state.selection.indexOf(props.item) === -1) {\n                this.setState({ selection: this.state.selection.concat([props.item]) }, () =>\n                    this.sendStep(this.props.step)\n                )\n            } else if (!e.target.value && this.state.selection.indexOf(props.item) > -1) {\n                this.setState(\n                    {\n                        selection: this.state.selection.filter(i => i !== props.item),\n                    },\n                    () => this.sendStep(this.props.step)\n                )\n            } else {\n                this.sendStep(this.props.step)\n            }\n        }\n        let selectorError, matches\n        try {\n            matches = document.querySelectorAll(props.selector).length\n        } catch {\n            selectorError = true\n        }\n        return (\n            <div className={'form-group ' + (this.state.selection.indexOf(props.item) > -1 && 'selected')}>\n                {props.selector && this.props.isEditor && (\n                    <small className={'form-text float-right ' + (selectorError ? 'text-danger' : 'text-muted')}>\n                        {selectorError ? 'Invalid selector' : `Matches ${matches} elements`}\n                    </small>\n                )}\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        name=\"selection\"\n                        checked={this.state.selection.indexOf(props.item) > -1}\n                        value={props.item}\n                        onChange={e => {\n                            if (e.target.checked) {\n                                this.state.selection.push(props.item)\n                            } else {\n                                this.state.selection = this.state.selection.filter(i => i !== props.item)\n                            }\n                            this.setState({ selection: this.state.selection }, () => this.sendStep(this.props.step))\n                        }}\n                    />{' '}\n                    {props.label} {props.extra_options}\n                </label>\n                {props.item == 'selector' ? (\n                    <textarea className=\"form-control\" onChange={onChange} value={this.props.step[props.item] || ''} />\n                ) : (\n                    <input className=\"form-control\" onChange={onChange} value={this.props.step[props.item] || ''} />\n                )}\n            </div>\n        )\n    }\n    TypeSwitcher() {\n        let { step, isEditor } = this.props\n        return (\n            <div>\n                <div className=\"btn-group\">\n                    <button\n                        type=\"button\"\n                        onClick={() =>\n                            this.setState(\n                                {\n                                    selection: Object.keys(step).filter(\n                                        key => key != 'id' && key != 'isNew' && step[key]\n                                    ),\n                                },\n                                () => this.sendStep({ ...step, event: '$autocapture' })\n                            )\n                        }\n                        className={'btn ' + (step.event == '$autocapture' ? 'btn-secondary' : 'btn-light')}\n                    >\n                        Frontend element\n                    </button>\n                    <button\n                        type=\"button\"\n                        onClick={() => this.sendStep({ ...step, event: '' })}\n                        className={\n                            'btn ' +\n                            (typeof step.event !== 'undefined' &&\n                            step.event != '$autocapture' &&\n                            step.event != '$pageview'\n                                ? 'btn-secondary'\n                                : 'btn-light')\n                        }\n                    >\n                        Custom event\n                    </button>\n                    <button\n                        type=\"button\"\n                        onClick={() => {\n                            this.setState({ selection: ['url'] }, () =>\n                                this.sendStep({\n                                    ...step,\n                                    event: '$pageview',\n                                    url: isEditor\n                                        ? window.location.protocol +\n                                          '//' +\n                                          window.location.host +\n                                          window.location.pathname\n                                        : step.url,\n                                })\n                            )\n                        }}\n                        className={'btn ' + (step.event == '$pageview' ? 'btn-secondary' : 'btn-light')}\n                    >\n                        Page view\n                    </button>\n                </div>\n                {step.event != null && step.event != '$autocapture' && step.event != '$pageview' && (\n                    <div style={{ marginTop: '2rem' }}>\n                        <label>Event name</label>\n                        <EventName\n                            value={step.event}\n                            onChange={item =>\n                                this.sendStep({\n                                    ...step,\n                                    event: item.value,\n                                })\n                            }\n                        />\n                    </div>\n                )}\n            </div>\n        )\n    }\n    AutocaptureFields({ step, isEditor, actionId }) {\n        return (\n            <div>\n                {!isEditor && (\n                    <span>\n                        <AppEditorLink\n                            actionId={actionId}\n                            style={{ margin: '1rem 0' }}\n                            className=\"btn btn-sm btn-light\"\n                        >\n                            Select element on site <i className=\"fi flaticon-export\" />\n                        </AppEditorLink>\n                        <a href=\"https://docs.posthog.com/#/features/actions\" target=\"_blank\" style={{ marginLeft: 8 }}>\n                            See documentation.\n                        </a>{' '}\n                    </span>\n                )}\n                {(isEditor || step.selector || step.href || step.text) && (\n                    <span>\n                        <this.Option\n                            item=\"href\"\n                            label=\"Link href\"\n                            selector={this.state.element && 'a[href=\"' + this.state.element.getAttribute('href') + '\"]'}\n                        />\n                        <this.Option item=\"text\" label=\"Text\" />\n                        <this.Option item=\"selector\" label=\"Selector\" selector={step.selector} />\n                        <this.Option\n                            item=\"url\"\n                            extra_options={<this.URLMatching step={step} isEditor={isEditor} />}\n                            label=\"URL\"\n                        />\n                    </span>\n                )}\n            </div>\n        )\n    }\n    URLMatching({ step, isEditor }) {\n        return (\n            <div className=\"btn-group\" style={{ margin: isEditor ? '4px 0 0 8px' : '0 0 0 8px' }}>\n                <button\n                    onClick={() => this.sendStep({ ...step, url_matching: 'contains' })}\n                    type=\"button\"\n                    className={\n                        'btn btn-sm ' +\n                        (!step.url_matching || step.url_matching == 'contains' ? 'btn-secondary' : 'btn-light')\n                    }\n                >\n                    contains\n                </button>\n                <button\n                    onClick={() => this.sendStep({ ...step, url_matching: 'exact' })}\n                    type=\"button\"\n                    className={'btn btn-sm ' + (step.url_matching == 'exact' ? 'btn-secondary' : 'btn-light')}\n                >\n                    exactly matches\n                </button>\n            </div>\n        )\n    }\n    render() {\n        let { step, isEditor, actionId } = this.props\n\n        return (\n            <div\n                className={isEditor ? '' : 'card'}\n                style={{\n                    marginBottom: 0,\n                    background: isEditor ? 'rgba(0,0,0,0.05)' : '',\n                }}\n            >\n                <div className={isEditor ? '' : 'card-body'}>\n                    {(!isEditor || step.event === '$autocapture' || !step.event) && (\n                        <button\n                            style={{\n                                margin: isEditor ? '12px 12px 0px 0px' : '-3px 0 0 0',\n                            }}\n                            type=\"button\"\n                            className=\"close pull-right\"\n                            aria-label=\"Close\"\n                            onClick={this.props.onDelete}\n                        >\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    )}\n                    {!isEditor && <this.TypeSwitcher />}\n                    <div\n                        style={{\n                            marginTop: step.event === '$pageview' && !isEditor ? 20 : 8,\n                        }}\n                    >\n                        {isEditor && (\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-sm btn-secondary\"\n                                style={{ margin: '10px 0px 10px 12px' }}\n                                onClick={() => this.start()}\n                            >\n                                Inspect element\n                            </button>\n                        )}\n\n                        {step.event === '$autocapture' && (\n                            <this.AutocaptureFields step={step} isEditor={isEditor} actionId={actionId} />\n                        )}\n                        {step.event === '$pageview' && (\n                            <div>\n                                <this.Option\n                                    item=\"url\"\n                                    extra_options={<this.URLMatching step={step} isEditor={isEditor} />}\n                                    label=\"URL\"\n                                />\n                                {(!step.url_matching || step.url_matching == 'contains') && (\n                                    <small style={{ display: 'block', marginTop: -12 }}>\n                                        Use '%' for wildcard, for example: /user/%/edit\n                                    </small>\n                                )}\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nActionStep.propTypes = {\n    isEditor: PropTypes.bool,\n    step: PropTypes.object,\n    simmer: PropTypes.func,\n}\n","import React, { Component, Fragment } from 'react'\nimport api from 'lib/api'\nimport { uuid } from 'lib/utils'\nimport PropTypes from 'prop-types'\nimport { Link } from 'lib/components/Link'\nimport { toast } from 'react-toastify'\n\nimport { ActionStep } from './ActionStep'\n\nexport class ActionEdit extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            action: { name: '', steps: [] },\n            edited: false,\n            focus: true,\n            slackEnabled: props.user && props.user.team && props.user.team.slack_incoming_webhook,\n        }\n        this.params = '?include_count=1' + (props.temporaryToken ? '&temporary_token=' + props.temporaryToken : '')\n        this.fetchAction.call(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n    fetchAction() {\n        if (this.props.actionId) {\n            this.state.focus = false\n            return api\n                .get(this.props.apiURL + 'api/action/' + this.props.actionId + '/' + this.params)\n                .then(action => this.setState({ action }))\n        }\n        // If it's a new action, add an empty step\n        this.state.action = { name: '', steps: [{ isNew: uuid() }] }\n    }\n    onSubmit(event, createNew) {\n        if (!event.target.form.checkValidity() || !this.state.edited) return\n        let isNew = !this.state.action.id\n        let save = action => {\n            this.setState({\n                error: false,\n                saved: true,\n                action: {\n                    ...this.state.action,\n                    id: action.id,\n                    count: action.count,\n                },\n                edited: false,\n            })\n            if (this.props.onSave) this.props.onSave(action, isNew, createNew)\n            toast('Action Saved', { autoClose: 3000, hideProgressBar: true })\n        }\n        let error = detail => {\n            if (detail.detail == 'action-exists')\n                this.setState({\n                    saved: false,\n                    error: 'action-exists',\n                    error_id: detail.id,\n                })\n        }\n        let steps = this.state.action.steps.map(step => {\n            if (step.event == '$pageview') step.selection = ['url', 'url_matching']\n            if (step.event != '$pageview' && step.event != '$autocapture') step.selection = []\n            if (!step.selection) return step\n            let data = {}\n            Object.keys(step).map(key => {\n                data[key] = key == 'id' || key == 'event' || step.selection.indexOf(key) > -1 ? step[key] : null\n            })\n            return data\n        })\n        if (this.state.action.id) {\n            return api\n                .update(this.props.apiURL + 'api/action/' + this.state.action.id + '/' + this.params, {\n                    name: this.state.action.name,\n                    post_to_slack: this.state.action.post_to_slack,\n                    steps,\n                })\n                .then(save)\n                .catch(error)\n        }\n        api.create(this.props.apiURL + 'api/action/' + this.params, {\n            name: this.state.action.name,\n            post_to_slack: this.state.action.post_to_slack,\n            steps,\n        })\n            .then(save)\n            .catch(error)\n    }\n    render() {\n        let action = this.state.action\n        let { isEditor, simmer } = this.props\n\n        const addGroup = (\n            <button\n                type=\"button\"\n                className=\"btn btn-outline-success btn-sm\"\n                onClick={() => {\n                    action.steps.push({ isNew: uuid() })\n                    this.setState({ action: action })\n                }}\n            >\n                Add another match group\n            </button>\n        )\n\n        return (\n            <div className={isEditor ? '' : 'card'} style={{ marginTop: isEditor ? 8 : '' }}>\n                <form className={isEditor ? '' : 'card-body'} onSubmit={e => e.preventDefault()}>\n                    <input\n                        autoFocus={this.state.focus}\n                        required\n                        className=\"form-control\"\n                        placeholder=\"For example: user signed up\"\n                        value={action.name}\n                        onChange={e =>\n                            this.setState({\n                                action: { ...action, name: e.target.value },\n                                edited: e.target.value ? true : false,\n                            })\n                        }\n                    />\n\n                    {action.count > -1 && (\n                        <div>\n                            <small className=\"text-muted\">Matches {action.count} events</small>\n                        </div>\n                    )}\n\n                    {!isEditor && <br />}\n\n                    {action.steps.map((step, index) => (\n                        <Fragment key={index}>\n                            {index > 0 ? (\n                                <div\n                                    style={{\n                                        textAlign: 'center',\n                                        fontSize: 13,\n                                        letterSpacing: 1,\n                                        opacity: 0.7,\n                                        margin: 8,\n                                    }}\n                                >\n                                    OR\n                                </div>\n                            ) : null}\n                            <ActionStep\n                                key={step.id || step.isNew}\n                                step={step}\n                                isEditor={isEditor}\n                                actionId={action.id}\n                                simmer={simmer}\n                                onDelete={() => {\n                                    action.steps = action.steps.filter(s => s.id != step.id)\n                                    this.setState({ action: action })\n                                }}\n                                onChange={newStep => {\n                                    action.steps = action.steps.map(s =>\n                                        (step.id && s.id == step.id) || (step.isNew && s.isNew === step.isNew)\n                                            ? {\n                                                  id: step.id,\n                                                  isNew: step.isNew,\n                                                  ...newStep,\n                                              }\n                                            : s\n                                    )\n                                    this.setState({ action: action, edited: true })\n                                }}\n                            />\n                        </Fragment>\n                    ))}\n\n                    {!isEditor ? (\n                        <div style={{ marginTop: 20, marginBottom: 15 }}>\n                            <label className={this.state.slackEnabled ? '' : 'disabled'} style={{ marginRight: 5 }}>\n                                <input\n                                    type=\"checkbox\"\n                                    onChange={e => {\n                                        this.setState({\n                                            action: { ...action, post_to_slack: e.target.checked },\n                                            edited: true,\n                                        })\n                                    }}\n                                    checked={!!action.post_to_slack}\n                                    disabled={!this.state.slackEnabled}\n                                />\n                                &nbsp;Post to Slack when this action is triggered.\n                            </label>\n                            <Link to=\"/setup#slack\">\n                                <small>Configure</small>\n                            </Link>\n                        </div>\n                    ) : (\n                        <br />\n                    )}\n\n                    {this.state.error && (\n                        <p className=\"text-danger\">\n                            Action with this name already exists.{' '}\n                            <a href={this.props.apiURL + 'action/' + this.state.error_id}>Click here to edit.</a>\n                        </p>\n                    )}\n\n                    {isEditor ? <div style={{ marginBottom: 20 }}>{addGroup}</div> : null}\n\n                    <div className={isEditor ? 'btn-group save-buttons' : ''}>\n                        {!isEditor ? addGroup : null}\n                        <button\n                            type=\"submit\"\n                            disabled={!this.state.edited}\n                            onClick={e => this.onSubmit(e)}\n                            className={\n                                this.state.edited\n                                    ? 'btn-success btn btn-sm float-right'\n                                    : 'btn-secondary btn btn-sm float-right'\n                            }\n                        >\n                            Save action\n                        </button>\n\n                        {this.props.isEditor && this.props.showNewActionButton && (\n                            <button\n                                type=\"submit\"\n                                onClick={e => this.onSubmit(e, true)}\n                                className=\"btn btn-secondary btn-sm float-right\"\n                            >\n                                Save & new action\n                            </button>\n                        )}\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nActionEdit.propTypes = {\n    isEditor: PropTypes.bool,\n    simmer: PropTypes.func,\n    onSave: PropTypes.func,\n}\n","import React from 'react'\nimport { EventsTable } from '../events/EventsTable'\nimport { ActionEdit } from './ActionEdit'\nimport { useActions, useValues } from 'kea'\nimport { router } from 'kea-router'\nimport { userLogic } from 'scenes/userLogic'\nimport { eventsTableLogic } from 'scenes/events/eventsTableLogic'\n\nexport function Action({ id }) {\n    const fixedFilters = { action_id: id }\n\n    const { push } = useActions(router)\n    const { user } = useValues(userLogic)\n    const { fetchEvents } = useActions(eventsTableLogic({ fixedFilters }))\n\n    return (\n        <div>\n            <h1>{id ? 'Edit action' : 'New action'}</h1>\n            <ActionEdit\n                apiURL=\"\"\n                actionId={id}\n                user={user}\n                onSave={action => {\n                    if (!id) {\n                        push(`/action/${action.id}`)\n                    }\n                    fetchEvents()\n                }}\n            />\n            <br />\n            <br />\n\n            <h2>Events</h2>\n            <EventsTable fixedFilters={fixedFilters} filtersEnabled={false} />\n        </div>\n    )\n}\n"],"sourceRoot":""}