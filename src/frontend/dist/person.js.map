{"version":3,"sources":["webpack:///./frontend/src/scenes/users/Person.js"],"names":["Person","distinctId","id","useState","person","setPerson","useEffect","url","api","get","then","className","danger","onClick","deletePersonData","history","push","name","style","maxWidth","properties","distinct_ids","map","distinct_id","margin","key","fixedFilters","person_id"],"mappings":"gOAOO,SAASA,EAAT,GAAoC,IAAlBC,EAAkB,EAAlBA,WAAYC,EAAM,EAANA,GACjC,EAA4BC,mBAAS,MAArC,WAAOC,EAAP,KAAeC,EAAf,KAYA,OAVAC,qBAAU,WACN,IAAIC,EAAM,GAENA,EADAN,EACM,0CAAH,OAA6CA,GAE1C,cAAH,OAAiBC,GAExBM,IAAIC,IAAIF,GAAKG,KAAKL,KACnB,CAACJ,EAAYC,IAETE,EACH,6BACI,uBACIO,UAAU,cACVC,QAAM,EACNC,QAAS,kBAAMC,YAAiBV,GAAQ,kBAAMW,QAAQC,KAAK,gBAH/D,kCAOA,4BAAKZ,EAAOa,MACZ,yBAAKC,MAAO,CAAEC,SAAU,MACpB,kBAAC,IAAD,CAAiBC,WAAYhB,EAAOgB,aACpC,2BAAOT,UAAU,SACb,+BACI,4BACI,4CACA,4BACKP,EAAOiB,aAAaC,KAAI,SAAAC,GAAW,OAChC,yBAAKL,MAAO,CAAEM,OAAQ,GAAKC,IAAKF,GAC3BA,WAQ7B,kBAAC,IAAD,CAAaG,aAAc,CAAEC,UAAWvB,EAAOF,OAEnD","file":"person.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { EventsTable } from '../events/EventsTable'\nimport api from 'lib/api'\nimport { PropertiesTable } from 'lib/components/PropertiesTable'\nimport { deletePersonData } from 'lib/utils'\nimport { Button } from 'antd'\n\nexport function Person({ distinctId, id }) {\n    const [person, setPerson] = useState(null)\n\n    useEffect(() => {\n        let url = ''\n        if (distinctId) {\n            url = `api/person/by_distinct_id/?distinct_id=${distinctId}`\n        } else {\n            url = `api/person/${id}`\n        }\n        api.get(url).then(setPerson)\n    }, [distinctId, id])\n\n    return person ? (\n        <div>\n            <Button\n                className=\"float-right\"\n                danger\n                onClick={() => deletePersonData(person, () => history.push('/people'))}\n            >\n                Delete all data on this person\n            </Button>\n            <h1>{person.name}</h1>\n            <div style={{ maxWidth: 750 }}>\n                <PropertiesTable properties={person.properties} />\n                <table className=\"table\">\n                    <tbody>\n                        <tr>\n                            <td>Distinct IDs</td>\n                            <td>\n                                {person.distinct_ids.map(distinct_id => (\n                                    <pre style={{ margin: 0 }} key={distinct_id}>\n                                        {distinct_id}\n                                    </pre>\n                                ))}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <EventsTable fixedFilters={{ person_id: person.id }} />\n        </div>\n    ) : null\n}\n"],"sourceRoot":""}